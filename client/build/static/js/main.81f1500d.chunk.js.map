{"version":3,"sources":["actions/LoginAction.js","actions/PortfolioAction.js","res/assets/resumate3.svg","handlers/errorHandler.js","components/Navbar.jsx","styles/fonts/LiquidCrystal-Normal.woff2","styles/fonts/LiquidCrystal-Bold.woff2","styles/fonts/LiquidCrystal-Light.woff2","styles/fonts/LiquidCrystal-BoldItalic.woff2","styles/fonts/LiquidCrystal-ExBold.woff2","styles/fonts/LiquidCrystal-ExBoldItalic.woff2","styles/fonts/LiquidCrystal-LightItalic.woff2","styles/fonts/LiquidCrystal-NormalItalic.woff2","styles/fonts.js","styles/styles.js","res/assets/homeWelcome.png","res/assets/sunset.png","components/Home.jsx","components/LoginResult.jsx","components/Logout.jsx","components/Dashboard.jsx","styles/icons.js","components/EntryEditor.jsx","res/preview/introduction/IntroMinimalist.JPG","templates/introduction/IntroTemplateMinimalist.jsx","res/preview/timeline/TimelineMinimalist.JPG","templates/timeline/TimelineTemplateMinimalist.jsx","templates/about/AboutTemplateMinimalist.jsx","templates/introduction/IntroTemplateRedline.jsx","templates/Templates.js","components/TemplateSelector.jsx","components/Publish.jsx","components/DirectoryManager.jsx","components/Portfolio.jsx","components/UserConfirmation.jsx","reducers/LoginReducer.js","reducers/PortfolioReducer.js","reducers/RootReducer.js","reportWebVitals.js","index.js"],"names":["LOG_IN_USER","LOG_OUT_USER","REPOPULATE_STATE","log_out_user","type","repopulate_state","res","payload","FETCH_PORTFOLIOS_BEGIN","FETCH_PORTFOLIOS_SUCCESS","FETCH_PORTFOLIOS_FAILURE","SAVE_CURRENT_WORK","CLEAR_CURRENT_WORK","TOGGLE_UNSAVED_WORK","saveCurrentWork","curr","saveCurrentWorkToLocal","dispatch","window","localStorage","setItem","process","JSON","stringify","clearCurrentWorkFromLocal","removeItem","fetchPortfolios","id","axios","method","url","withCredentials","params","then","data","portfolios","undefined","catch","err","fetchPortfoliosFailure","_style","_g","handleErrors","history","a","response","console","log","status","store","push","message","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgResumate3","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","className","d","points","ForwardRef","Navbar","handleLogout","bind","handleUserMenu","state","menu_open","user_drawer_open","handleReturnDashboard","handleReturnHome","loggedIn","parse","getItem","localStorageItem","setState","name","avatar_url","error","classes","root","CssBaseline","AppBar","position","appBar","appBarShift","toolbar","IconButton","homeButton","onClick","width","height","Typography","component","variant","color","fontWeight","noWrap","Box","logoTextDecor","Button","startIcon","Avatar","src","avatar_button","hide","Drawer","anchor","onBackdropClick","paper","drawerPaper","drawerPaperClose","open","drawerDiv","Hidden","xsDown","expandedAvatar","Divider","List","flexDown","fullWidth","logoutButton","dashboardButton","appBarSpacer","Component","mapDispatchToProps","connect","login","gravatar_id","withStyles","theme","display","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","zIndex","drawer","backgroundColor","palette","primary","main","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","spacing","enteringScreen","borderRadius","homeButtonHidden","flexGrow","textAlign","whiteSpace","overflowX","breakpoints","up","content","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","marginTop","marginLeft","maxWidthButton","maxHeight","dark","withRouter","fonts","liquidCrystalNormal","fontFamily","fontStyle","fontDisplay","LiquidCrystalNormal","liquidCrystalNormalItalic","LiquidCrystalNormalItalic","liquidCrystalBold","LiquidCrystalBold","liquidCrystalLight","LiquidCrystalLight","liquidCrystalLightItalic","LiquidCrystalLightItalic","liquidCrystalBoldItalic","LiquidCrystalBoldItalic","liquidCrystalExBold","LiquidCrystalExBold","liquidCrystalExBoldItalic","LiquidCrystalExBoldItalic","light","secondary","contrastPrimary","contrastSecondary","tertiary","contrastText","background","default","text","typography","join","overrides","MuiCssBaseline","values","responsiveFontSizes","createMuiTheme","Home","href","logoFont","welcomeDiv","autoMargin","gutterBottom","typoHeader","boldFont","whiteSpacePreLine","loginButton","homeWelcome","welcomeImage","featuresDiv","centeredDiv","featureRight","featureImg","alt","flexColumn","featureDiv","boxShadow","boxShadowColor1","featureLeft","boxShadowColor2","boxShadowColor3","flexRow","messageDiv","size","riFileCodeLine","alert","boxShadowColor4","bottomLogoDiv","bottomLogoFill","backgroundImage","sunsetBackground","backgroundSize","backgroundRepeat","backgroundAttachment","tutorialDiv","welcomeText","typoSubtitle","portfolioIcon","marginBlock","borderWidth","borderStyle","top","left","fullSize","floating","borderRight","borderLeft","objectFit","maxWidth","margin","marginInline","fontSize","minHeight","borderColor","border","marginBottom","fill","LoginResult","search","location","URLSearchParams","ghCode","get","responseType","code","forLocalStorage","log_in_user","to","Logout","Dashboard","nameDialogState","portfolioName","duplicateKeyError","duplicateKeyHelperText","anchorEl","currentPortfolio_Id","deleteDialogState","changeNameDialogState","changedName","images","defaultPreviewSrc","handleAddPortfolio","handleOpenPortfolio","handleOnChange","handleNameDialog","handleDeletePortfolio","handleOpenEditMenu","handleCloseEditMenu","handleDeleteDialogState","handleChangeNameDialogState","handleChangePortfolioName","handleGetImage","handleDeleteImage","map","portfolio","_id","e","event","value","bool","filter","pages","currentTarget","temp","originalPortfolio","find","element","changedPortfolio","portfolio_id","imageRefs","imageRef","label","URL","createObjectURL","tempPortfolioImages","Grid","direction","justify","loading","idx","Card","cardRoot","cardDetails","CardContent","CardActions","cardControls","portfolioButton","aria-controls","aria-haspopup","cardGap","CardMedia","cardMedia","Menu","portfolioMenu","keepMounted","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","portfolioMenuItem","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","defaultValue","onChange","helperText","DialogActions","aria-describedby","textPrimaryColor","ai","icons","aiIcons","bs","bsIcons","bi","biIcons","di","diIcons","fi","fiIcons","fc","fcIcons","fa","faIcons","gi","giIcons","go","goIcons","gr","grIcons","hi","hiIcons","im","imIcons","io","ioIcons","io5","io5Icons","md","mdIcons","ri","riIcons","si","siIcons","ti","tiIcons","vsc","vscIcons","wi","wiIcons","cg","cgIcons","EntryEditor","copied_fields","fields","showEditor","mediaAnchorEl","showIcon","iconCategory","editSection","currentSection","imageName","handleCreateEntry","handleChange","handleImageUpload","handleSectionView","handleCloseEditor","handleIconSelect","handleFont","fileUploadRef","React","createRef","imgColPickerRef","nextProps","nextState","category","section","originalCat","newSections","sections","texts","freader","FileReader","readAsDataURL","files","onloadend","result","format","spliced","item","filterIndex","copy","info","defaultEntry","modifier","nextSection","save","field","font","iconName","newValue","data-html2canvas-ignore","Fab","editFAB","Modal","modal","accept","imgInput","onBlur","subModal","maxHeightWidth","Tabs","tab","scrollButtons","entries","icon","Tab","entryIcon","role","gridDiv","PreviewIcon","iconDiv","entryIconName","rowDiv","styleDiv","styleInput","fontName","colours","Input","colDiv","imgGrid","Preview","imgPreview","split","current","click","textGrid","enabled","sectionDiv","addSectionSpacer","handleDeleteSection","SvgIcon","entryInfoDiv","entryFormat","multiline","rowsMax","ctrlDiv","opacity","overflowY","bottom","right","gridTemplateColumns","div","gridGap","iconBtn","IntroTemplateMinimalist","bg","textBox","titleFont","dp","templateName","preview","script","index","defaultField","std","TimelineTemplateMinimalist","timelineImage","timelineImg","sectionTextDiv","timelineDate","timelineTitle","AboutTemplateMinimalist","header","bodyFont","about","IntroTemplateRedline","paddingBlock","SocialIcon","socialIcon","socialLink","socialButton","templates","introduction","timeline","TemplateSelector","showSelector","handleCloseSelector","controlFAB","cardDiv","entry","card","ButtonBase","focusRipple","buttonBase","handleSelect","image","fab","Publish","finalizeDialogState","overrideDialogState","repositoryName","repositoryContent","publishLoading","statusState","publishError","publishErrorMessage","pageUrl","pageCheckIntervalTask","handleFinalizeDialogOpen","handleFinalizeDialogClose","handleOverrideDialogOpen","handleOverrideDialogClose","handleFinalizeEdits","handleOverrideAllowed","handlePushToGithub","handleCheckPageStatus","handleStatusClose","handleCopyClipboard","pushables","createPushables","setInterval","route","repo","clearInterval","reason","navigator","clipboard","writeText","aria-label","actionFAB","CircularProgress","Snackbar","TransitionComponent","Slide","SnackbarContent","snackbar","action","Fragment","DirectoryManager","currentPage","dirTree","currentPath","showInput","showDirectory","dirName","inputMode","expanded","handleSelectPage","renderTree","handleDeletePage","handleRenameDirectory","node","path","preventDefault","folder","directoryArray","TreeItem","nodeId","treeItem","selected","treeItemSelected","treeItemContent","group","treeItemGroup","onLabelClick","directories","pageArray","getPage","newName","newDirTree","parent","newPage","directory","onUpdate","oldName","pop","pageName","getState","handleCloseDirectory","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","treeView","textField","handleCreatePage","treeItemExpanded","paddingLeft","jss","setup","jssPreset","Renderer","Portfolio","editMode","isTimerExist","handleEditorClose","handleCreateFile","handleProduction","handleSelector","handleUpdatePages","handleDirectory","handleSavePortfolio","handleUploadPreview","userLocalStorageItem","portfolioLocalStorageItem","currentPortfolio","isUnsaved","setTimeout","toggleUnsavedWork","entryFields","pathArray","ptr","selection","entryType","entryStyle","fieldsCopy","newEntry","newPages","traverseDirectory","changed","forceUpdate","page","prepend","dupeEntry","startsWith","fileType","substring","baseContent","imgDir","file","contents","s_idx","dupeSection","sheets","ServerStyleSheets","rawHTML","ReactDOMServer","renderToString","collect","ThemeProvider","renderEntry","html","Base64","encode","css","toString","js","fileArray","concat","user","avatar","renameArray","obj","fileName","fileContent","html2canvas","document","querySelector","useCORS","canvas","toBlob","blob","bodyFormData","FormData","append","File","isExist","headers","refs","when","entryEditorDiv","delFAB","handleDeleteEntry","staticDiv","entryDiv","UserConfirmation","callback","textObj","createElement","setAttribute","body","appendChild","closeModal","callbackState","isSave","ReactDOM","unmountComponentAtNode","removeChild","render","GUEST","initialState","MISSING","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","rootReducer","applyMiddleware","thunk","StrictMode","getUserConfirmation","exact","getElementById"],"mappings":"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","file":"static/js/main.81f1500d.chunk.js","sourcesContent":["/**\n * LoginAction exports actions and their respective action creators.\n * \n * @module LoginAction\n * @author Chen En\n * @category Action\n */\n\n/**\n * string that identifies a LOG_IN_USER action.\n * \n * @type {string}\n * @member LOG_IN_USER\n */\nexport const LOG_IN_USER = \"LOG_IN_USER\"\n\n/**\n * string that identifies a LOG_OUT_USER action.\n * \n * @type {string}\n * @member LOG_OUT_USER\n */\nexport const LOG_OUT_USER = \"LOG_OUT_USER\"\n\n/**\n * string that identifies a REPOPULATE_STATE action.\n * \n * @type {string}\n * @member REPOPULATE_STATE\n */\nexport const REPOPULATE_STATE = \"REPOPULATE_STATE\"\n\n/**\n * LOG_IN_USER action creator. This action saves user details contained in res to Redux Store and\n * sets boolean loggedIn in Redux Store to true.\n * \n * @param {Object} res - response object containing Github user details.\n * @returns {{type: string, payload: Object}} - LOG_IN_USER action object.\n * @member log_in_user\n * @function\n */\nexport const log_in_user = res => ({\n    type: LOG_IN_USER,\n    payload: { ...res }\n})\n\n/**\n * LOG_OUT_USER action creator. This action removes user details contained in Redux Store and\n * sets boolean loggedIn in Redux Store to false.\n * \n * @returns {{type: string}} - LOG_OUT_USER action object.\n * @member log_out_user\n * @function\n */\nexport const log_out_user = () => ({\n    type: LOG_OUT_USER\n})\n\n/**\n * REPOPULATE_STATE action creator. This action saves user details and user logged in status\n * contained in res to Redux Store.\n * \n * @param {Object} res - response object containing Github user details\n * @returns {{type: string, payload: Object}} - REPOPULATE_STATE action object.\n * @member repopulate_state\n * @function\n */\nexport const repopulate_state = res => ({\n    type: REPOPULATE_STATE,\n    payload: { ...res }\n})","/**\n * PortfolioAction exports actions and their respective action creators.\n * \n * @module PortfolioAction\n * @author Chen En\n * @category Action\n */\n\nimport axios from 'axios'\n\n/**\n * string that identifies a FETCH_PORTFOLIOS_BEGIN action\n * \n * @type {string}\n * @member FETCH_PORTFOLIOS_BEGIN\n */\nexport const FETCH_PORTFOLIOS_BEGIN = \"FETCH_PORTFOLIOS_BEGIN\"\n\n/**\n * string that identifies a FETCH_PORTFOLIOS_SUCCESS action\n * \n * @type {string}\n * @member FETCH_PORTFOLIOS_SUCCESS\n */\nexport const FETCH_PORTFOLIOS_SUCCESS = \"FETCH_PORTFOLIOS_SUCCESS\"\n\n/**\n * string that identifies a FETCH_PORTFOLIOS_FAILURE action\n * \n * @type {string}\n * @member FETCH_PORTFOLIOS_FAILURE\n */\nexport const FETCH_PORTFOLIOS_FAILURE = \"FETCH_PORTFOLIOS_FAILURE\"\n\n/**\n * string that identifies a SAVE_CURRENT_WORK action\n * \n * @type {string}\n * @member SAVE_CURRENT_WORK\n */\nexport const SAVE_CURRENT_WORK = \"SAVE_CURRENT_WORK\"\n\n/**\n * string that identifies a CLEAR_CURRENT_WORK action\n * \n * @type {string}\n * @member CLEAR_CURRENT_WORK\n */\nexport const CLEAR_CURRENT_WORK = \"CLEAR_CURRENT_WORK\"\n\n/**\n * string that identifies a TOGGLE_UNSAVED_WORK action\n * \n * @type {string}\n * @member TOGGLE_UNSAVED_WORK\n */\nexport const TOGGLE_UNSAVED_WORK = \"TOGGLE_UNSAVED_WORK\"\n\n/**\n * SAVE_CURRENT_WORK action creator. This action saves user's current portfolio work\n * to localStorage.\n * \n * @param {Object} curr - object containing user's current portfolio work.\n * @returns {{type: string, payload: Object}} - SAVE_CURRENT_WORK action object.\n * @member saveCurrentWork\n * @function\n */\nexport const saveCurrentWork = curr => ({\n    type: SAVE_CURRENT_WORK,\n    payload: { curr }\n})\n\n/**\n * CLEAR_CURRENT_WORK action creator. This action clears user's current portfolio work\n * from localStorage.\n * \n * @returns {{type: string}} - CLEAR_CURRENT_WORK action object.\n * @member clearCurrentWork\n * @function\n */\nexport const clearCurrentWork = () => ({\n    type: CLEAR_CURRENT_WORK\n})\n\n/**\n * TOGGLE_UNSAVED_WORK action creator. This action sets the isUnsaved boolean in redux store.\n * \n * @param {boolean} bool - Boolean indicating if unsaved work exists.\n * @returns {{type: string}} - TOGGLE_UNSAVED_WORK action object.\n * @member toggleUnsavedWork\n * @function\n */\nexport const toggleUnsavedWork = (bool) => ({\n    type: TOGGLE_UNSAVED_WORK,\n    payload: { bool }\n})\n\n/**\n * Action creator that returns a function, which is only possible with redux-thunk.\n * \n * The function receives the store's dispatch method, which is then used to dispatch regular\n * synchronous actions inside the function's body once the asynchronous operations have been completed.\n * \n * The function saves user's work to localStorage, then dispatches a SAVE_CURRENT_WORK action object.\n *\n * @param {Object} curr - object containing user's current portfolio work.\n * @return {Function} - a function that receives the store's dispatch method.\n * @member saveCurrentWorkToLocal\n * @function\n * @requires NPM:redux-thunk\n */\nexport function saveCurrentWorkToLocal(curr) {\n    return dispatch => {\n        window.localStorage.setItem(process.env.REACT_APP_AUTOSAVE_LOCALSTORAGE, JSON.stringify(curr))\n        dispatch(saveCurrentWork(curr))\n        //console.log(\"portfolio work saved temporarily\")\n    }\n}\n\n/**\n * Action creator that returns a function, which is only possible with redux-thunk.\n * \n * The function receives the store's dispatch method, which is then used to dispatch regular\n * synchronous actions inside the function's body once the asynchronous operations have been completed.\n * \n * The function removes user's work from localStorage, then dispatches a CLEAR_CURRENT_WORK action object.\n *\n * @return {Function} - a function that receives the store's dispatch method.\n * @member clearCurrentWorkToLocal\n * @function\n * @requires NPM:redux-thunk\n */\nexport function clearCurrentWorkFromLocal() {\n    return dispatch => {\n        window.localStorage.removeItem(process.env.REACT_APP_AUTOSAVE_LOCALSTORAGE)\n        dispatch(clearCurrentWork())\n        //console.log(\"portfolio work cleared\")\n    }\n}\n\n/**\n * FETCH_PORTFOLIOS_BEGIN action creator. This action sets boolean loading in Redux Store to true.\n * \n * @returns {{type: string}} - FETCH_PORTFOLIOS_BEGIN action object.\n * @member fetchPortfoliosBegin\n * @function\n */\nexport const fetchPortfoliosBegin = () => ({\n    type: FETCH_PORTFOLIOS_BEGIN\n})\n\n/**\n * FETCH_PORTFOLIOS_SUCCESS action creator. This action sets boolean loading in Redux Store to false.\n * Then saves the user's portfolios fetched from mongoDB to Redux Store.\n * \n * @param {Object} portfolios - response object containing user's portfolios.\n * @returns {{type: string, payload: Object}} - FETCH_PORTFOLIOS_SUCCESS action object.\n * @member fetchPortfoliosSuccess\n * @function\n */\nexport const fetchPortfoliosSuccess = portfolios => ({\n    type: FETCH_PORTFOLIOS_SUCCESS,\n    payload: { portfolios }\n})\n\n/**\n * FETCH_PORTFOLIOS_FAILURE action creator. This actions sets boolean loading in Redux Store to false.\n * Then sets err in Redux Store to error object obtaining from request failure.\n * \n * @param {Object} err - error object containing details about request failure.\n * @returns {{type: string, payload: Object}} = FETCH_PORTFOLIOS_FAILURE action object.\n * @member fetchPortfoliosFailure\n * @function\n */\nexport const fetchPortfoliosFailure = err => ({\n    type: FETCH_PORTFOLIOS_FAILURE,\n    payload: { err }\n})\n\n//Redux thunk allows dispatch actions that return a function. This function must take in user id\n/**\n * Action creator that returns a function, which is only possible with redux-thunk.\n * \n * The function receives the store's dispatch method, which is then used to dispatch regular\n * synchronous actions inside the function's body once the asynchronous operations have been completed.\n * \n * The function dispatches a FETCH_PORTFOLIOS_BEGIN action, then starts a GET request to obtain\n * a user's portfolio by its id. If the request succeeds, the function then dispatches a\n * FETCH_PORTFOLIOS_SUCCESS action. Otherwise, it dispatches a FETCH_PORTFOLIOS_FAILURE action.\n *\n * @param {string} id - id of user whose portfolios are to be fetched from mongoDB.\n * @return {Function} - a function that receives the store's dispatch method.\n * @member fetchPortfolios\n * @function\n * @requires NPM:redux-thunk\n */\nexport function fetchPortfolios(id) {\n    return dispatch => {\n        dispatch(fetchPortfoliosBegin());\n        return axios({\n            method: 'GET',\n            url: process.env.REACT_APP_BACKEND + \"/portfolio\",\n            withCredentials: true,\n            params: {\n                id: id\n            }\n        }).then(res => res.data)\n        .then(data => {\n            //TODO PROBABLY HAVE TO CONVERT DATA INTO AN ARRAY DEPENDING ON THE RESULT\n            if (data.portfolios !== undefined) {\n                dispatch(fetchPortfoliosSuccess(data.portfolios))\n            } \n        }).catch(err => dispatch(fetchPortfoliosFailure(err)))\n    }\n}","var _style, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgResumate3(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"120 235.9 356 292\",\n    style: {\n      enableBackground: \"new 120 235.9 356 292\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:none;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M449,308.9H149c-1.6,0-3,1.4-3,3v190c0,1.6,1.4,3,3,3h300c1.6,0,3-1.4,3-3v-190 C452,310.3,450.6,308.9,449,308.9z M271.1,385.9l-51.3,19.6l51.3,20.4v20.7l-73.6-32v-17.7l73.6-31.9V385.9z M293.1,460.7h-15.2 l26.6-111H320L293.1,460.7z M400.5,414.6l-73.7,32.1V426l51.4-20.2l-51.4-20v-20.6l73.7,31.9V414.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M355.5,258.9h-113c-1.6,0-3,1.4-3,3v29h119v-29C358.5,260.3,357.1,258.9,355.5,258.9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M358.5,290.9h-119 M221.5,290.9H149c-11.6,0-21,9.4-21,21v190c0,11.6,9.4,21,21,21h300c11.6,0,21-9.4,21-21v-190 c0-11.6-9.4-21-21-21h-72.5 M452,501.9c0,1.6-1.4,3-3,3H149c-1.6,0-3-1.4-3-3v-190c0-1.6,1.4-3,3-3h300c1.6,0,3,1.4,3,3V501.9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M376.5,290.9v-29c0-11.6-9.4-21-21-21h-113c-11.6,0-21,9.4-21,21v29h18v-29c0-1.6,1.4-3,3-3h113c1.6,0,3,1.4,3,3v29H376.5z \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"197.5,414.6 271.1,446.6 271.1,425.9 219.8,405.5 271.1,385.9 271.1,365 197.5,396.9  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"277.9,460.7 293.1,460.7 320,349.7 304.5,349.7  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"326.8,385.8 378.2,405.8 326.8,426 326.8,446.7 400.5,414.6 400.5,397.1 326.8,365.2  \"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgResumate3);\nexport default __webpack_public_path__ + \"static/media/resumate3.0d961b11.svg\";\nexport { ForwardRef as ReactComponent };","import { log_out_user } from '../actions/LoginAction';\r\nimport store from '../index';\r\n\r\n/**\r\n * LoginAction exports actions and their respective action creators.\r\n * \r\n * @module errorHandler\r\n * @author Chen En\r\n * @category Auxiliary Functions\r\n */\r\n\r\n/**\r\n * A standardized error handler to handle errors from requests to backend. \r\n * If error.response.status is 401 and err.response.data is \"authorized user\", it means that\r\n * the user is not signed in. User details will be removed from localStorage and a LOG_OUT_USER action will\r\n * be dispatched. The user will then be redirected to the home page to login again.\r\n * \r\n * @param {Object} err error object\r\n * @param {Object} history history object\r\n * @returns void\r\n * @member handleErrors\r\n * @function\r\n */\r\nexport const handleErrors = async (err, history) => {\r\n    if (err.response) {\r\n        console.log(err.response.data);\r\n        if (err.response.status === 401 && err.response.data === 'unauthorized user') {\r\n            localStorage.removeItem(process.env.REACT_APP_USER_LOCALSTORAGE);\r\n            store.dispatch(log_out_user());\r\n            history.push('/');\r\n        }\r\n    } else {\r\n        console.log(err.message);\r\n    }\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { log_out_user, repopulate_state } from '../actions/LoginAction';\nimport { clearCurrentWorkFromLocal } from '../actions/PortfolioAction';\nimport axios from 'axios';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport { handleErrors } from '../handlers/errorHandler';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Avatar, Box, Button, Divider, Drawer, Hidden, IconButton } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { ReactComponent as ResumateSVG } from '../res/assets/resumate3.svg';\n\n/**\n * @file Home component serves as a welcome page to users and provides functionalities that allow\n * user's to login via Github Oauth.\n * \n * @author Chuan Hao\n * \n * @see Navbar\n */\n\n// TODO: clean up unused styles\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Navbar\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: `${theme.palette.primary.main}aa`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginRight: theme.spacing(30),\n    width: `calc(100% - ${theme.spacing(30)})`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  homeButton: {\n    marginRight: 'auto',\n    borderRadius: '5px'\n  },\n  homeButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerDiv: {\n    display: 'block',\n    justifyContent: 'center',\n    textAlign: 'center',\n    height: '100vh',\n  },\n  drawerPaper: {\n    whiteSpace: 'nowrap',\n    width: theme.spacing(30),\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(0),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(0),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  hide: {\n    display: 'none'\n  },\n  expandedAvatar: {\n    marginTop: theme.spacing(5),\n    height: theme.spacing(20),\n    width: theme.spacing(20),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  maxWidthButton: {\n    width: '100%',\n    borderRadius: '0px'\n  },\n  maxHeight: {\n    height: '100%',\n  },\n  flexDown: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  logoutButton: {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  dashboardButton: {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  avatar_button: {\n    width: 'auto'\n  },\n  logoTextDecor: {\n    color: \"#FF0000\"\n  }\n});\n\n\n/**\n * Navbar component for page navigation.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @component\n */\nclass Navbar extends Component {\n  /**\n   * @constructor\n   * fixes default fields in state\n   */\n  constructor() {\n    super();\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleUserMenu = this.handleUserMenu.bind(this);\n    this.state = {\n      menu_open: false,\n      user_drawer_open: false\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleReturnDashboard = this.handleReturnDashboard.bind(this);\n    this.handleUserMenu = this.handleUserMenu.bind(this);\n    this.handleReturnHome = this.handleReturnHome.bind(this);\n  }\n\n  /**\n   * Attempts to fetch user info to display in the component.\n   * \n   * @return void\n   * @memberof Navbar\n   */\n  async componentDidMount() {\n    if (!this.props.loggedIn) {\n      const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      if (localStorageItem !== null) {\n        await this.props.repopulate_state(localStorageItem);\n      }\n    }\n  }\n\n  /**\n   * Logout function to clear cookies and invalidate the github authorization.\n   * \n   * @return void\n   * @memberof Navbar\n   */\n  handleLogout() {\n    this.props.history.push(\"/logout\")\n  }\n\n  /**\n   * Function to return user to the Dashboard\n   * \n   * @return void\n   * @memberof Navbar\n   */\n  handleReturnDashboard() {\n    this.props.history.push(\"/dashboard\");\n    this.handleUserMenu();\n  }\n\n  /**\n   * Function to return user to the homepage.\n   * \n   * @return void\n   * @memberof Navbar\n   */\n  handleReturnHome() {\n    this.props.history.push(\"/\")\n    this.handleUserMenu();\n  }\n\n\n  /**\n   * Logout function to clear cookies and invalidate the github authorization.\n   * \n   * @return void\n   * @memberof Navbar\n   */\n  handleUserMenu() {\n    this.setState({ user_drawer_open: !this.state.user_drawer_open });\n  }\n\n  render() {\n\n    const { loggedIn, name, avatar_url, error } = this.props\n\n    if (error) {\n      return <div>Error! {error.message}</div>\n    }\n\n    const { classes } = this.props;\n\n    // CssBaseline gets the default body style and applies it (background colour etc.)\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\"\n          className={this.state.user_drawer_open\n            ? `${classes.appBar} ${classes.appBarShift}`\n            : classes.appBar}>\n          <ToolBar className={classes.toolbar}>\n            <IconButton className={classes.homeButton} onClick={this.handleReturnHome}>\n              <ResumateSVG width=\"1em\" height=\"1em\" />\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" fontWeight=\"bold\" noWrap className={classes.title}>\n                <Box fontWeight=\"bold\">Resu<span className={classes.logoTextDecor} >mate</span></Box>\n              </Typography>\n            </IconButton>\n            <Button \n              startIcon={<Avatar src={avatar_url} />}\n              onClick={this.handleUserMenu}\n              className={loggedIn && !this.state.user_drawer_open ? classes.avatar_button : classes.hide}>\n              {name}\n            </Button>\n          </ToolBar>\n        </AppBar>\n        <Drawer\n          variant=\"temporary\"\n          anchor=\"right\"\n          onBackdropClick={this.handleUserMenu}\n          classes={{\n            paper: this.state.user_drawer_open\n              ? classes.drawerPaper\n              : `${classes.drawerPaper} ${classes.drawerPaperClose}`\n          }}\n          open={this.state.user_drawer_open}\n        >\n          <div className={classes.drawerDiv}>\n            <Hidden xsDown>\n              <Avatar src={avatar_url} className={classes.expandedAvatar} />\n            </Hidden>\n            <Typography variant=\"h4\" className={classes.title}>\n              {name}\n            </Typography>\n            <Divider />\n            <List className={classes.flexDown}>\n              <Button onClick={this.handleLogout} fullWidth={true} className={classes.logoutButton}>\n                LOGOUT\n              </Button>\n              <Button onClick={this.handleReturnDashboard} fullWidth={true} className={classes.dashboardButton}>\n                DASHBOARD\n              </Button>\n            </List>\n          </div>\n        </Drawer>\n        <div className={classes.appBarSpacer} />\n      </div>\n    )\n  }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof EntryEditor\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn,\n  name: state.login.name,\n  avatar_url: state.login.avatar_url,\n  gravatar_id: state.login.gravatar_id,\n  error: state.login.error\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof EntryEditor\n */\nconst mapDispatchToProps = {\n  log_out_user,\n  repopulate_state,\n  clearCurrentWorkFromLocal\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Navbar)))\n","export default __webpack_public_path__ + \"static/media/LiquidCrystal-Normal.f388bf69.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-Bold.c84b4328.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-Light.50eef454.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-BoldItalic.a30e37ed.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-ExBold.9d97e8f2.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-ExBoldItalic.de63aaa0.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-LightItalic.e3e9bde9.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-NormalItalic.615622e6.woff2\";","import LiquidCrystalNormal from './fonts/LiquidCrystal-Normal.woff2';\nimport LiquidCrystalBold from './fonts/LiquidCrystal-Bold.woff2';\nimport LiquidCrystalLight from './fonts/LiquidCrystal-Light.woff2';\nimport LiquidCrystalBoldItalic from './fonts/LiquidCrystal-BoldItalic.woff2';\nimport LiquidCrystalExBold from './fonts/LiquidCrystal-ExBold.woff2';\nimport LiquidCrystalExBoldItalic from './fonts/LiquidCrystal-ExBoldItalic.woff2';\nimport LiquidCrystalLightItalic from './fonts/LiquidCrystal-LightItalic.woff2';\nimport LiquidCrystalNormalItalic from './fonts/LiquidCrystal-NormalItalic.woff2';\n\n// styles.js currently imports everything, including the font name array. Might have unintended side effects\nexport const fonts = [\n  'Arial',\n  'Verdana',\n  'Helvetica',\n  'Tahoma',\n  'Trebuchet MS',\n  'Times New Roman',\n  'Georgia',\n  'Garamond',\n  'Courier New',\n  'Brush Script MT',\n  'LiquidCrystal'\n];\n/*\n * Other formats: 'woff2', 'truetype, 'opentype', 'embedded-opentype', and 'svg'\n * however material UI only supports ttf, woff2\n*/\nexport const liquidCrystalNormal = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 400,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-Normal'),\n  url(${LiquidCrystalNormal}) format('woff2')\n  `\n}\n\nexport const liquidCrystalNormalItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 400,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-NormalItalic'),\n  url(${LiquidCrystalNormalItalic}) format('woff2')\n  `\n}\n\nexport const liquidCrystalBold = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 500,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-Bold'),\n  url(${LiquidCrystalBold}) format('woff2')\n  `\n}\n\nexport const liquidCrystalLight = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 300,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-Light'),\n  url(${LiquidCrystalLight}) format('woff2')\n  `\n}\n\nexport const liquidCrystalLightItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 300,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-LightItalic'),\n  url(${LiquidCrystalLightItalic}) format('woff2')\n  `\n}\n\nexport const liquidCrystalBoldItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 500,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-BoldItalic'),\n  url(${LiquidCrystalBoldItalic}) format('woff2')\n  `\n}\n\nexport const liquidCrystalExBold = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 600,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-ExBold'),\n  url(${LiquidCrystalExBold}) format('woff2')\n  `\n}\n\nexport const liquidCrystalExBoldItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 600,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-ExBoldItalic'),\n  url(${LiquidCrystalExBoldItalic}) format('woff2')\n  `\n}\n\n\n\n\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport * as fonts from './fonts';\n\nexport const light = {\n  palette: {\n      type: 'light',\n      primary: {\n        main: '#FEF9C7',\n      },\n      secondary: {\n        main: '#FCE181',\n      },\n      contrastPrimary: {\n        main: '#9FEDD7'\n      },\n      contrastSecondary: {\n        main: '#026670'\n      },\n      tertiary: {\n        light: '#687A8F',\n        main: '#9FEDD7',\n        dark: '#e76f51',\n        contrastText: '#fff'\n      },\n      background: {\n        default: '#fff',\n        light: '#faf7e3',\n        dark: '#687A8F'\n      },\n      text: {\n        primary: '#264653',\n        secondary: '#2a9d8f'\n      }\n    },\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto'\n      ].join(',')\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          '@font-face': Object.values(fonts)\n        }\n      }\n    }\n}\n\nexport const dark = {\n    palette: {\n      type: 'dark',\n      primary: {\n        light: '#EEEEEE',\n        main: '#444444',\n        dark: '#222222',\n      },\n      secondary: {\n        light: '#ff4081',\n        main: '#f50057',\n        dark: '#c51162',\n        contrastText: '#fff'\n      },\n      error: {\n        light: '#e57373',\n        main: '#f44336',\n        dark: '#d32f2f',\n        contrastText: '#fff'\n      },\n      text: {\n        primary: 'rgba(255, 255, 255, 0.87)',\n        secondary: 'rgba(0, 0, 0, 0.87)'\n      }\n    },\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto'\n      ].join(',')\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          '@font-face': Object.values(fonts)\n        }\n      }\n    }\n  };\n//visit here to see what to override \n//https://material-ui.com/customization/default-theme/\nexport const theme = responsiveFontSizes(createMuiTheme(light));\n","export default __webpack_public_path__ + \"static/media/homeWelcome.406b97a7.png\";","export default __webpack_public_path__ + \"static/media/sunset.01a973ab.png\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction'\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { theme } from '../styles/styles';\nimport { ReactComponent as ResumateSVG } from '../res/assets/resumate3.svg';\nimport homeWelcome from '../res/assets/homeWelcome.png';\nimport sunsetBackground from '../res/assets/sunset.png';\nimport { RiFileCodeLine } from 'react-icons/ri';\n\n\n/**\n * @file Home component serves as a welcome page to users and provides functionalities that allow\n * user's to login via Github Oauth.\n * \n * @author Chuan Hao\n * \n * @see Home\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Home\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    overflowX: 'auto',\n    backgroundImage: `url(${sunsetBackground})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed'\n  },\n  centeredDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  welcomeDiv: {\n    width: '100%',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    textAlign: 'left',\n    justifyContent: 'center',\n    alignItems: 'left',\n    position: 'relative'\n  },\n  tutorialDiv: {\n    width: '90%',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    textAlign: 'left',\n    justifyContent: 'center',\n    alignItems: 'left',\n    position: 'relative'\n  },\n  welcomeText: {\n    flexGrow: 1,\n\n  },\n  typoHeader: {\n  },\n  typoSubtitle: {\n\n  },\n\n  portfolioIcon: {\n    width: '40vh',\n    height: '40vh',\n    borderRadius: '20vh',\n  },\n  featuresDiv: {\n    position: 'relative',\n    width: '80vw',\n    height: '70vh',\n    flexDirection: 'row',\n    marginBlock: '10vh',\n    backgroundColor: 'transparent',\n    borderWidth: '1px',\n    borderStyle: 'solid'\n  },\n  boxShadow: {\n    zIndex: '-1',\n    top: '5vh',\n    left: '-5vh',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n  boxShadowColor1: {\n    backgroundColor: '#FEF9C7'\n  },\n  boxShadowColor2: {\n    backgroundColor: '#FCE181'\n  },\n  boxShadowColor3: {\n    backgroundColor: '#9FEDD7'\n  },\n  boxShadowColor4: {\n    backgroundColor: '#026670'\n  },\n  // boxShadowLeft: {\n  //   marginLeft: 'auto',\n  //   boxShadow: '-5vh 5vh #00000044, calc(80vw - 5vh) 5vh #00000044',\n  // },\n  // boxShadowRight: {\n  //   marginRight: 'auto',\n  //   boxShadow: '-5vh 5vh #00000044',\n  // },\n  fullSize: {\n    width: '100%',\n    height: '100%',\n  },\n  floating: {\n    zIndex: 1,\n  },\n  featureRight: {\n    marginLeft: 'auto',\n    borderRight: 'none'\n  },\n  featureLeft: {\n    marginRight: 'auto',\n    borderLeft: 'none'\n  },\n  featureImg: {\n    width: '50%',\n    height: 'inherit',\n    objectFit: 'cover',\n    maxHeight: '90%',\n    maxWidth: '90%',\n    margin: '5vh',\n    marginInline: '5vh'\n  },\n  flexColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  flexRow: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  homeButton: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    padding: '1%'\n  },\n  logoFont: {\n    fontFamily: 'Helvetica', \n    fontSize: '1.5em', \n    fontWeight: 'bold'\n  },\n  autoMargin: {\n    margin: 'auto'\n  },\n  boldFont: {\n    fontWeight: 'bold'\n  },\n  whiteSpacePreLine: {\n    whiteSpace: 'pre-line'\n  },\n  loginButton: {\n    width: 'max-content'\n  },\n  welcomeImage: {\n    marginRight: 'auto', \n    maxWidth: '50%', \n    minHeight: '50%', \n    maxHeight: '100%'\n  },\n  featureDiv: {\n    marginInline: 'auto', \n    maxWidth: '50%', \n    padding: '6vh'\n  },\n  messageDiv: {\n    borderColor: '#000', \n    padding: '5vh', \n    border: 'solid 1px', \n    margin: 'auto', \n    marginBottom: '15vh'\n  },\n  riFileCodeLine: {\n    margin: 'auto'\n  },\n  bottomLogoDiv: {\n    backgroundColor: '#000', \n    height: '50vh', \n    width: '100%'\n  },\n  bottomLogoFill: {\n    fill: \"#fff\"\n  }\n});\n\n/**\n * Home component of Portfolio.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @component\n */\nclass Home extends Component {\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Attempts to fetch user details and logged in status from localStorage after component is rendered.\n   * \n   * @returns void\n   * @memberof Home\n   */\n  async componentDidMount() {\n    if (!this.props.loggedIn) {\n      const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      if (localStorageItem !== null) {\n        this.props.repopulate_state(localStorageItem);\n      }\n    }\n  }\n\n  render() {\n    const { loggedIn, classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Button\n          className={classes.homeButton}\n          href=\"/\"\n        >\n          <ResumateSVG width=\"2em\" height=\"2em\" />\n          <Typography component=\"h1\" variant=\"h2\" color=\"inherit\" className={`${classes.title} ${classes.logoFont}`}>\n            RESUMATE\n          </Typography>\n        </Button>\n        <div className={classes.welcomeDiv}>\n          <div className={classes.autoMargin}>\n            <Typography component=\"h2\" variant=\"h2\" color=\"inherit\" gutterBottom className={`${classes.typoHeader} ${classes.boldFont}`}>\n              {'Show, not tell.'}\n            </Typography>\n            <Typography component=\"h6\" variant=\"subtitle1\" color=\"inherit\" gutterBottom className={classes.whiteSpacePreLine}>\n              {'Sometimes words don\\'t do your accomplishments justice.\\nShowcase your best work in a visual, interactive website.'}\n            </Typography>\n            <Button\n              href={loggedIn\n                ? '/dashboard'\n                : `https://github.com/login/oauth/authorize?scope=repo&client_id=` + process.env.REACT_APP_CLIENT_ID}\n              variant=\"outlined\"\n              className={classes.loginButton}\n            >\n              GET STARTED\n          </Button>\n          </div>\n          <img src={homeWelcome} className={classes.welcomeImage} />\n        </div>\n        <div\n          className={`${classes.featuresDiv} ${classes.centeredDiv} ${classes.featureRight}`}\n        >\n          <img\n            className={classes.featureImg}\n            src=\"https://edut.to/2TeoUBz\"\n            alt=\"feature\"\n          />\n          <div\n            className={`${classes.flexColumn} ${classes.featureDiv}`}\n          >\n            <Typography component=\"h4\" variant=\"h4\" color=\"inherit\" className={classes.title}>\n              Pre-Built templates\n            </Typography>\n            <Typography component=\"body1\" variant=\"body1\" color=\"inherit\" className={classes.title}>\n              Not a designer? No worries, choose from a selection of templates\n            </Typography>\n          </div>\n          <div\n            className={`${classes.boxShadow} ${classes.boxShadowColor1}`}\n          />\n        </div>\n        <div\n          className={`${classes.featuresDiv} ${classes.centeredDiv} ${classes.featureLeft}`}\n        >\n          <div\n            className={`${classes.flexColumn} ${classes.featureDiv}`}\n          >\n            <Typography component=\"h4\" variant=\"h4\" color=\"inherit\" className={classes.title}>\n              Free forever, no watermarks\n          </Typography>\n            <Typography component=\"body1\" variant=\"body1\" color=\"inherit\" className={classes.title}>\n              You own your website. No watermarks, no restrictions. Take full control of your website.\n          </Typography>\n          </div>\n          <img\n            className={classes.featureImg}\n            src=\"https://edut.to/2TeoUBz\"\n            alt=\"feature\"\n          />\n          <div\n            className={`${classes.boxShadow} ${classes.boxShadowColor2}`}\n          />\n        </div>\n        <div\n          className={`${classes.featuresDiv} ${classes.centeredDiv} ${classes.featureRight}`}\n        >\n          <img\n            className={classes.featureImg}\n            src=\"https://edut.to/2TeoUBz\"\n            alt=\"feature\"\n          />\n          <div\n            className={`${classes.flexColumn} ${classes.featureDiv}`}\n          >\n            <Typography component=\"h4\" variant=\"h4\" color=\"inherit\" className={classes.title}>\n              Fuss free process\n          </Typography>\n            <Typography component=\"body1\" variant=\"body1\" color=\"inherit\" className={classes.title}>\n              Pick your templates, edit your entries. We'll handle the rest — compilation and hosting all by us.\n          </Typography>\n          </div>\n          <div\n            className={`${classes.boxShadow} ${classes.boxShadowColor3}`}\n          />\n        </div>\n        <div className={`${classes.flexRow} ${classes.messageDiv}`}>\n          <RiFileCodeLine size=\"20em\" className={classes.riFileCodeLine} />\n          <div className={classes.autoMargin}>\n            <Typography component=\"h3\" variant=\"h3\" color=\"inherit\" gutterBottom className={`${classes.typoHeader} ${classes.boldFont}`}>\n              Ready to take it a step further?\n            </Typography>\n            <Typography component=\"h6\" variant=\"subtitle1\" color=\"inherit\" gutterBottom className={classes.whiteSpacePreLine}>\n              {'You\\'ve got your website up and running.\\n How about giving web development a shot? \\n Beginner javascript projects to advanced full stack tutorials, we have it all.'}\n            </Typography>\n            <Button\n              href=\"/\"\n              onClick={() => alert('Coming soon in the near future!')}\n              color=\"primary\"\n              variant=\"outlined\"\n            >\n              Browse tutorials\n          </Button>\n          </div>\n\n          <div\n            className={`${classes.boxShadow} ${classes.boxShadowColor4}`}\n          />\n        </div>\n        <div className={`${classes.centeredDiv} ${classes.bottomLogoDiv}`}>\n          <ResumateSVG width=\"7em\" height=\"7em\" className={classes.bottomLogoFill} />\n        </div>\n      </div>\n    )\n  }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof Home\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn,\n  name: state.login.name,\n  id: state.login.id,\n  avatar_url: state.login.avatar_url,\n  gravatar_id: state.login.gravatar_id,\n  error: state.login.error\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof Home\n */\nconst mapDispatchToProps = {\n  repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { log_in_user, repopulate_state } from '../actions/LoginAction';\nimport { fetchPortfolios } from '../actions/PortfolioAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BeatLoader } from 'react-spinners';\n/**\n * @file LoginResult component serves as the endpoint of Github authorization request and also\n * provides visual loading display when Github authorization is in progress.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @see LoginResult\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof LoginResult\n * @param {Object} theme \n */\n const styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'start',\n        alignItems: 'center'\n    },\n    appBarSpacer: theme.mixins.toolbar\n});\n\n/**\n * Component that displays loading animation while Github authentication occurs.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @component\n */\nclass LoginResult extends Component {\n    \n    /**\n     * If user is logged in already, the user will be redirected to Dashboard. \n     * \n     * Otherwise, an attempt will be made to fetch user details and logged in status from localStorage after component is rendered.\n     * \n     * If user's logged in status is Undefined, an attempt will be made to authenticate the user. Otherwise, he will\n     * also be redirected to Dashboard.\n     *\n     * @return void\n     * @memberof LoginResult\n     */\n    async componentDidMount() {\n\n        //If user is not loggedIn already\n        if (!this.props.loggedIn) {\n            //Check if loggedIn user might have accidentally refreshed into this url\n            const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n            //If localStorage returns null, user is not loggedIn, proceed to login\n            if (localStorageItem === null) {\n                let search = window.location.search;\n                let params = new URLSearchParams(search);\n                let ghCode = params.get('code');\n\n                if (ghCode !== \"\") {\n                    axios({\n                        method: \"POST\",\n                        url: `${process.env.REACT_APP_BACKEND}/login/authenticate`,\n                        withCredentials: true,\n                        responseType: 'json',\n                        data: {\n                            code: ghCode\n                        }\n                    }).then(res => res.data)\n                    .then(data => {\n                        /** For setting to localStorage, chose not to just dump entire redux state here because\n                         * we may want to only save certain data to localStorage\n                         */\n                        const forLocalStorage = {\n                            loggedIn: true,\n                            name: data.name,\n                            id: data.id,\n                            avatar_url: data.avatar_url,\n                            gravatar_id: data.gravatar_id\n                        }\n                        window.localStorage.setItem(process.env.REACT_APP_USER_LOCALSTORAGE, JSON.stringify(forLocalStorage))\n                        /**TODO: Implement IDEA => need to create a route that fetches user's portfolios' names and images only. We store this\n                         * in localStorage just like we did user peripherals.\n                         * In the dashboard, only when we click on the portfolio to be worked on. Then we fetch the actual portfolios themselves,\n                         * In the template editor, when the user is working on the portfolio, we will save his current work to localStorage in intervals\n                         * \n                         * When user leaves the template editor, we save his current work to the mongodb database,\n                         * then wipe the localStorage of the current portfolio's work.\n                         */\n                        this.props.fetchPortfolios(data.id)\n                        this.props.log_in_user(data)\n                    }).catch(err => {\n                        console.log(err.message);\n                    })\n                } else {\n                    console.log(\"gh code missing\");\n                }\n            } else { //If localStorage does return an item, then user is already logged in\n                this.props.repopulate_state(localStorageItem)\n            }\n        }\n        \n    }\n\n    render() {\n        const { loggedIn, classes } = this.props\n        if (loggedIn) {\n            return (\n                <Redirect to = '/dashboard'></Redirect>\n            )\n        } else {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.appBarSpacer}/>\n                    <BeatLoader></BeatLoader>\n                </div>\n            )\n        }\n        \n    }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof LoginResult\n */\nconst mapStateToProps = state => ({\n    loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof LoginResult\n */\nconst mapDispatchToProps = {\n    log_in_user,\n    repopulate_state,\n    fetchPortfolios\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginResult))","import React, { Component } from 'react';\r\nimport { BeatLoader } from 'react-spinners';\r\nimport { log_out_user } from '../actions/LoginAction';\r\nimport { clearCurrentWorkFromLocal } from '../actions/PortfolioAction';\r\nimport axios from 'axios';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { handleErrors } from '../handlers/errorHandler';\r\nimport { connect } from 'react-redux';\r\n\r\n/**\r\n * Style generator to dynamically adjust styles based on theme provided\r\n * \r\n * @memberof LoginResult\r\n * @param {Object} theme \r\n */\r\n const styles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'start',\r\n        alignItems: 'center'\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar\r\n});\r\n\r\nclass Logout extends Component {\r\n\r\n\r\n    async componentDidMount() {\r\n        await axios({\r\n            method: 'GET',\r\n            url: process.env.REACT_APP_BACKEND + '/logout',\r\n            withCredentials: true\r\n        }).then(res => {\r\n            this.props.log_out_user();\r\n            this.props.clearCurrentWorkFromLocal();\r\n            localStorage.removeItem(process.env.REACT_APP_USER_LOCALSTORAGE);\r\n            console.log(\"successfully cleared localStorage\");\r\n        }).then(() => {\r\n            this.props.history.push(\"/\");\r\n        }).catch(err => {\r\n            handleErrors(err, this.props.history);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <BeatLoader></BeatLoader>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Function that maps variables from Redux Store to Home component's props.\r\n *\r\n * @param {Object} state - Redux Store\r\n * @memberof Logout\r\n */\r\n const mapStateToProps = state => ({\r\n  })\r\n  \r\n\r\n/** \r\n * Provides action creators to Home component's props.\r\n * \r\n * @type {Object.<Function>} \r\n * @memberof Logout\r\n */\r\n const mapDispatchToProps = {\r\n    log_out_user,\r\n    clearCurrentWorkFromLocal\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Logout)))\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { fetchPortfolios, saveCurrentWorkToLocal, clearCurrentWorkFromLocal } from '../actions/PortfolioAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withRouter } from 'react-router-dom';\nimport { BeatLoader } from 'react-spinners';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { handleErrors } from '../handlers/errorHandler';\n\n/**\n * @file Dashboard component displays previews of the user's portfolios and offers \n * functionalities that allow creation of new user portfolios.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @see Dashboard\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Dashboard\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    alignItems: 'center',\n    margin: 'auto'\n  },\n  portfolioButton: {\n    variant: 'contained',\n    size: 'small',\n    color: 'primary'\n  },\n  cardRoot: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  cardDetails: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  cardControls: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  cardMedia: {\n    width: 151,\n    height: 151,\n  },\n  cardGap: {\n    width: '15vh'\n  },\n  portfolioMenu: {\n    display: \"inline-block\"\n  },\n  portfolioMenuItem: {\n    display: \"inline\"\n  },\n  textPrimaryColor: {\n    color: theme.palette.text.primary\n  },\n  appBarSpacer: theme.mixins.toolbar\n});\n\n/**\n * The dashboard logged in users will use to navigate the page\n * \n * @component\n */\nclass Dashboard extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      nameDialogState: false,\n      portfolioName: \"MyPortfolio\",\n      duplicateKeyError: false,\n      duplicateKeyHelperText: \"\",\n      anchorEl: null,\n      currentPortfolio_Id: \"\",\n      deleteDialogState: false,\n      changeNameDialogState: false,\n      changedName: \"\",\n      images: {},\n      defaultPreviewSrc: \"https://cdn.dribbble.com/users/200733/screenshots/15094543/media/fb4bf141f17b05df82f77926d94ccd6d.png\"\n    }\n\n    this.handleAddPortfolio = this.handleAddPortfolio.bind(this);\n    this.handleOpenPortfolio = this.handleOpenPortfolio.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleNameDialog = this.handleNameDialog.bind(this);\n    this.handleDeletePortfolio = this.handleDeletePortfolio.bind(this);\n    this.handleOpenEditMenu = this.handleOpenEditMenu.bind(this);\n    this.handleCloseEditMenu = this.handleCloseEditMenu.bind(this);\n    this.handleDeleteDialogState = this.handleDeleteDialogState.bind(this);\n    this.handleChangeNameDialogState = this.handleChangeNameDialogState.bind(this);\n    this.handleChangePortfolioName = this.handleChangePortfolioName.bind(this);\n    this.handleGetImage = this.handleGetImage.bind(this);\n    this.handleDeleteImage = this.handleDeleteImage.bind(this);\n  }\n\n  /**\n   * Attempts to fetch user details and logged in status from localStorage after component is rendered.\n   * \n   * repopulateState takes a while to run, so it is necessary to await it, then fetchPortfolios again.\n   * \n   * @return void\n   * @memberof Dashboard\n   */\n  async componentDidMount() {\n    if (!this.props.loggedIn) {\n      const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE));\n      if (localStorageItem !== null) {\n        await this.props.repopulate_state(localStorageItem);\n      }\n    }\n    await this.props.fetchPortfolios(this.props.id);\n\n    this.props.portfolios.map(portfolio => this.handleGetImage(portfolio._id));\n  }\n\n  /**\n   * Testing purposes only\n   * \n   * @param {*} e unused\n   * @ignore\n   */\n  checkCookie(e) {\n    console.log('testing cookie');\n    axios({\n      method: \"GET\",\n      url: process.env.REACT_APP_BACKEND + '/portfolio/status',\n      withCredentials: true\n    }).then(res => {\n      console.log(\"authorized\")\n      console.log(res.data)\n    });\n  }\n\n  /**\n   * Handles changes in change name dialog textfield. Also resets any errors due to duplicate or empty name input.\n   * \n   * @param {Object} event \n   * @returns void\n   * @memberof Dashboard\n   */\n  handleOnChange(event) {\n    this.setState({\n      duplicateKeyError: false,\n      duplicateKeyHelperText: \"\"\n    })\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * Handles the opening and closing of name dialog for setting new portfolio names.\n   * \n   * @param {boolean} bool boolean indicating state of name dialog. true to show and false to hide.\n   * @returns void\n   * @memberof Dashboard\n   */\n  handleNameDialog(bool) {\n    this.setState({\n      nameDialogState: bool\n    });\n  }\n\n  /**\n   * Handles the opening and closing of delete portfolio dialog for deleting portfolios. If true, delete dialog will be set to open.\n   * Edit menu will be set to hide. If false, delete dialog will hide and the portfolio name, error boolean and error message will be reset.\n   *\n   * @param {boolean} bool boolean indicating state of delete dialog. true to show and false to hide.\n   * @returns void\n   * @memberof Dashboard\n   */\n  handleDeleteDialogState(bool) {\n    if (bool) {\n      this.handleCloseEditMenu();\n    } else {\n      //after closing dialog, need to reset error, error text and the relevant text field\n      this.setState({\n        portfolioName: \"\",\n        duplicateKeyError: false,\n        duplicateKeyHelperText: \"\"\n      });\n    }\n    this.setState({\n      deleteDialogState: bool\n    });\n  }\n\n  /**\n   * Checks for duplicate and empty Portfolio names. Then saves selected Portfolio name to localStorage and redux state. \n   * Then if portfolio name passes check, changes route to /edit to render a fresh Portfolio creation screen.\n   * Otherwise, error will be indicated and appropriate error message will be set.\n   * \n   * @return void\n   * @memberof Dashboard\n   */\n  handleAddPortfolio() {\n    if (this.state.portfolioName === \"\") {\n      this.setState({\n        duplicateKeyError: true,\n        duplicateKeyHelperText: \"Portfolio name cannot be empty\"\n      })\n    } else {\n      if (this.props.portfolios.filter(portfolio => portfolio.name === this.state.portfolioName).length === 0) {\n        //This clears current work from local, so we need to arrest the screen whenever user attempts to leave a portfolio\n        //page and remind him to save before leaving.\n        this.props.clearCurrentWorkFromLocal();\n\n        const portfolio = {\n          _id: undefined,\n          name: this.state.portfolioName,\n          pages: undefined\n        }\n\n        this.props.saveCurrentWorkToLocal(portfolio);\n        this.props.history.push(\"/edit\");\n      } else {\n        this.setState({\n          duplicateKeyError: true,\n          duplicateKeyHelperText: \"Portfolio name already exists\"\n        })\n      }\n    }\n\n  }\n\n  /**\n   * Fetches the requested portfolio from mongoDB, then saves it to localStorage and redux state.\n   * Then changes route to /edit to render the Portfolio.\n   * \n   * @param {Object} event\n   * @return void\n   * @memberof Dashboard\n   */\n  async handleOpenPortfolio(event) {\n\n    const id = event.currentTarget.id;\n\n    await axios({\n      method: \"GET\",\n      url: process.env.REACT_APP_BACKEND + \"/portfolio/\" + id,\n      withCredentials: true\n    }).then(async res => {\n      console.log(`portfolio ${res.data.portfolio.name} fetched`);\n      //Need to wait for portfolio to be saved to localStorage before changing route\n      //Since the website is public anyways, portfolio data is meant to be public and thus not considered sensitive.\n      //LocalStorage is suitable to store portfolio data.\n      await this.props.saveCurrentWorkToLocal(res.data.portfolio);\n\n      this.props.history.push(\"/edit\");\n    }).catch(err => {\n      handleErrors(err, this.props.history);\n    });\n  }\n\n  /**\n   * Handles the deletion of portfolio from mongodb as well as attached images.\n   * Then sets delete dialog to hide.\n   *\n   * @returns void\n   * @memberof Dashboard\n   */\n  async handleDeletePortfolio() {\n    await axios({\n      method: \"DELETE\",\n      url: process.env.REACT_APP_BACKEND + \"/portfolio/delete/\" + this.state.currentPortfolio_Id,\n      withCredentials: true\n    }).then(async res => {\n      console.log(res.data.message);\n      await this.props.fetchPortfolios(this.props.id);\n\n      //deletes all images related to said portfolio\n      for (let key of Object.keys(this.state.images[this.state.currentPortfolio_Id])) {\n        await this.handleDeleteImage(key);\n      }\n\n      const temp = this.state.images;\n      delete temp[this.state.currentPortfolio_Id];\n      this.setState({\n        images: temp\n      });\n\n    }).catch(err => {\n      handleErrors(err, this.props.history);\n    })\n\n    this.handleDeleteDialogState(false);\n  }\n\n  /**\n   * Handles the opening of edit menu for a portfolio. Also sets the state field currentPortfolio_Id to the selected Portfolio's _id.\n   * \n   * @param {Object} event\n   * @return void\n   * @memberof Dashboard\n   */\n  handleOpenEditMenu(event) {\n    this.setState({\n      anchorEl: event.currentTarget,\n      currentPortfolio_Id: event.currentTarget.id\n    });\n  }\n\n  /**\n   * Handles the closing of edit menu for a portfolio. Does not reset the currentPortfolio_Id since it could be used in changing\n   * portfolio name or deleting portfolio.\n   * \n   * @return void\n   * @memberof Dashboard\n   */\n  handleCloseEditMenu() {\n    this.setState({\n      anchorEl: null\n    });\n  }\n\n  /**\n   * Handles the opening and closing of change name dialog for changing portfolio name. If true, closes edit menu. If false,\n   * resets changedName, error boolean and error message.\n   * \n   * @param {boolean} bool boolean indicating state of change name dialog. true to show and false to hide.\n   * @returns void\n   * @memberof Dashboard\n   */\n  handleChangeNameDialogState(bool) {\n    if (bool) {\n      this.handleCloseEditMenu();\n    } else {\n      //after closing dialog, need to reset error, error text and the relevant text field\n      this.setState({\n        changedName: \"\",\n        duplicateKeyError: false,\n        duplicateKeyHelperText: \"\"\n      });\n    }\n\n    this.setState({\n      changeNameDialogState: bool\n    });\n  }\n\n  //currentPortfolio_Id will be set to the _id of the selected portfolio when menu is opened, so once in the dialog,\n  //currentPortfolio_Id will be the correct one.\n\n  /**\n   * Checks for duplicate or empty portfolio name. If check passes, a request will be made to backend to change portfolio name.\n   * If check fails, error boolean will be set to true and appropriate error message will be set.\n   * \n   * @returns void\n   * @memberof Dashboard\n   */\n  async handleChangePortfolioName() {\n    if (this.state.changedName === \"\") {\n      this.setState({\n        duplicateKeyError: true,\n        duplicateKeyHelperText: \"Portfolio name cannot be empty\"\n      });\n    } else {\n      if (this.props.portfolios.filter(portfolio => portfolio.name === this.state.changedName).length === 0) {\n        const originalPortfolio = this.props.portfolios.find(element => element._id === this.state.currentPortfolio_Id);\n        const changedPortfolio = { ...originalPortfolio };\n        changedPortfolio.name = this.state.changedName;\n        await axios({\n          method: \"PUT\",\n          url: process.env.REACT_APP_BACKEND + \"/portfolio/updatePortfolio\",\n          withCredentials: true,\n          data: {\n            portfolio: changedPortfolio\n          }\n        }).then(res => {\n          console.log(res.data.message);\n        }).catch(err => {\n          handleErrors(err, this.props.history);\n        })\n\n        await this.props.fetchPortfolios(this.props.id);\n        this.handleChangeNameDialogState(false);\n\n      } else {\n        this.setState({\n          duplicateKeyError: true,\n          duplicateKeyHelperText: \"Portfolio name already exists\"\n        });\n      }\n    }\n\n  }\n\n  /**\n   * Takes in a string portfolio_id and first sends a request to backend to retrieve an array of _id representing image documents attached\n   * to the portfolio. Then for each of these _ids, send a request to backend to retrieve the image. The image will then be added to\n   * state object images.\n   * \n   * @param {string} portfolio_id portfolio's _id\n   * @returns void\n   * @memberof Dashboard\n   */\n  async handleGetImage(portfolio_id) {\n    await axios({\n      method: \"GET\",\n      url: process.env.REACT_APP_BACKEND + \"/portfolio/getImageRefs/\" + portfolio_id,\n      withCredentials: true\n    }).then(async res => {\n      console.log(res.data.message);\n      const imageRefs = res.data.images;\n      const images = this.state.images;\n      for (let imageRef of imageRefs) {\n        await axios({\n          method: \"GET\",\n          url: process.env.REACT_APP_BACKEND + \"/portfolio/getImage/\" + portfolio_id,\n          withCredentials: true,\n          responseType: 'blob',\n          params: {\n            label: imageRef.label\n          }\n        }).then(res => {\n          console.log(`image ${imageRef.label} fetched`);\n          const temp = {};\n          temp[imageRef.label] = URL.createObjectURL(res.data);\n          images[portfolio_id] = temp;\n        }).catch(err => {\n          if (err.response) {\n            console.log(err.response.data);\n          } else {\n            console.log(err.message);\n          }\n        })\n      }\n\n      this.setState({\n        images: images\n      });\n    }).catch(err => {\n      handleErrors(err, this.props.history);\n    });\n  }\n\n  /**\n   * Sends a request to backend to delete an image with given label that is attached to the portfolio with _id that is the state field currentPortfolio_id.\n   * The image is then deleted from state object images.\n   * \n   * @param {string} label image's label\n   * @returns void\n   * @memberof Dashboard\n   */\n  async handleDeleteImage(label) {\n    await axios({\n      method: \"DELETE\",\n      url: process.env.REACT_APP_BACKEND + \"/portfolio/deleteImage/\" + this.state.currentPortfolio_Id,\n      withCredentials: true,\n      data: {\n        label: label\n      }\n    }).then(res => {\n      console.log(res.data.message);\n      const temp = this.state.images\n      const tempPortfolioImages = temp[this.state.currentPortfolio_Id];\n      if (tempPortfolioImages !== undefined) {\n        delete tempPortfolioImages[label];\n        this.setState({\n          images: temp\n        });\n      }\n    }).catch(err => {\n      handleErrors(err, this.props.history);\n    });\n  }\n\n\n  render() {\n    const { portfolios, classes } = this.props\n    return (\n      <div className={classes.root}>\n        <div className={classes.appBarSpacer} />\n        <Typography variant=\"h2\" component=\"h3\">Here is your dashboard {this.props.name}!</Typography>\n        <Grid container direction='row' justify='center' alignItems='center'>\n          {\n            this.props.loading\n              ?\n              <BeatLoader />\n              :\n              this.props.error\n                ?\n                this.props.error.response.status === 404\n                  ?\n                  <Typography variant=\"h6\">Create your first Portfolio!</Typography>\n                  :\n                  <Typography variant=\"h6\">{this.props.error.message}</Typography>\n                :\n                portfolios.length === 0\n                  ?\n                  <Typography variant=\"h6\">Oops. It appears that you have no saved Portfolios</Typography>\n                  :\n                  portfolios.map((element, idx) => {\n                    return (\n                      <Card\n                        className={classes.cardRoot}\n                        key={idx}\n                      >\n                        <div className={classes.cardDetails}>\n                          <CardContent>\n                            <Typography component=\"h5\" variant=\"h5\">{element.name}</Typography>\n                          </CardContent>\n                          <CardActions className={classes.cardControls}>\n                            <Button\n                              id={element._id}\n                              className={classes.portfolioButton}\n                              aria-controls=\"edit-menu\"\n                              aria-haspopup=\"true\"\n                              onClick={this.handleOpenEditMenu}\n                            >\n                              <FaRegEdit />\n                            </Button>\n                            <span className={classes.cardGap} />\n                            <Button\n                              id={element._id}\n                              className={classes.portfolioButton}\n                              onClick={this.handleOpenPortfolio}\n                            >\n                              Open\n                                                            </Button>\n                          </CardActions>\n                        </div>\n\n                        <CardMedia\n                          component=\"img\"\n                          className={classes.cardMedia}\n                          height='150'\n                          width='150'\n                          src={this.state.images[element._id] === undefined\n                            ?\n                            this.state.defaultPreviewSrc\n                            :\n                            this.state.images[element._id][\"preview\"] === undefined\n                              ?\n                              this.state.defaultPreviewSrc\n                              :\n                              this.state.images[element._id][\"preview\"]\n                          }\n                        />\n                      </Card>\n\n                    );\n                  })\n          }\n        </Grid>\n        <Button onClick={() => this.handleNameDialog(true)} className={classes.portfolioButton}>Add a Portfolio</Button>\n        <Menu\n          id=\"edit-menu\"\n          anchorEl={this.state.anchorEl}\n          className={classes.portfolioMenu}\n          keepMounted\n          open={Boolean(this.state.anchorEl)}\n          onClose={this.handleCloseEditMenu}\n          getContentAnchorEl={null}\n          anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n          transformOrigin={{ vertical: 'center', horizontal: 'left' }}\n        >\n          <MenuItem className={classes.portfolioMenuItem} onClick={() => this.handleDeleteDialogState(true)}>Delete</MenuItem>\n          <MenuItem className={classes.portfolioMenuItem} onClick={() => this.handleChangeNameDialogState(true)}>Change Name</MenuItem>\n        </Menu>\n        <Dialog\n          open={this.state.nameDialogState}\n          onClose={() => this.handleNameDialog(false)}\n          aria-labelledby=\"portfolio name dialog\"\n          fullWidth\n        >\n          <DialogTitle id=\"portfolio-name-dialog-title\">\n            Portfolio Name\n                    </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Set your Portfolio name here.\n                        </DialogContentText>\n            <TextField\n              name=\"portfolioName\"\n              autoFocus\n              margin=\"dense\"\n              label=\"Portfolio Name\"\n              type=\"string\"\n              defaultValue={this.state.portfolioName}\n              fullWidth\n              onChange={this.handleOnChange}\n              error={this.state.duplicateKeyError}\n              helperText={this.state.duplicateKeyHelperText}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => this.handleNameDialog(false)}\n            >\n              Cancel\n                        </Button>\n            <Button\n              onClick={this.handleAddPortfolio}\n            >\n              Set Name\n                        </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open={this.state.deleteDialogState}\n          onClose={() => this.handleDeleteDialogState(false)}\n          aria-labelledby=\"delete-confirmation-dialog\"\n          aria-describedby=\"delete-confirmation-dialog\"\n          fullWidth\n        >\n          <DialogTitle id=\"delete-confirmation-title\">Delete Portfolio Confirmation</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"delete-confirmation-description\" className={classes.textPrimaryColor}>\n              Are you sure you want to delete this Portfolio? This action is irreversible and your portfolio will be deleted permanently.\n                            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handleDeleteDialogState(false)}>\n              Cancel\n                        </Button>\n            <Button onClick={this.handleDeletePortfolio}>\n              Delete\n                        </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open={this.state.changeNameDialogState}\n          onClose={() => this.handleChangeNameDialogState(false)}\n          aria-labelledby=\"change-name-dialog\"\n          aria-describedby=\"change-name-dialog\"\n          fullWidth\n        >\n          <DialogTitle id=\"change-name-dialog-title\">Change Portfolio Name</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Type your new portfolio name here.\n                            </DialogContentText>\n            <TextField\n              name=\"changedName\"\n              autoFocus\n              margin=\"dense\"\n              label=\"New Portfolio Name\"\n              type=\"string\"\n              defaultValue={this.state.changedName}\n              fullWidth\n              onChange={this.handleOnChange}\n              error={this.state.duplicateKeyError}\n              helperText={this.state.duplicateKeyHelperText}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handleChangeNameDialogState(false)}>\n              Cancel\n                            </Button>\n            <Button onClick={this.handleChangePortfolioName}>\n              Change\n                            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n    )\n  }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof Dashboard\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn,\n  name: state.login.name,\n  id: state.login.id,\n  portfolios: state.portfolio.portfolios,\n  loading: state.portfolio.loading,\n  error: state.portfolio.error\n});\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof Dashboard\n */\nconst mapDispatchToProps = {\n  repopulate_state,\n  fetchPortfolios,\n  saveCurrentWorkToLocal,\n  clearCurrentWorkFromLocal\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Dashboard)));\n","import * as aiIcons from 'react-icons/ai'\nimport * as bsIcons from 'react-icons/bs'\nimport * as biIcons from 'react-icons/bi'\nimport * as diIcons from 'react-icons/di'\nimport * as fiIcons from 'react-icons/fi'\nimport * as fcIcons from 'react-icons/fc'\nimport * as faIcons from 'react-icons/fa'\nimport * as giIcons from 'react-icons/gi'\nimport * as goIcons from 'react-icons/go'\nimport * as grIcons from 'react-icons/gr'\nimport * as hiIcons from 'react-icons/hi'\nimport * as imIcons from 'react-icons/im'\nimport * as ioIcons from 'react-icons/io'\nimport * as io5Icons from 'react-icons/io5'\nimport * as mdIcons from 'react-icons/md'\nimport * as riIcons from 'react-icons/ri'\nimport * as siIcons from 'react-icons/si'\nimport * as tiIcons from 'react-icons/ti'\nimport * as vscIcons from 'react-icons/vsc'\nimport * as wiIcons from 'react-icons/wi'\nimport * as cgIcons from 'react-icons/cg'\n\nexport const ai = {label:'Ant Design',icons:aiIcons}\nexport const bs = {label:'Bootstrap',icons:bsIcons}\nexport const bi = {label:'BoxIcons',icons:biIcons}\nexport const di = {label:'Devicons',icons:diIcons}\nexport const fi = {label:'Feather',icons:fiIcons}\nexport const fc = {label:'Flat Color',icons:fcIcons}\nexport const fa = {label:'Font Awesome',icons:faIcons}\nexport const gi = {label:'Game Icons',icons:giIcons}\nexport const go = {label:'Github Octicons',icons:goIcons}\nexport const gr = {label:'Grommet',icons:grIcons}\nexport const hi = {label:'Heroicons',icons:hiIcons}\nexport const im = {label:'IcoMoon',icons:imIcons}\nexport const io = {label:'Ionicons 4',icons:ioIcons}\nexport const io5 = {label:'Ionicons 5',icons:io5Icons}\nexport const md = {label:'Materal Design',icons:mdIcons}\nexport const ri = {label:'Remix',icons:riIcons}\nexport const si = {label:'Simple',icons:siIcons}\nexport const ti = {label:'Typicons',icons:tiIcons}\nexport const vsc = {label:'VS Code',icons:vscIcons}\nexport const wi = {label:'Weather',icons:wiIcons}\nexport const cg = {label:'css.gg',icons:cgIcons}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, TextField, Typography, Modal, Input, Fab, MenuList, MenuItem, Menu, Tab, Tabs } from '@material-ui/core';\nimport { FaPlus, FaTrashAlt, FaChevronLeft, FaChevronRight, FaSave, FaTimes, FaEdit } from \"react-icons/fa\";\nimport { fonts } from '../styles/fonts';\nimport * as icons from '../styles/icons';\n\n/**\n * @file EntryEditor component to provide a user interface for users to style their entries\n * \n * @author Chuan Hao\n * \n * @see EntryEditor\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof EntryEditor\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '5%',\n    textAlign: 'center',\n    backgroundColor: theme.palette.background.default,\n    opacity: '85%'\n  },\n  modal: {\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '1%',\n  },\n  floating: {\n    margin: 0,\n    top: 'auto',\n    left: 'auto',\n    bottom: '8%',\n    right: '5%',\n    position: 'fixed',\n    textAlign: 'center'\n  },\n  textGrid: {\n    margin: '1vw',\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 200px)'\n  },\n  imgGrid: {\n    margin: '1vw',\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 150px)'\n  },\n  imgPreview: {\n    width: '5vw',\n    height: '5vw'\n  },\n  sectionDiv: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 'auto'\n  },\n  div: {\n    padding: '10px'\n  },\n  rowDiv: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'auto',\n  },\n  colDiv: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  styleDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflow: 'auto'\n  },\n  addSectionSpacer: {\n    height: theme.spacing(5)\n  },\n  ctrlDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 'auto',\n    marginLeft: 'auto'\n  },\n  editFAB: {\n    position: 'absolute',\n    marginTop: '2vw',\n    marginLeft: '2vw'\n  },\n  gridDiv: {\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 6em)',\n    gridGap: '10px',\n    justifyContent: 'center',\n    height: '80%',\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n  iconBtn: {\n    width: '4em',\n    height: '3em'\n  },\n  iconDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 'inherit',\n    height: 'inherit'\n  },\n  subModal: {\n    width: '80%',\n    height: '80%',\n    margin: 'auto',\n    backgroundColor: theme.palette.primary.main\n  },\n  hide: {\n    display: 'none'\n  },\n  maxHeightWidth: {\n    width: '100%',\n    height: '100%'\n  },\n  entryIcon: {\n    height: 'inherit'\n  },\n  entryIconName: {\n    width: 'inherit', \n    fontSize: '0.5em'\n  },\n  maxWidth: {\n    width: '100%'\n  },\n  entryInfoDiv: {\n    display: 'flex', \n    flexDirection: 'column'\n  }\n})\n\n/**\n * The dashboard logged in users will use to navigate the page.\n * \n * @component\n * @example\n * const fields = {\n *   width: \"50%\", \n *   height: \"50%\", \n *   fonts: {titleFont: \"title font\"},\n *   colours: {primary: \"#FF0000\", secondary: \"#FFFF00\"},\n *   images: {dp: \"\",bg: \"\"},\n *   texts: {name: \"\",status: \"\"},\n *   sections: []\n * }\n * const info = {\n *   fonts: {titleFont: {label: \"title font\"}},\n *   colours: {primary: {label: \"primary\"},secondary: {label: \"secondary\"}},\n *   images: {dp: {label: \"Your portrait photo\", allowColour: false}, bg: {label: \"Entry background\", allowColour: true}},\n *   texts: {name: {label: \"Your full name\"}, status: {label: \"your current position\"}},\n *   sections: {label: \"Add a work experience\", \n *     entryFormat: { \n *       images: {picture:{label: \"Add a photo\"}}, \n *       texts: {title: {label: \"Add a title\"}, body: {label: \"Describe your experience\"}}\n *     },\n *     defaultEntry: {images: {picture:{value: \"\"}},texts: {title: {value: \"\"},body: {value: \"\"}}},\n *     enabled: true\n *   }\n * }\n * return (<EntryEditor fields={fields} info={info} onChange=true/>)\n */\nclass EntryEditor extends Component {\n  // TODO: check if componenetDidMount can overwrite constructor\n\n  /**\n   * Populates state with fields passed in as attribute fields.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    const copied_fields = JSON.parse(JSON.stringify(this.props.fields));\n    this.state = {\n      data: copied_fields,\n      showEditor: false,\n      anchorEl: null,\n\n      mediaAnchorEl: null,\n      showIcon: false,\n      iconCategory: 'ai',\n      editSection: false,\n      currentSection: 0,\n      imageName: ''\n    }\n    this.handleCreateEntry = this.handleCreateEntry.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleImageUpload = this.handleImageUpload.bind(this);\n    this.handleSectionView = this.handleSectionView.bind(this);\n    this.handleCloseEditor = this.handleCloseEditor.bind(this);\n    this.handleIconSelect = this.handleIconSelect.bind(this);\n    this.handleFont = this.handleFont.bind(this);\n\n    this.fileUploadRef = React.createRef();\n    this.imgColPickerRef = React.createRef();\n  }\n\n  // TODO: elements read from state instead of props\n  // TODO: unbounded mongo models\n  /**\n   * Attempts to fetch entry details where possible so settings are saved.\n   * \n   * @return void\n   * @memberof EntryEditor\n   */\n  componentDidMount() {\n    // is this necessary if template is a widget\n    if (!this.props.loggedIn) {\n      const localStorageItem = JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      this.props.repopulate_state(localStorageItem)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  /**\n   * Event handler for text fields. \n   * Text fields should be named after their keys in the state.\n   * \n   * @param {*} event \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleChange(event, category, section) {\n    console.log(event)\n    if (category === '') {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [event.target.name]: event.target.value\n        }\n      });\n    } else {\n      if (section === undefined || section === false) {\n        const originalCat = { ...this.state.data[category] };\n        originalCat[event.target.name] = event.target.value;\n        this.setState({\n          data: {\n            ...this.state.data,\n            [category]: originalCat\n          }\n        });\n      } else {\n        const newSections = [...this.state.data.sections];\n        newSections[this.state.currentSection].texts[event.target.name] = event.target.value;\n        this.setState({\n          data: {\n            ...this.state.data,\n            sections: newSections\n          }\n        });\n      }\n\n    }\n  }\n\n  // TODO: implement file upload logic. possibly save disk reference/localStorage for efficiency\n  /**\n   * Event handler for text fields. \n   * Text fields should be named after their keys in the state.\n   * \n   * @param {*} event \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleImageUpload(event) {\n    console.log(this.state)\n    // TODO: Open a upload dialog\n    const freader = new FileReader();\n    freader.readAsDataURL(event.target.files[0]);\n    freader.onloadend = (e) => {\n      if (!this.state.editSection) {\n        this.setState({\n          data: {\n            ...this.state.data,\n            images: {\n              ...this.state.data.images,\n              [this.state.imageName]: {\n                src: e.target.result,\n                format: 'image'\n              }\n            }\n          },\n          mediaAnchorEl: null\n        })\n      } else {\n        const newSections = [...this.state.data.sections];\n        // TODO: create deep copy, mutating .src currently mutates original array elements\n        newSections[this.state.currentSection].images[this.state.imageName].src = e.target.result;\n        newSections[this.state.currentSection].images[this.state.imageName].format = 'image'\n        this.setState({\n          data: {\n            ...this.state.data,\n            sections: newSections\n          },\n          mediaAnchorEl: null\n        });\n      }\n    }\n  }\n\n  /**\n   * Event handler for deletion of sub sections.\n   * \n   * @param {*} event \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleDeleteSection(event) {\n    const spliced = this.state.data.sections.filter((item, filterIndex) => filterIndex !== this.state.currentSection);\n    this.setState({\n      data: {\n        ...this.state.data,\n        sections: spliced\n      }\n    })\n  }\n\n  /**\n   * Event handler for entry addition. \n   * Entry will be given default fields specified in the info attribute.\n   * \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleCreateEntry() {\n    // JSON used for deep copy\n    const copy = JSON.parse(JSON.stringify(this.props.info.sections.defaultEntry));\n    this.setState({\n      data: {\n        ...this.state.data,\n        sections: [...this.state.data.sections, copy]\n      }\n    });\n  }\n\n  /**\n   * Event handler to cycle through sub sections\n   * @param {*} event \n   */\n  handleSectionView(modifier) {\n    let nextSection = this.state.currentSection + modifier;\n    if (nextSection < 0) {\n      nextSection = this.state.data.sections.length;\n    } else if (nextSection > this.state.data.sections.length) {\n      nextSection = 0;\n    }\n    this.setState({\n      currentSection: nextSection\n    })\n  }\n\n  /**\n   * Event handler to save changes made in the editor and close the editor\n   * @param {boolean} save whether the changes should be saved to state\n   */\n  handleCloseEditor(save) {\n    if (save) {\n      this.props.onClose(this.state.data, true);\n    } else {\n      this.props.onClose(null, false);\n    }\n    this.setState({\n      showEditor: false\n    })\n  }\n\n  /**\n   * Event handler to update the font the user chose\n   * @param {object} event \n   * @param {string} field the name of the text group to adopt the new font\n   * @param {string} font the font family to be changed to\n   */\n  handleFont(event, field, font) {\n    if (field === undefined) {\n      this.setState({\n        anchorEl: event.currentTarget\n      })\n    } else {\n      this.setState({\n        data: {\n          ...this.state.data,\n          fonts: {\n            ...this.state.data.fonts,\n            [field]: font\n          }\n        },\n        anchorEl: null\n      })\n    }\n  }\n\n  /**\n   * Event handler to update the chosen svg from the icon picker\n   * @param {string} iconName a / separated string indicating the path to the specified icon\n   */\n  handleIconSelect(iconName) {\n    const newValue = `${this.state.iconCategory}/${iconName}`;\n    console.log('test');\n    if (!this.state.editSection) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          images: {\n            ...this.state.data.images,\n            [this.state.imageName]: {\n              src: newValue,\n              format: 'icon'\n            }\n          }\n        },\n        showIcon: false,\n        mediaAnchorEl: null\n      })\n    } else {\n      const newSections = [...this.state.data.sections];\n      // TODO: create deep copy, mutating .src currently mutates original array elements\n      newSections[this.state.currentSection].images[this.state.imageName].src = newValue;\n      newSections[this.state.currentSection].images[this.state.imageName].format = 'icon';\n      this.setState({\n        data: {\n          ...this.state.data,\n          sections: newSections\n        },\n        showIcon: false,\n        mediaAnchorEl: null\n      });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    // TODO: change name/id to field-name-id to avoid collision i.e. colours-primary-0\n    return (\n      <div\n        data-html2canvas-ignore=\"true\"\n      >\n        <Fab\n          className={classes.editFAB}\n          onClick={() => {\n            const copied_fields = JSON.parse(JSON.stringify(this.props.fields));\n            this.setState({\n              data: copied_fields,\n              currentSection: 0,\n              showEditor: true\n            })\n          }}\n        >\n          <FaEdit />\n        </Fab>\n        <Modal className={classes.modal}\n          // open always set to true, open/close logic handled by portfolio\n          open={this.state.showEditor}\n          // TODO: add onClose save logic\n          onClose={() => this.handleCloseEditor(true)}\n          aria-labelledby=\"Entry editor\"\n          aria-describedby=\"Edit your entry fields here\"\n        >\n          <div className={classes.root}>\n            <Typography component=\"h3\" variant=\"h3\">Entry editor</Typography>\n            <input\n              accept=\"image/*\"\n              className={`${classes.imgInput} ${classes.hide}`}\n              ref={this.fileUploadRef}\n              type=\"file\"\n              onChange={this.handleImageUpload}\n            // value={item}\n            />\n            <input\n              type=\"color\"\n              ref={this.imgColPickerRef}\n              onChange={(event) => {\n                if (this.state.editSection) {\n                  const newSections = [...this.state.data.sections];\n                  newSections[this.state.currentSection].images[this.state.imageName].src = event.target.value;\n                  newSections[this.state.currentSection].images[this.state.imageName].format = 'colour';\n                  this.setState({\n                    data: {\n                      ...this.state.data,\n                      sections: newSections\n                    },\n                    mediaAnchorEl: null\n                  });\n                } else {\n                  this.setState({\n                    data: {\n                      ...this.state.data,\n                      images: {\n                        ...this.state.data.images,\n                        [this.state.imageName]: {\n                          src: event.target.value,\n                          format: 'colour'\n                        }\n                      }\n                    },\n                    mediaAnchorEl: null\n                  })\n                }\n              }}\n              onBlur={() => console.log(\"asda\")}\n              className={classes.hide}\n            />\n            <Modal\n              open={this.state.showIcon}\n              aria-labelledby=\"icon selection modal\"\n              aria-describedby=\"a modal for users to pick an icon\"\n              className={`${classes.modal} ${classes.subModal}`}\n              onClose={() => this.setState({ showIcon: false, mediaAnchorEl: null })}\n            >\n              <div className={classes.maxHeightWidth}>\n                <Tabs\n                  name=\"iconCategory\"\n                  value={this.state.iconCategory}\n                  onChange={(event, tab) => this.setState({ iconCategory: tab })}\n                  variant=\"scrollable\"\n                  scrollButtons=\"auto\"\n                >\n                  {Object.entries(icons).map(([key, icon]) => {\n                    return (<Tab label={icon.label} value={key} className={classes.entryIcon} />)\n                  })}\n                </Tabs>\n                <div role='tabpanel' className={classes.gridDiv}>\n                  {Object.entries(icons[this.state.iconCategory].icons).map(([iconName, value]) => {\n                    const PreviewIcon = value;\n                    return (\n                      <IconButton onClick={() => this.handleIconSelect(iconName)} >\n                        <div className={classes.iconDiv}>\n                          <PreviewIcon size='1.5em' />\n                          <Typography noWrap variant='h6' component='h6' className={classes.entryIconName}  >\n                            {iconName}\n                          </Typography>\n                        </div>\n                      </IconButton>);\n                  })}\n                </div>\n              </div>\n            </Modal>\n            <div className={classes.rowDiv}>\n              <div className={classes.styleDiv}>\n                <TextField\n                  id=\"width\"\n                  label=\"width\"\n                  name=\"width\"\n                  value={this.state.data.width}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={(event) => this.handleChange(event, \"\")}\n                  className={classes.styleInput}\n                />\n                <TextField\n                  id=\"height\"\n                  label=\"height\"\n                  name=\"height\"\n                  value={this.state.data.height}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={(event) => this.handleChange(event, \"\")}\n                  className={classes.styleInput}\n                />\n                {Object.entries(this.state.data.fonts).map(([key, item]) => {\n                  return (\n                    <div>\n                      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={(event) => this.handleFont(event)}>\n                        <Typography variant=\"inherit\" style={{ fontFamily: item }}>\n                          {this.props.info.fonts[key].label}\n                        </Typography>\n                      </Button>\n                      <Menu\n                        name={key}\n                        id={key}\n                        anchorEl={this.state.anchorEl}\n                        keepMounted\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={() => this.setState({ anchorEl: null })}\n                      >\n                        {fonts.map((fontName) => (\n                          <MenuItem onClick={(event) => this.handleFont(event, key, fontName)}>\n                            <Typography variant=\"inherit\" style={{ fontFamily: fontName }}>\n                              {fontName}\n                            </Typography>\n                          </MenuItem>\n                        ))}\n                      </Menu>\n                    </div>\n                  )\n                })}\n                {Object.entries(this.state.data.colours).map(([key, item]) => {\n                  return (\n                    <div>\n                      <Input\n                        type=\"color\"\n                        name={key}\n                        id={key}\n                        value={item}\n                        onChange={(event) => this.handleChange(event, \"colours\")}\n                        className={classes.maxWidth}\n                      />\n                      <TextField\n                        name={key}\n                        id={key}\n                        value={item}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={(event) => this.handleChange(event, \"colours\")}\n                      />\n                      <Typography component=\"h6\" variant=\"h6\">\n                        {this.props.info.colours[key].label}\n                      </Typography>\n                    </div>\n                  )\n                })}\n              </div>\n              <div className={classes.colDiv}>\n                <div className={classes.rowDiv}>\n                  <div className={classes.imgGrid}>\n                    {Object.entries(this.state.data.images).map(([key, item]) => {\n                      let Preview;\n                      switch (item.format) {\n                        case 'image':\n                          Preview = (props) => <img src={item.src} className={classes.imgPreview} />;\n                          break;\n                        case 'icon':\n                          const category = item.src.split('/');\n                          Preview = icons[category[0]].icons[category[1]];\n                          break;\n                        case 'colour':\n                          Preview = (props) => <div style={{ backgroundColor: item.src, height: 100, width: 100 }} />;\n                          break;\n                        default:\n                          break;\n                      }\n                      return (\n                        <div>\n                          <Button aria-controls=\"media-menu\" aria-haspopup=\"true\" onClick={(event) => this.setState(\n                            {\n                              mediaAnchorEl: event.currentTarget,\n                              imageName: key,\n                              editSection: false\n                            })}>\n                            <Preview />\n                            <Typography>\n                              {this.props.info.images[key].label}\n                            </Typography>\n                          </Button>\n                          <Menu\n                            id=\"media-menu\"\n                            anchorEl={this.state.mediaAnchorEl}\n                            keepMounted\n                            open={Boolean(this.state.mediaAnchorEl) && !this.state.editSection && this.state.imageName === key}\n                            onClose={() => this.setState({ mediaAnchorEl: null })}\n                          >\n                            {this.props.info.images[key].format.map((format) => {\n                              switch (format) {\n                                case 'image':\n                                  return (<MenuItem onClick={() => {\n                                    this.fileUploadRef.current.click()\n                                  }}\n                                  >{format}</MenuItem>)\n                                case 'icon':\n                                  const category = item.src.split('/');\n                                  return (<MenuItem onClick={() => this.setState(\n                                    {\n                                      showIcon: true,\n                                      iconCategory: category[0]\n                                    })}\n                                  >{format}</MenuItem>);\n                                case 'colour':\n                                  return (<MenuItem onClick={\n                                    () => this.imgColPickerRef.current.click()\n                                  }>{format}</MenuItem>);\n                                default:\n                                  break;\n                              }\n                            })}\n                          </Menu>\n                        </div>\n                      );\n                    })}\n                  </div>\n                  <div className={classes.textGrid}>\n                    {Object.entries(this.state.data.texts).map(([key, item]) => {\n                      return (\n                        <div>\n                          {/* Preview icon that changes according to selected colour */}\n                          {/* <Button id=\"colourPreview\"/> */}\n                          <TextField\n                            name={key}\n                            id={key}\n                            label={this.props.info.texts[key].label}\n                            value={item}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={(event) => this.handleChange(event, \"texts\")}\n                          />\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n                {this.props.info.sections.enabled &&\n                  <div className={classes.sectionDiv}>\n                    <IconButton id=\"left\" onClick={() => this.handleSectionView(-1)}>\n                      <FaChevronLeft />\n                    </IconButton>\n                    {\n                      this.state.currentSection === this.state.data.sections.length\n                        ? <div className={classes.colDiv}>\n                          <Typography component=\"h4\" variant=\"h4\" className={classes.colDiv}>Add new section</Typography>\n                          <div className={classes.addSectionSpacer} />\n                          <IconButton onClick={this.handleCreateEntry}><FaPlus /></IconButton>\n                        </div>\n                        : <div className={classes.colDiv}>\n                          <div className={classes.rowDiv}>\n                            <Typography component=\"h4\" variant=\"h4\" className={classes.colDiv}>Section {this.state.currentSection + 1}</Typography>\n                            <IconButton onClick={(event) => this.handleDeleteSection(event)}><FaTrashAlt /></IconButton>\n                          </div>\n                          <div className={classes.rowDiv}>\n                            <div className={classes.imgGrid}>\n                              {Object.entries(this.state.data.sections[this.state.currentSection].images).map(([key, item]) => {\n                                let Preview;\n                                switch (item.format) {\n                                  case 'image':\n                                    Preview = (props) => <img src={item.src} className={classes.imgPreview} />;\n                                    break;\n                                  case 'icon':\n                                    const category = item.src.split('/');\n                                    const SvgIcon = icons[category[0]].icons[category[1]];\n                                    Preview = (props) => <SvgIcon size='3em' />\n                                    break;\n                                  case 'colour':\n                                    Preview = (props) => <div style={{ backgroundColor: item.src, height: 100, width: 100 }} />;\n                                    break;\n                                  default:\n                                    break;\n                                }\n                                return (\n                                  <div>\n                                    <Button aria-controls=\"media-menu\" aria-haspopup=\"true\" onClick={(event) => this.setState({\n                                      mediaAnchorEl: event.currentTarget,\n                                      imageName: key,\n                                      editSection: true,\n                                    })}>\n                                      <div className={classes.entryInfoDiv}>\n                                        <Preview />\n                                        <Typography>\n                                          {this.props.info.sections.entryFormat.images[key].label}\n                                        </Typography>\n                                      </div>\n                                    </Button>\n                                    <Menu\n                                      id=\"media-menu\"\n                                      anchorEl={this.state.mediaAnchorEl}\n                                      keepMounted\n                                      open={Boolean(this.state.mediaAnchorEl) && this.state.editSection && this.state.imageName === key}\n                                      onClose={() => this.setState({ mediaAnchorEl: null })}\n                                    >\n                                      {this.props.info.sections.entryFormat.images[key].format.map((format) => {\n                                        // TODO: debug change format errors\n                                        switch (format) {\n                                          case 'image':\n                                            return (<MenuItem onClick={() => {\n                                              this.fileUploadRef.current.click()\n                                            }}\n                                            >{format}</MenuItem>)\n                                          case 'icon':\n                                            const category = item.src.split('/');\n                                            return (<MenuItem onClick={() => this.setState(\n                                              {\n                                                showIcon: true,\n                                                iconCategory: category[0],\n                                              })}\n                                            >{format}</MenuItem>);\n                                          case 'colour':\n                                            return (<MenuItem onClick={\n                                              this.imgColPickerRef.current.click()\n                                            }>{format}</MenuItem>);\n                                          default:\n                                            break;\n                                        }\n                                      })}\n                                    </Menu>\n                                  </div>\n                                );\n                              })}\n                            </div>\n                            <div className={classes.textGrid}>\n                              {Object.entries(this.state.data.sections[this.state.currentSection].texts).map(([key, item]) => {\n                                // TODO: make maxRow field in info?\n                                return (\n                                  <div>\n                                    <TextField\n                                      name={key}\n                                      id={key}\n                                      label={this.props.info.sections.entryFormat.texts[key].label}\n                                      value={item}\n                                      margin=\"normal\"\n                                      variant=\"outlined\"\n                                      onChange={(event) => this.handleChange(event, 'texts', true)}\n                                      multiline\n                                      rowsMax={3}\n                                    />\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        </div>\n                    }\n                    <IconButton id=\"right\" onClick={() => this.handleSectionView(1)}>\n                      <FaChevronRight />\n                    </IconButton>\n                  </div>}\n              </div>\n            </div>\n            <div className={classes.ctrlDiv}>\n              <Fab variant=\"extended\" onClick={() => this.handleCloseEditor(true)}><FaSave />Save</Fab>\n              <Fab variant=\"extended\" onClick={() => this.handleCloseEditor(false)}><FaTimes />Cancel</Fab>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof EntryEditor\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof EntryEditor\n */\nconst mapDispatchToProps = {\n  repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EntryEditor))","export default __webpack_public_path__ + \"static/media/IntroMinimalist.ec6700a1.JPG\";","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport preview from '../../res/preview/introduction/IntroMinimalist.JPG'\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  std: { display: 'block' },\n  textBox: {\n    backgroundColor: '#FFFFFF',\n    opacity: '75%',\n    padding: '15%',\n    width: 'max-content'\n  }\n});\n\nclass IntroTemplateMinimalist extends Component {\n  constructor() {\n    super();\n  }\n\n  static templateName = \"Minimalist\";\n\n  static preview = preview;\n\n  static info = {\n    fonts: { titleFont: { label: \"title font\" } },\n    colours: { primary: { label: \"primary\" }, secondary: { label: \"secondary\" } },\n    images: { dp: { label: \"Your portrait photo\", format: ['image'] }, bg: { label: \"Entry background\", format: ['image', 'colour'] } },\n    texts: { name: { label: \"Your full name\" }, status: { label: \"your current position\" } },\n    sections: {}\n  };\n\n  static script = (index) => \"\";\n\n  static defaultField = {\n    width: \"100%\",\n    height: \"80vh\",\n    fonts: { titleFont: \"Roboto\" },\n    colours: { primary: \"#d19a19\", secondary: \"#000000\" },\n    images: { dp: { src: \"https://bit.ly/3fRv2Y2\", format: 'image' }, bg: { src: \"https://bit.ly/2RWO4Ei\", format: 'image' } },\n    texts: { name: \"Port Folio\", status: \"UI/UX developer\" },\n    sections: []\n  };\n\n  render() {\n    const { classes, fields } = this.props;\n    return (\n      <div className={classes.root} style={{\n        backgroundRepeat: false,\n        backgroundImage: fields.images.bg.format === 'image' ? `url(\"${fields.images.bg.src}\")` : '',\n        backgroundColor: fields.images.bg.format === 'colour' ? fields.images.bg.src : '',\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: fields.width,\n        height: fields.height,\n        minHeight: \"1000px\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      }}>\n        <CssBaseline />\n        <div style={{ marginLeft: \"auto\", marginRight: \"10%\" }}>\n          <Box className={classes.textBox}>\n            <Typography component=\"h2\" variant=\"h2\" style={{ color: fields.colours.secondary, fontFamily: \"Arial, Helvetica, sans-serif\" }}>\n              Hello! my name is\n            </Typography>\n            <Typography component=\"h1\" variant=\"h1\" style={{ color: fields.colours.primary, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif` }}>\n              {fields.texts.name}\n            </Typography>\n            <Typography component=\"h2\" variant=\"h2\" style={{ color: fields.colours.secondary, fontFamily: \"Arial, Helvetica, sans-serif\" }}>\n              {fields.texts.status}\n            </Typography>\n          </Box>\n        </div>\n        <img src={fields.images.dp.src} alt=\"my portrait\" style={{ height: \"100%\", width: \"auto\", marginRight: \"auto\" }} />\n      </div>);\n  }\n}\n\nexport default withStyles(styles)(IntroTemplateMinimalist);\n","export default __webpack_public_path__ + \"static/media/TimelineMinimalist.58a9e55e.JPG\";","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport preview from '../../res/preview/timeline/TimelineMinimalist.JPG'\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  std: { display: 'block' },\n  timelineImg: {\n    borderRadius: '50%',\n    height: '5vw',\n    width: '5vw'\n  },\n  title: {\n    margin: '5%'\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'left',\n    textAlign: 'left',\n    width: '50%',\n    margin: '1%'\n  },\n  sectionTextDiv: {\n    marginLeft: '3%',\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\n\nclass TimelineTemplateMinimalist extends Component {\n  constructor() {\n    super();\n  }\n\n  static templateName = \"Minimalist\";\n\n  static script = (index) => \"\";\n\n  static preview = preview;\n\n  static info = {\n    fonts: { titleFont: { label: \"title font\" } },\n    colours: { primary: { label: \"primary\" }, secondary: { label: \"secondary\" } },\n    images: { bg: { label: \"Entry background\", format: ['image'] } },\n    texts: { title: { label: \"Timeline title\" } },\n    sections: {\n      enabled: true,\n      defaultEntry: {\n        images: { timelineImage: { src: \"https://bit.ly/3c3wsNL\", format: 'image' } },\n        texts: { timelineTitle: \"New section\", timelineDate: \"2077\" }\n      },\n      entryFormat: {\n        images: { timelineImage: { label: \"Event Image\", format: ['image'] } },\n        texts: { timelineTitle: { label: \"Event name\" }, timelineDate: { label: \"Event date\" } }\n      }\n    }\n  };\n\n  static defaultField = {\n    width: \"100%\",\n    height: \"fit-content\",\n    fonts: { titleFont: \"roboto\" },\n    colours: { primary: \"#d19a19\", secondary: \"#000000\" },\n    images: { bg: { src: \"https://bit.ly/3i3I9I2\", format: 'image' } },\n    texts: { title: \"My past experiences\" },\n    sections: [{\n      images: { timelineImage: { src: \"https://bit.ly/3hXPM2R\", format: 'image' } },\n      texts: { timelineTitle: \"Portfolio Deployed on Github!\", timelineDate: \"2021\" }\n    },\n    {\n      images: { timelineImage: { src: \"https://bit.ly/3c3wsNL\", format: 'image' } },\n      texts: { timelineTitle: \"Portfolio added to resume\", timelineDate: \"2021\" }\n    }]\n  };\n\n  render() {\n    const { classes, fields } = this.props;\n    return (\n      <div className={classes.root} style={{\n        backgroundRepeat: false,\n        backgroundImage: `url(\"${fields.images.bg.src}\")`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: fields.width,\n        height: fields.height,\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\"\n      }}>\n        <CssBaseline />\n        <Typography\n          component=\"h2\"\n          variant=\"h2\"\n          style={{\n            color: fields.colours.primary,\n            fontFamily: `${fields.fonts.titleFont}, Helvetica, sans-serif`\n          }}\n          className={classes.title}\n        >\n          {fields.texts.title}\n        </Typography>\n        {fields.sections.map((section, index) => {\n          return (\n            <div className={classes.section}>\n              <img src={section.images.timelineImage.src} className={classes.timelineImg} />\n              <div className={classes.sectionTextDiv}>\n                <Typography\n                  style={{ color: fields.colours.secondary }}\n                  component=\"h5\"\n                  variant=\"h5\"\n                >\n                  {section.texts.timelineDate}\n                </Typography>\n                <Typography\n                  style={{ color: fields.colours.secondary }}\n                  component=\"h5\"\n                  variant=\"h5\"\n                >\n                  {section.texts.timelineTitle}\n                </Typography>\n              </div>\n            </div>\n          );\n        })}\n      </div>);\n  }\n}\n\nexport default withStyles(styles)(TimelineTemplateMinimalist);\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"start\",\n        padding: \"1rem\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: 'auto'\n    }\n})\n\nclass AboutTemplateMinimalist extends Component {\n    static templateName = \"Minimalist\";\n\n    static info = {\n        fonts: {titleFont: {label: \"title font\"}, bodyFont: {label: \"body font\"}},\n        colours: {primary: {label: \"primary\"}, secondary: {label: \"secondary\"}, header: {label: \"header\"}},\n        images: {},\n        texts: {about: {label: \"Self Introduction\"}},\n        sections: {}\n    };\n\n    static preview = \"https://bit.ly/3fwsFKX\";\n\n    static script = (index) => \"\";\n\n    static defaultField = {\n        width: \"60%\", \n        height: \"80vh\", \n        fonts: {titleFont: \"title font\", bodyFont: \"body font\"},\n        colours: {primary: \"#ffffff\", secondary: \"#d5d5d5\", header: \"#e30000\"},\n        images: {},\n        texts: {about: \"Me\"},\n        sections: []\n    };\n\n\n\n    render() {\n        const {classes, fields} = this.props\n        return (\n            <div \n                className={classes.root}\n            >\n                <Card\n                    style={{ textAlign: \"center\" }}\n                >\n                        <CardContent>\n                        <Typography \n                            variant=\"h1\"\n                            component=\"h2\" \n                            style={{color: fields.colours.primary, backgroundColor: fields.colours.header, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif`}}\n                        >\n                            About Me\n                        </Typography>\n                        <Typography\n                            variant=\"h3\"\n                            component=\"h4\"\n                            style={{color: fields.colours.secondary, backgroundColor: \"white\", fontFamily: `${fields.fonts.bodyFont}, Arial, Helvetica, sans-serif`}}\n                        >\n                            {fields.texts.about}\n                        </Typography>\n                        </CardContent>\n\n                </Card>\n            </div>\n        )\n    }\n}\n\n\nexport default withStyles(styles)(AboutTemplateMinimalist);\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport { FaGithub } from 'react-icons/fa';\nimport * as icons from '../../styles/icons';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    padding: '15vh'\n  },\n  std: { display: 'block' },\n  title: {\n    margin: '5%'\n  },\n  socialButton: {\n    height: '3em',\n    width: '3em',\n    borderRadius: '50%',\n    opacity: '60%',\n    marginInline: '0.5vh',\n    '&:hover': {\n      opacity: '80%',\n      width: '3.5em',\n      height: '3.5em',\n      transition: '0.5s'\n    }\n  },\n  socialIcon: {\n    height: '5vh',\n    width: '5vh',\n    borderRadius: '50%'\n  }\n});\n\nclass IntroTemplateRedline extends Component {\n  constructor() {\n    super();\n  }\n\n  static templateName = \"Redline\";\n\n  static script = (index) => \"\";\n\n  // static preview = \"https://bit.ly/3fwsFKX\";\n\n  static info = {\n    fonts: { titleFont: { label: 'title font' } },\n    colours: { primary: { label: 'primary' }, secondary: { label: 'secondary' } },\n    images: { bg: { label: 'Entry background', format: ['image'] } },\n    texts: { name: { label: 'Your name' }, status: { label: 'Your current status' } },\n    sections: {\n      enabled: true,\n      defaultEntry: {\n        images: { socialIcon: { src: 'fa/FaGithub', format: 'icon' } },\n        texts: { socialLink: 'https://github.com' }\n      },\n      entryFormat: {\n        images: { socialIcon: { label: 'Icon', format: ['image', 'icon'] } },\n        texts: { socialLink: { label: 'Link' } }\n      }\n    }\n  };\n\n  static defaultField = {\n    width: '100%',\n    height: 'fit-content',\n    fonts: { titleFont: 'Roboto' },\n    colours: { primary: '#dd0000', secondary: '#FFFFFF' },\n    images: { bg: { src: 'https://bit.ly/3gSDGpJ', format: 'image' } },\n    texts: { name: 'Lorem Ipsum', status: 'Developer' },\n    sections: [{\n      images: { socialIcon: { src: 'fa/FaGithub', format: 'icon' } },\n      texts: { socialLink: 'https://github.com' }\n    }]\n  };\n\n  render() {\n    const { classes, fields } = this.props;\n    return (\n      <div\n        className={classes.root}\n        style={\n          {\n            backgroundRepeat: false,\n            backgroundImage: `url(\"${fields.images.bg.src}\")`,\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundAttachment: 'fixed',\n            width: fields.width,\n            height: fields.height,\n            display: \"flex\",\n            flexDirection: \"column\",\n            textAlign: \"center\"\n          }\n        }\n      >\n        <CssBaseline />\n        <div\n          style={{\n            padding: '5vh',\n            paddingBlock: '10vh',\n            backgroundColor: '#FFFFFF10',\n            width: '100%',\n            height: '100%',\n            border: `solid 1px ${fields.colours.primary}`\n          }}>\n          <Typography component=\"h1\" variant=\"h1\" style={{ color: fields.colours.primary, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif` }}>\n            {fields.texts.name}\n          </Typography>\n          <Typography component=\"h2\" variant=\"h2\" style={{ color: fields.colours.secondary, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif` }}>\n            {fields.texts.status}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginInline: 'auto',\n              width: 'max-content',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: '8vh',\n              marginTop: '5vh'\n            }}>\n            {fields.sections.map((section, index) => {\n              let SocialIcon;\n              if (section.images.socialIcon.format === 'icon') {\n                const category = section.images.socialIcon.src.split('/');\n                SocialIcon = icons[category[0]].icons[category[1]];\n              } else {\n                SocialIcon = (props) => <img src={section.images.socialIcon.src} />;\n              }\n              return (\n                <div className={classes.section}>\n                  <IconButton\n                    onClick={() => window.open(section.texts.socialLink)}\n                    className={classes.socialButton}\n                  >\n                    {<SocialIcon size='100%' color='red' />}\n                  </IconButton>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>);\n  }\n}\n\nexport default withStyles(styles)(IntroTemplateRedline);\n","import React, { Component } from 'react';\nimport IntroTemplateMinimalist from './introduction/IntroTemplateMinimalist';\nimport TimelineTemplateMinimalist from './timeline/TimelineTemplateMinimalist';\nimport AboutTemplateMinimalist from './about/AboutTemplateMinimalist';\nimport IntroTemplateRedline from './introduction/IntroTemplateRedline';\n//  TODO: rename to templates?\n/**\n * @file EntryEditor component to provide a user interface for users to style their entries\n * \n * @author Chuan Hao\n * \n * @see templates\n */\nexport const templates = {\n  introduction: [\n    {\n      name: IntroTemplateMinimalist.templateName, \n      preview: IntroTemplateMinimalist.preview,\n      component: (fields, id) => (<IntroTemplateMinimalist fields={fields} id={id}/>),\n      script: IntroTemplateMinimalist.script,\n      info: IntroTemplateMinimalist.info,\n      defaultField: IntroTemplateMinimalist.defaultField\n    },\n    {\n      name: IntroTemplateRedline.templateName, \n      preview: IntroTemplateRedline.preview,\n      component: (fields, id) => (<IntroTemplateRedline fields={fields} id={id}/>),\n      script: IntroTemplateRedline.script,\n      info: IntroTemplateRedline.info,\n      defaultField: IntroTemplateRedline.defaultField\n    },\n  ],\n  about: [\n    {\n      name: AboutTemplateMinimalist.templateName,\n      preview: AboutTemplateMinimalist.preview,\n      component: (fields, id) => (<AboutTemplateMinimalist fields={fields} id={id}/>),\n      script: AboutTemplateMinimalist.script,\n      info: AboutTemplateMinimalist.info,\n      defaultField: AboutTemplateMinimalist.defaultField\n    }\n  ],\n  timeline: [\n    {\n      name: TimelineTemplateMinimalist.templateName,\n      preview: TimelineTemplateMinimalist.preview,\n      component: (fields, id) => (<TimelineTemplateMinimalist fields={fields} id={id}/>),\n      script: TimelineTemplateMinimalist.script,\n      info: TimelineTemplateMinimalist.info,\n      defaultField: TimelineTemplateMinimalist.defaultField\n    }\n  ]\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Modal, Tab, Tabs, ButtonBase, Card, CardMedia, CardContent, Fab } from '@material-ui/core';\nimport { templates } from '../templates/Templates';\nimport { FaTimes, FaPlus } from 'react-icons/fa';\n\n\n/**\n * @file User Interface to allow users to pick a template for their portfolios\n * \n * @author Chuan Hao\n * \n * @see TemplateSelector\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * @param theme \n * @returns classes passed as props to the component, with values provided by parameter theme\n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2%',\n    textAlign: 'center',\n    backgroundColor: theme.palette.background.default,\n    opacity: '85%',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  },\n  modal: {\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '5vh',\n    height: '100%'\n  },\n  buttonBase: {\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column'\n  },\n  card: {\n    width: 345,\n    minHeight: 150,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    maxHeight: 200,\n    overflow: 'hidden'\n  },\n  fab: {\n    marginTop: 'auto',\n    marginLeft: 'auto'\n  },\n  cardDiv: {\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 345px)',\n    gridGap: '55px',\n    justifyContent: 'center',\n    overflowY: 'auto'\n  },\n  controlFAB: {\n    position: 'static',\n    marginRight: '0.5vw',\n    marginBottom: '0.5vw'\n  }\n})\n\n/**\n * User interface to allow users to select templates for each entry.\n * \n * @component\n */\nclass TemplateSelector extends Component {\n  /**\n   * Populates state with fields passed in as attribute fields.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelector: false,\n      type: \"introduction\",\n      style: 0\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCloseSelector = this.handleCloseSelector.bind(this);\n  }\n\n  /**\n   * Attempts to fetch entry details where possible so settings are saved.\n   * \n   * @property {Function} componentDidMount\n   * @return void\n   * @memberof TemplateSelector\n   */\n  componentDidMount() {\n    // is this necessary if template is a widget\n    if (!this.props.loggedIn) {\n      const localStorageItem = JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      this.props.repopulate_state(localStorageItem)\n    }\n  }\n\n  /**\n   * Event handler to update states to reflect the selected category.\n   * \n   * @param {*} event \n   * @param {string} newValue The category of entries selected.\n   */\n  handleChange(event, newValue) {\n    this.setState({\n      type: newValue\n    });\n  }\n\n  /**\n   * Event handler to create the selected entry.\n   * \n   * @param {number} id The index of the selected style.\n   */\n  handleSelect(id) {\n    this.handleCloseSelector({\n      type: this.state.type,\n      style: id\n    })\n  }\n\n  handleCloseSelector(values) {\n    if (values !== undefined) {\n      this.props.onClose(values)\n    }\n    this.setState({\n      showSelector: false\n    })\n  }\n\n  // MODAL TAKES IN A SINGLE JSX ELEMENT\n  render() {\n    const { classes } = this.props;\n    // TODO: change name/id to field-name-id to avoid collision i.e. colours-primary-0\n    return (\n      <div>\n        <Fab\n          className={classes.controlFAB}\n          onClick={() => this.setState({ showSelector: true })}>\n          <FaPlus />\n        </Fab>\n        <Modal className={classes.modal}\n          // open always set to true, open/close logic handled by portfolio\n          open={this.state.showSelector}\n          // TODO: add onClose save logic\n          onClose={() => this.handleCloseSelector()}\n          aria-labelledby=\"Template Selector\"\n          aria-describedby=\"Select a template.\"\n        >\n          <div className={classes.root}>\n            <Tabs\n              value={this.state.type}\n              onChange={this.handleChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              {Object.keys(templates).map((type) => {\n                return (<Tab label={type} value={type} />)\n              })}\n            </Tabs>\n            <div className={classes.cardDiv}>\n              {\n                templates[this.state.type].map((entry, index) => {\n                  return (<Card className={classes.card}>\n                    <ButtonBase\n                      focusRipple\n                      key={index}\n                      className={classes.buttonBase}\n                      // focusVisibleClassName={}\n                      onClick={() => this.handleSelect(index)}\n                      name={index}\n                    >\n                      <CardMedia\n                        component=\"img\"\n                        alt={entry.name}\n                        image={entry.preview}\n                        title={entry.name}\n                        className={classes.cardMedia}\n                      />\n                      <CardContent>\n                        <Typography>{entry.name}</Typography>\n                      </CardContent>\n                    </ButtonBase>\n                  </Card>)\n                })\n              }\n            </div>\n            <Fab variant=\"extended\" onClick={() => this.handleCloseSelector()} className={classes.fab}>\n              <FaTimes />\n                CANCEL\n              </Fab>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof TemplateSelector\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof TemplateSelector\n */\nconst mapDispatchToProps = {\n  repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TemplateSelector))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { repopulate_state } from '../actions/LoginAction';\r\nimport axios from 'axios';\r\n\r\n//MUI component imports\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { FaUpload, FaTimes, FaRegCopy } from 'react-icons/fa';\r\nimport { handleErrors } from '../handlers/errorHandler';\r\n\r\n\r\n\r\n/**\r\n * @file Publish component representing user interface for publishing portfolios to ghpages.\r\n * \r\n * @author Chen En\r\n * \r\n * @see Publish\r\n */\r\n\r\n/**\r\n * Style generator to dynamically adjust styles based on theme provided\r\n * \r\n * @memberof Publish\r\n * @param {Object} theme \r\n */\r\nconst styles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'start',\r\n        alignItems: 'center'\r\n    },\r\n    actionFAB: {\r\n        position: 'static',\r\n        marginRight: '0.5vw',\r\n        marginBottom: '0.5vw',\r\n        textAlign: 'center'\r\n    },\r\n    textPrimaryColor: {\r\n        color: theme.palette.text.primary,\r\n        '&.Mui-focused': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    snackbar: {\r\n        backgroundColor: '#303030', \r\n        color: 'white'\r\n    },\r\n})\r\n\r\n/**\r\n * The publish component renders functionalities to allow user to publish their\r\n * portfolio to ghpages.\r\n * \r\n * @component\r\n */\r\nclass Publish extends Component {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            finalizeDialogState: false,\r\n            overrideDialogState: false,\r\n            repositoryName: \"\",\r\n            repositoryContent: [],\r\n            anchorEl: null,\r\n            publishLoading: false,\r\n            statusState: false,\r\n            publishError: false,\r\n            publishErrorMessage: \"\",\r\n            pageUrl: \"\",\r\n            pageCheckIntervalTask: null\r\n        }\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleFinalizeDialogOpen = this.handleFinalizeDialogOpen.bind(this);\r\n        this.handleFinalizeDialogClose = this.handleFinalizeDialogClose.bind(this);\r\n        this.handleOverrideDialogOpen = this.handleOverrideDialogOpen.bind(this);\r\n        this.handleOverrideDialogClose = this.handleOverrideDialogClose.bind(this);\r\n        this.handleFinalizeEdits = this.handleFinalizeEdits.bind(this);\r\n        this.handleOverrideAllowed = this.handleOverrideAllowed.bind(this);\r\n        this.handlePushToGithub = this.handlePushToGithub.bind(this);\r\n        this.handleCheckPageStatus = this.handleCheckPageStatus.bind(this);\r\n        this.handleStatusClose = this.handleStatusClose.bind(this);\r\n        this.handleCopyClipboard = this.handleCopyClipboard.bind(this);\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles onChange events. Changes a state variable under the name of the event target to value provided by user.\r\n     *\r\n     * @param {Object} event\r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleOnChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the opening of finalize dialog by setting state boolean finalizeDialogState to true. Also creates\r\n     * the html, css and js files and pushes them into state array repositoryContent.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleFinalizeDialogOpen() {\r\n\r\n        const pushables = this.props.createPushables();\r\n        console.log(pushables)\r\n\r\n        this.setState({\r\n            repositoryContent: pushables\r\n        })\r\n\r\n        this.setState({\r\n            anchorEl: null,\r\n            finalizeDialogState: true\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles the closing of finalize dialog by setting state boolean finalizeDialogState to false.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleFinalizeDialogClose() {\r\n        this.setState({\r\n            finalizeDialogState: false\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles the opening of override dialog by setting state boolean overrideDialogState to true.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleOverrideDialogOpen() {\r\n        this.setState({\r\n            overrideDialogState: true\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles the closing of override dialog by setting state boolean overrideDialogState to false.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleOverrideDialogClose() {\r\n        this.setState({\r\n            overrideDialogState: false\r\n        })\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * This handles the event whereby override button in override dialog is clicked. It calls and\r\n     * wait for handlePushToGithub() to complete before closing the override dialog.\r\n     *\r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    async handleOverrideAllowed() {\r\n        console.log(`Override permission given to push to ${this.state.repositoryName} and toggle pages for it`)\r\n        //no need to await this\r\n        this.handlePushToGithub();\r\n        this.setState({\r\n            overrideDialogState: false\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * First starts a interval task to send a request to backend to retrieve github page deployment status at an interval of\r\n     * 15s. Sets the interval task to state pageCheckIntervalTask.\r\n     * \r\n     * Then sends a PUT request to backend API which will take over and handle the pushing to specified Github\r\n     * repository and its deployment to ghpages if not already done so. \r\n     * \r\n     * The PUT request requires route (The path relative to Github repository root to push to), repo (The\r\n     * name of Github repository to push to) and content (An array of objects representing files to be pushed).\r\n     * \r\n     * \r\n     * Note: For files within sub directories, the path can be prepended to the filename like so \"folder/index.html\"\r\n     * \r\n     * Note: This clears out the repositoryContent after the PUT request is completed.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    async handlePushToGithub() {\r\n        console.log(`files are being pushed to ${this.state.repositoryName}`)\r\n        //reset loading, error and error message\r\n        this.setState({\r\n            publishLoading: true,\r\n            publishError: false,\r\n            publishErrorMessage: \"\",\r\n            statusState: false,\r\n            pageCheckIntervalTask: setInterval(this.handleCheckPageStatus, 15000)\r\n        });\r\n\r\n        await axios({\r\n            method: \"PUT\",\r\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/publishGithub\",\r\n            withCredentials: true,\r\n            data: {\r\n                route: \"\",\r\n                content: this.state.repositoryContent,\r\n                repo: this.state.repositoryName\r\n            }\r\n        }).then(res => {\r\n            console.log(res.data.message);\r\n        }).catch(err => {\r\n            handleErrors(err, this.props.history);\r\n            \r\n            this.setState({\r\n                publishLoading: false,\r\n                publishError: true,\r\n                publishErrorMessage: \"Failed to push files to Github\",\r\n                statusState: true\r\n            })\r\n            if (this.state.pageCheckIntervalTask) {\r\n                window.clearInterval(this.state.pageCheckIntervalTask);\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            repositoryContent: []\r\n        })\r\n    }\r\n\r\n    /**\r\n     * This handles the event whereby the finalize button in finalize dialog is clicked. A GET request is sent to\r\n     * backend API to check for existing Github repository of specified name under the user's Github account and sends a POST\r\n     * request to create a new Github repository if there are none.\r\n     * \r\n     * If a new repository is created, this then calls and waits for handlePushToGithub() to complete before closing\r\n     * the finalize dialog.\r\n     * \r\n     * If a Github repository exists, this then opens an override dialog to warn and ask user for permission to overwrite the\r\n     * exisiting Github repository's content.\r\n     *\r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    async handleFinalizeEdits() {\r\n        console.log(\"chosen repository name is \" + this.state.repositoryName)\r\n        await axios({\r\n            method: \"GET\",\r\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/checkExistingRepos\",\r\n            withCredentials: true,\r\n            params: {\r\n                repo: this.state.repositoryName\r\n            }\r\n        }).then(async res => {\r\n            console.log(res.data.message)\r\n            //waits for repository to be created\r\n            await axios({\r\n                method: \"POST\",\r\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/createRepo\",\r\n                withCredentials: true,\r\n                data: {\r\n                    repo: this.state.repositoryName\r\n                }\r\n            }).then(response => {\r\n                console.log(response.data.message)\r\n            }).catch(err => {\r\n                handleErrors(err, this.props.history);\r\n            })\r\n\r\n            //no need to wait for push to go through\r\n            this.handlePushToGithub();\r\n        }).catch(err => {\r\n            handleErrors(err, this.props.history);\r\n\r\n            this.setState({\r\n                overrideDialogState: true\r\n            })\r\n        })\r\n\r\n        //Intentional: closes finalizeDialog but doesn't remove repository name.\r\n        this.setState({\r\n            finalizeDialogState: false\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Sends a request to backend to retrieve the status of the deployed page. Sets state publishLoading to true to show loading indicator.\r\n     * \r\n     * If status is \"building\", the page is being built.\r\n     * \r\n     * If status is \"built\", the page is built. Set state publishLoading to false to remove loading indicator. \r\n     * State pageCheckIntervalTask will be cleared.\r\n     * Then set state pageUrl to the url of newly deployed github page and set state statusState to true to show\r\n     * a snackbar allowing user to copy the newly deployed github page url to clipboard.\r\n     * \r\n     * If status is \"errored\", the page encountered errors in the process of building and deployment has failed.\r\n     * Set state publishLoading to false to remove loading indicator. Then set state publishError to true and state publishErrorMessage\r\n     * to appropriate error message to showcase errors.\r\n     * \r\n     * @returns void\r\n     * @memberof Publish\r\n     */\r\n    async handleCheckPageStatus() {\r\n        if (this.state.repositoryName !== \"\") {\r\n            await axios({\r\n                method: \"GET\",\r\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/pageStatus\",\r\n                withCredentials: true,\r\n                params: {\r\n                    repo: this.state.repositoryName\r\n                }\r\n            }).then(res => {\r\n                console.log(res.data.status);\r\n                if (res.data.status === \"built\" || res.data.status === \"errored\") {\r\n                    if (this.state.pageCheckIntervalTask) {\r\n                        window.clearInterval(this.state.pageCheckIntervalTask);\r\n                    }\r\n                    if (res.data.status === \"built\") {\r\n                        this.setState({\r\n                            publishLoading: false,\r\n                            pageUrl: res.data.url,\r\n                            statusState: true\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            publishLoading: false,\r\n                            publishError: true,\r\n                            publishErrorMessage: \"Github page deployment failed\",\r\n                            statusState: true\r\n                        })\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n                handleErrors(err, this.props.history);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles hiding of snackbar.\r\n     * \r\n     * @param {Object} event \r\n     * @param {string} reason detail of event\r\n     * @returns void\r\n     * @memberof Publish\r\n     */\r\n    handleStatusClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({\r\n            publishLoading: false,\r\n            publishError: false,\r\n            publishErrorMessage: \"\",\r\n            statusState: false\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles copying state pageUrl to clipboard\r\n     * \r\n     * @returns void\r\n     * @memberof Publish\r\n     */\r\n    handleCopyClipboard() {\r\n        navigator.clipboard.writeText(this.state.pageUrl)\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Fab\r\n                    size='large'\r\n                    aria-label='publish panel'\r\n                    aria-controls='simple-menu'\r\n                    aria-haspopup='true'\r\n                    className={classes.actionFAB}\r\n                    onClick={this.handleFinalizeDialogOpen}\r\n                >\r\n                    {this.state.publishLoading ? <CircularProgress color=\"black\" size=\"2rem\"/> : <FaUpload />}\r\n                </Fab>\r\n\r\n                <Snackbar\r\n                    key=\"Github Page Status\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    open={this.state.statusState}\r\n                    onClose={this.handleStatusClose}\r\n                    TransitionComponent={props => <Slide {...props} direction=\"up\" />}\r\n                >\r\n                    <SnackbarContent\r\n                        className={classes.snackbar}\r\n                        message={this.state.publishError ? this.state.publishErrorMessage : this.state.pageUrl}\r\n                        action={\r\n                            <React.Fragment>\r\n                                {!this.state.publishError\r\n                                    ?\r\n                                        <Button onClick={this.handleCopyClipboard}>\r\n                                            <FaRegCopy color=\"white\"/>\r\n                                        </Button>\r\n                                    :\r\n                                        <div/>\r\n                                }\r\n                                <Button\r\n                                    onClick={this.handleStatusClose}\r\n                                >\r\n                                    <FaTimes color=\"white\"/>\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n\r\n                    \r\n                </Snackbar>\r\n\r\n                <Dialog\r\n                    open={this.state.finalizeDialogState}\r\n                    onClose={this.handleFinalizeDialogClose}\r\n                    aria-labelledby=\"repo name input\"\r\n                >\r\n                    <DialogTitle id=\"repo name input\">\r\n                        Repository Name\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText >\r\n                            Choose a Github repository name to save portfolio edits\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            name=\"repositoryName\"\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Repository Name\"\r\n                            type=\"string\"\r\n                            defaultValue={this.state.repositoryName}\r\n                            fullWidth\r\n                            onChange={this.handleOnChange}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleFinalizeDialogClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleFinalizeEdits}>\r\n                            Finalize\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.overrideDialogState}\r\n                    onClose={this.handleOverrideDialogClose}\r\n                    aria-labelledby=\"override permission input\"\r\n                >\r\n                    <DialogTitle id=\"override permission input\">\r\n                        Warning!\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Repository already exists. This will override data in your existing repository and could lead to possible data loss! Do you still wish to continue?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleOverrideDialogClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleOverrideAllowed}>\r\n                            Allow Override\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Function that maps variables from Redux Store to Home component's props.\r\n *\r\n * @param {Object} state - Redux Store\r\n * @memberof EntryEditor\r\n */\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.login.loggedIn,\r\n\r\n})\r\n\r\n/** \r\n * Provides action creators to Home component's props.\r\n * \r\n * @type {Object.<Function>} \r\n * @memberof EntryEditor\r\n */\r\nconst mapDispatchToProps = {\r\n    repopulate_state\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Publish))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport { Typography, Modal, Icon, Tab, Tabs, ButtonBase, Card, CardMedia, CardContent, Fab, TextField } from '@material-ui/core';\nimport { TreeItem } from '@material-ui/lab';\nimport { templates } from '../templates/Templates';\nimport { FaPlus, FaSave, FaTimes, FaLink } from 'react-icons/fa';\n\n\n/**\n * @file User Interface to allow users to switch between views.\n * \n * @author Chuan Hao\n * \n * @see DirectoryManager\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * @param theme \n * @returns classes passed as props to the component, with values provided by parameter theme\n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2%',\n    textAlign: 'center',\n    backgroundColor: theme.palette.background.default,\n    opacity: '85%',\n    height: '100%',\n  },\n  modal: {\n    overflow: 'scroll',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '5%',\n    height: '100%'\n  },\n  controlFAB: {\n    position: 'static',\n    marginRight: '0.5vw',\n    marginBottom: '0.5vw'\n  },\n  treeItem: {\n    '&$treeItemSelected > $treeItemContent': {\n      backgroundColor: theme.palette.contrastPrimary.main\n    }\n  },\n  treeItemSelected: {\n  },\n  treeItemExpanded: {\n    // borderLeft: '1px dashed #FFF',\n  },\n  treeItemGroup: {\n    marginLeft: 7,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${theme.palette.text.primary}`\n  },\n  treeItemContent: {},\n  treeView: {\n    textAlign: 'left'\n  },\n  textField: {},\n  hide: {\n    display: 'none'\n  }\n})\n\nconst RENAME = 0;\nconst CREATE = 1;\n\n/**\n * User interface to allow users to select templates for each entry.\n * \n * @component\n */\nclass DirectoryManager extends Component {\n  /**\n   * Populates state with fields passed in as attribute fields.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: this.props.dirTree,\n      currentPath: [],\n      showInput: false,\n      dirTree: this.props.dirTree,\n      showDirectory: false,\n      dirName: \"\",\n      inputMode: RENAME,\n      expanded: []\n    }\n    this.handleSelectPage = this.handleSelectPage.bind(this);\n    this.renderTree = this.renderTree.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDeletePage = this.handleDeletePage.bind(this);\n    this.handleRenameDirectory = this.handleRenameDirectory.bind(this);\n  }\n\n  /**\n   * Attempts to fetch entry details where possible so settings are saved.\n   * \n   * @property {Function} componentDidMount\n   * @return void\n   * @memberof DirectoryManager\n   */\n  componentDidMount() {\n    // is this necessary if template is a widget\n    if (!this.props.loggedIn) {\n      const localStorageItem = JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      this.props.repopulate_state(localStorageItem)\n    }\n  }\n\n  /**\n   * Event handler to update states to reflect the selected page.\n   * \n   * @param {*} event \n   * @param {object} node The id of the page selected. \n   * MUI api indicates node is supposed to be a string but object seems to work.\n   */\n  handleSelectPage(event, node, path) {\n    // preventDefault prevents onNodeToggle from being called.\n    event.preventDefault();\n    this.setState({\n      currentPage: node,\n      currentPath: path\n    });\n  }\n\n  /**\n   * A function to recursively render the directory tree\n   * @param {Map} dirTree the directory tree map to be used\n   * @param {*} folder the name of the current folder\n   * @returns JSX component containing the TreeItem to be rendered\n   */\n  renderTree(dirTree, folder, classes, directoryArray) {\n\n    return (\n      <TreeItem\n        value={folder}\n        nodeId={folder}\n        label={folder}\n        classes={{\n          root: classes.treeItem,\n          selected: classes.treeItemSelected,\n          // expanded: classes.treeItemExpanded,\n          content: classes.treeItemContent,\n          group: classes.treeItemGroup\n        }}\n        onLabelClick={(event) => this.handleSelectPage(event, dirTree, directoryArray)}\n      >\n        {Object.entries(dirTree.directories).map(([key, item]) => {\n          return this.renderTree(item, key, classes, [...directoryArray, key]);\n        })}\n      </TreeItem>\n    );\n  }\n\n  // TODO: can combine with other directory tree traversals to imporve code reuse\n  /**\n   * Auxillary function to get a directory from a path array\n   * \n   * @param {[string]} pageArray the array of directories to be traversed\n   * @param {{map}} dirTree the current directory\n   * @param {number} index the index of the current durectory in pageArray\n   * @returns {object} The parent directory if successful, undefined otherwise.\n   */\n  getPage(pageArray, dirTree, index) {\n    // TODO: test if === causes any bugs -- >= might cause unexpected behaviour down the line\n    if (index >= pageArray.length) {\n      // prevent overwriting\n      if (dirTree === undefined) return undefined;\n      return dirTree;\n    }\n    else {\n      return this.getPage(pageArray, dirTree.directories[pageArray[index]], index + 1);\n    }\n  }\n\n  /**\n   * Event handler to create a new page\n   * \n   * @param {string} newName the name of the new page\n   */\n  handleCreatePage(newName) {\n    const newDirTree = JSON.parse(JSON.stringify(this.state.dirTree));\n    const parent = this.getPage(this.state.currentPath, newDirTree, 0);\n    console.log(this.state.currentPath)\n    console.log(parent);\n    console.log(newDirTree);\n    const newPage = {\n      directory: newName,\n      entries: [],\n      directories: {},\n      id: undefined\n    };\n    parent.directories[newName] = newPage;\n\n    this.props.onUpdate(newDirTree);\n    console.log(this.state)\n    this.setState({\n      dirTree: newDirTree,\n      currentPage: parent,\n      showInput: false\n    })\n  }\n\n  /**\n   * Event handler to update portfolio preview on directory change\n   * @param {boolean} save whether the user wishes to change the view to the selected directory\n   */\n  handleCloseDirectory(save) {\n    this.props.onClose(this.state.currentPage, this.state.currentPath);\n    this.setState({\n      showDirectory: false\n    })\n  }\n\n  /**\n   * Generic event handler for updating state via componenent name\n   * @param {*} event \n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  /**\n   * Event handler for renaming a directory\n   */\n  handleRenameDirectory() {\n    const pageArray = [...this.state.currentPath];\n    const oldName = pageArray.pop();\n    const newDirTree = JSON.parse(JSON.stringify(this.state.dirTree));\n    const parent = this.getPage(pageArray, newDirTree, 0);\n\n    parent.directories[this.state.dirName] = parent.directories[oldName];\n    delete parent.directories[oldName]\n    // const from = [];\n    // const to = [];\n    // this.renameDirectory(parent.directories[this.state.dirName], this.state.dirName, from, to);\n\n    this.props.onUpdate(newDirTree);\n    this.setState({\n      dirTree: newDirTree,\n      currentPath: [...pageArray, this.state.dirName],\n      currentPage: parent.directories[this.state.dirName],\n      dirName: '',\n      showInput: false\n    })\n  }\n\n  handleDeletePage() {\n    const newDirTree = JSON.parse(JSON.stringify(this.state.dirTree));\n    const directoryArray = [...this.state.currentPath];\n\n    if (directoryArray === []) {\n      alert('Root directory cannot be deleted.')\n    }\n\n    const pageName = directoryArray.pop();\n    const parent = this.getPage(directoryArray, newDirTree, 0);\n\n    // TODO: send flattened delete array to check if mongo needs to delete anything\n    // const child = parent.directories[pageName];\n    // const flatten = (page) => {\n    //   Object.entries(page.directories).map(([key, item]) => flatten(item));\n    // }\n    // flatten(child);\n\n    // TODO: offer option to merge child subdirectories to parent\n    const copy = { ...parent.directories };\n    // TODO: change mutations in this file to use fp via filter and Object.entries\n    delete copy[pageName];\n    parent.directories = copy;\n    this.props.onUpdate(newDirTree);\n    console.log(directoryArray)\n    this.setState({\n      dirTree: newDirTree,\n      currentPage: parent,\n      currentPath: directoryArray\n    })\n  }\n\n  // TODO: add props dirTree={name:\"\", directory:\"\", id:number, directories:[]}\n  // root page should not be renamed, since directory.root is hardcoded.\n  render() {\n    const { classes } = this.props;\n    // should only have 1 root element for object.keys[0] to work\n    return (\n      <div>\n        <Fab\n          className={classes.controlFAB}\n          onClick={() => this.setState({\n            showDirectory: true,\n            currentPage: this.props.dirTree,\n            currentPath: [],\n            ...this.props.getState()\n          })}>\n          <FaLink />\n        </Fab>\n        <Modal className={classes.modal}\n          open={this.state.showDirectory}\n          onClose={() => this.handleCloseDirectory(true)}\n          aria-labelledby=\"Directory Manager\"\n          aria-describedby=\"Select a page.\"\n        >\n          <div className={classes.root}>\n            <Fab variant=\"extended\" onClick={() => { this.handleCloseDirectory(false) }}>\n              <FaTimes />\n            </Fab>\n            <TreeView\n              defaultCollapseIcon={<FaTimes />}\n              defaultExpandIcon={<FaSave />}\n              expanded={this.state.expanded}\n              // onNodeSelect={this.handleSelectPage}\n              onNodeToggle={(event, nodeIds) => this.setState({ expanded: nodeIds })}\n              className={classes.treeView}\n            >\n              {this.renderTree(this.state.dirTree, \"root\", classes, [])}\n            </TreeView>\n            <TextField\n              id=\"dirName\"\n              label=\"directory name\"\n              name=\"dirName\"\n              value={this.state.dirName}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={this.handleChange}\n              className={this.state.showInput ? classes.textField : classes.hide}\n            />\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.setState({ showInput: true, inputMode: CREATE })}\n              className={!this.state.showInput || this.state.inputMode !== CREATE ? classes.controlFAB : classes.hide}>\n              <FaPlus />\n              New page\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.setState({ showInput: true, inputMode: RENAME })}\n              className={!this.state.showInput || this.state.inputMode !== RENAME ? classes.controlFAB : classes.hide}>\n              <FaPlus />\n              Rename page\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.handleCreatePage(this.state.dirName)}\n              className={this.state.showInput && this.state.inputMode === CREATE ? classes.controlFAB : classes.hide}>\n              Create\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.handleRenameDirectory(this.state.dirName)}\n              className={this.state.showInput && this.state.inputMode === RENAME ? classes.controlFAB : classes.hide}>\n              Rename\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={this.handleDeletePage}>\n              Delete page\n            </Fab>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof TemplateSelector\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof TemplateSelector\n */\nconst mapDispatchToProps = {\n  repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DirectoryManager))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { saveCurrentWork, saveCurrentWorkToLocal, toggleUnsavedWork } from '../actions/PortfolioAction.js';\nimport { ThemeProvider, withStyles } from '@material-ui/core/styles'\nimport { Fab } from '@material-ui/core';\nimport { FaSave, FaTrash } from \"react-icons/fa\";\nimport { Base64 } from 'js-base64';\nimport ReactDOMServer from 'react-dom/server';\nimport { ServerStyleSheets } from '@material-ui/core/styles'\nimport EntryEditor from './EntryEditor';\nimport { templates } from '../templates/Templates';\nimport TemplateSelector from './TemplateSelector';\nimport Publish from './Publish';\nimport axios from 'axios';\nimport DirectoryManager from './DirectoryManager';\nimport { Prompt, withRouter } from 'react-router-dom';\nimport { theme } from '../styles/styles';\nimport html2canvas from 'html2canvas';\nimport FormData from 'form-data';\nimport { handleErrors } from '../handlers/errorHandler';\n\nimport { create } from 'jss';\nimport { jssPreset } from '@material-ui/styles';\nconst jss = create().setup({ ...jssPreset(), Renderer: null });\n\n/**\n * @file Portfolio component representing a user created portfolio\n * \n * @author Chuan Hao\n * \n * @see Portfolio\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Portfolio\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  entryDiv: {\n    position: 'relative'\n  },\n  delFAB: {\n    position: 'absolute',\n    marginTop: '5vw',\n    marginLeft: '2vw'\n  },\n  controlFAB: {\n    position: 'static',\n    marginRight: '0.5vw',\n    marginBottom: '0.5vw'\n  },\n  staticDiv: {\n    position: 'fixed',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    bottom: \"5%\",\n    right: \"5%\",\n    top: \"auto\",\n    left: \"auto\"\n  },\n  entryEditorDiv: {\n    display: \"flex\", \n    flexDirection: \"row\"\n  }\n})\n\n/**\n * The portfolio component used for rendering previews and compiling for publishing.\n * \n * \n * @component\n */\nclass Portfolio extends Component {\n  /**\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: true,\n      portfolio_id: undefined,\n      name: \"\",\n      pages: {\n        directory: 'root',\n        entries: [],\n        directories: {},\n        id: 'root_mongo_id'\n      },\n      currentPage: undefined,\n      currentPath: [],\n      // dirTree: {\n      //   directory: 'root',\n      //   id: \"root_mongo_id\",\n      //   pages:\n      //     {}\n      // },\n      isTimerExist: false\n    }\n    this.state.currentPage = this.state.pages\n    this.handleEditorClose = this.handleEditorClose.bind(this);\n    this.handleCreateFile = this.handleCreateFile.bind(this);\n    this.handleProduction = this.handleProduction.bind(this);\n    this.handleSelector = this.handleSelector.bind(this);\n    this.handleUpdatePages = this.handleUpdatePages.bind(this);\n    this.handleDirectory = this.handleDirectory.bind(this);\n    this.handleSavePortfolio = this.handleSavePortfolio.bind(this);\n    this.handleUploadPreview = this.handleUploadPreview.bind(this);\n  }\n\n  /**\n   * Attempts to fetch user details and logged in status from localStorage after component is rendered.\n   * \n   * @return void\n   * @memberof Portfolio\n   */\n  async componentDidMount() {\n    if (!this.props.loggedIn) {\n      const userLocalStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE));\n      if (userLocalStorageItem !== null) {\n        const portfolioLocalStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_AUTOSAVE_LOCALSTORAGE));\n        await this.props.repopulate_state(userLocalStorageItem);\n        await this.props.saveCurrentWork(portfolioLocalStorageItem);\n      }\n\n    }\n\n    //The rationale behind using this.state.name as the check is that name would be set before the user enters\n    if (this.props.loggedIn) {\n      if (this.props.currentPortfolio !== null) {\n        //Need to set the relevant _id, name, pages if portfolio exists.\n        //Redux state currentPortfolio is set such that if its not null, it will have name.\n        this.setState({\n          name: this.props.currentPortfolio.name\n        })\n\n        if (this.props.currentPortfolio._id !== undefined && this.props.currentPortfolio.pages !== undefined) {\n          this.setState({\n            portfolio_id: this.props.currentPortfolio._id,\n            pages: this.props.currentPortfolio.pages,\n            currentPage: this.props.currentPortfolio.pages\n          })\n        }\n      }\n    }\n  }\n\n  /**\n   * componentDidUpdate checks when isUnsaved is changed and triggers a timer to autosave so that we will not save\n   * while the user is actively editing his Portfolio.\n   * \n   * First sets isTimerExist in state to true\n   * \n   * After timer is up, saves current portfolio to localStorage and redux state. \n   * \n   * The timer is now set to 30s after any edit is done.\n   * \n   * @return void\n   * @memberof Portfolio\n   */\n  componentDidUpdate() {\n    if (this.props.isUnsaved && !this.state.isTimerExist) {\n      setTimeout(async () => {\n        console.log(\"Autosaving\")\n\n        await this.handleSavePortfolio();\n\n        this.props.toggleUnsavedWork(false);\n\n        //Sets isTimerExist to false after saving so new timers can be set.\n        this.setState({\n          isTimerExist: false\n        })\n      }, 30000);\n\n      //Sets isTimerExist to true so we don't queue multiple unnecessary save timers\n      this.setState({\n        isTimerExist: true\n      });\n    }\n  }\n\n  /**\n   * Function to enter entries based on the entry's type and template style.\n   * \n   * @param {*} entryFields \n   * @param {number} index \n   * @returns void\n   * @memberof Portfolio\n   */\n  renderEntry(entryFields, index) {\n    return templates[entryFields.type][entryFields.style].component(entryFields, index);\n  }\n\n  traverseDirectory(pages, pathArray) {\n    let ptr = pages;\n    for (let index = 0; index < pathArray.length; index++) {\n      ptr = ptr.directories[pathArray[index]];\n    }\n    return ptr;\n  }\n\n  /**\n   * Event handler to open/close the template selector and update states if necessary\n   * \n   * @param {Object} selection - the fields to update, or null if no changes are needed\n   */\n  handleSelector(selection) {\n    const entryType = selection.type;\n    const entryStyle = selection.style;\n    const fieldsCopy = JSON.parse(JSON.stringify(templates[entryType][entryStyle].defaultField));\n    const newEntry = {\n      type: entryType,\n      style: entryStyle,\n      ...fieldsCopy\n    };\n    const newPages = { ...this.state.pages };\n    const currentPage = this.traverseDirectory(newPages, this.state.currentPath);\n    currentPage.entries =\n      [...this.state.currentPage.entries, newEntry];\n    this.setState({\n      pages: newPages,\n      currentPage: currentPage\n    })\n\n    //triggers Autosave\n    this.props.toggleUnsavedWork(true);\n  }\n\n  /**\n   * Function to update the entry based on the styles provided by the user.\n   * \n   * @param {*} fields\n   * @param {boolean} changed - Whether the fields have been changed/ if the user intends to save the changes.\n   */\n  handleEditorClose(fields, changed, index) {\n    if (changed) {\n      const newPages = { ...this.state.pages };\n      const entries = [...this.state.currentPage.entries];\n      entries[index] = fields;\n      const currentPage = this.traverseDirectory(newPages, this.state.currentPath)\n      currentPage.entries = entries;\n      this.setState({\n        pages: newPages,\n        currentPage: currentPage\n      })\n\n      //triggers Autosave\n      this.props.toggleUnsavedWork(true);\n    } else {\n      this.forceUpdate();\n    }\n  }\n\n  // TODO: publish component check file empty before load?\n  /**\n   * A function to generate the necessary html/css/js files for a single page.\n   * \n   * @param {*} entries \n   * @param {string} directory - The directory/route to the page as defined by the user.\n   * @returns {(Map|Array)} An array of maps containing the relative paths to each file and their contents.\n   * \n   */\n  handleCreateFile(page, prepend) {\n    // Allow users to create empty pages so they can create their own pages\n    const entries = page.entries;\n    console.log(page);\n    if (entries === []) return [];\n\n    // removes 'root' placeholder\n    console.log(page.directory)\n    const directory = `${prepend}${page.directory === 'root' ? '' : page.directory + \"/\"}`;\n    const images = [];\n    console.log(entries);\n\n    const copy = JSON.parse(JSON.stringify(entries));\n    for (let idx = 0; idx < copy.length; idx++) {\n      let dupeEntry = copy[idx];\n      Object.entries(dupeEntry.images).map(([key, item]) => {\n        if (item.format === 'image' && item.src.startsWith('data:image/')) {\n          const split = item.src.split(',');\n          const fileType = split[0].substring(11, split[0].indexOf(';'));\n          const baseContent = split[1];\n          console.log(baseContent);\n          const imgDir = `assets/${key}${idx}.${fileType}`;\n          images.push({\n            file: `${directory}${imgDir}`,\n            contents: baseContent\n          });\n          copy[idx].images[key] = imgDir;\n        }\n        // copy.images[key] = `${directory}/${key}.jpg`\n      })\n      for (let s_idx = 0; s_idx < dupeEntry.sections.length; s_idx++) {\n        let dupeSection = dupeEntry.sections[s_idx];\n        Object.entries(dupeSection.images).map(([key, item]) => {\n          if (item.format === 'image' && item.src.startsWith('data:image/')) {\n            const split = item.src.split(',');\n            const fileType = split[0].substring(11, split[0].indexOf(';'));\n            const baseContent = split[1];\n            const size = baseContent.length * 3 / 4 - baseContent.split('=')\n            console.log(baseContent);\n            const imgDir = `assets/${key}${idx}_section${s_idx}.${fileType}`;\n            images.push({\n              file: `${directory}${imgDir}`,\n              contents: baseContent\n            });\n            copy[idx].sections[s_idx].images[key] = imgDir;\n          }\n          // copy.images[key] = `${directory}/${key}.jpg`\n        })\n      }\n    }\n\n    const sheets = new ServerStyleSheets({jss});\n    // TODO: test renderToStaticMarkup\n    //NOTE: sheets.collect will look for mui styling in the provided component.\n    //We also need to wrap that component with the theme we are using so that the style can reference it properly\n    //Suspect that because certain styles are missing, their defaults may be injected into our app, resulting in default css styles.\n    const rawHTML = ReactDOMServer.renderToString(sheets.collect(\n      <ThemeProvider theme={theme}>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          {copy.map((entry, index) => this.renderEntry(entry))}\n        </div>\n      </ThemeProvider>\n    ));\n\n\n    // TODO: add title\n    // TODO: remove empty files\n    const html = Base64.encode(`\n            <!DOCTYPE html>\n            <html lang=\"en\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n                <link href=\"styles.css\" rel=\"stylesheet\">\n                <script defer src=\"script.js\"></script>\n                <title>Welcome</title>\n            </head>\n            <body>\n            ${rawHTML}\n            </body>`);\n    const css = Base64.encode(sheets.toString());\n    const js = Base64.encode(copy\n      .map((entry, index) => templates[entry.type][entry.style].script(index))\n      .filter(Boolean).join('\\n'));\n\n    let files = [\n      ...images,\n      {\n        file: `${directory}scripts.js`,\n        contents: js\n      },\n      {\n        file: `${directory}index.html`,\n        contents: html\n      },\n      {\n        file: `${directory}styles.css`,\n        contents: css\n      }\n    ]\n\n    // inefficient code, might be able to optimise\n    if (page.directories !== {}) {\n      Object.values(page.directories).map((value) => {\n        console.log(value);\n        const fileArray = this.handleCreateFile(value, directory);\n        files = files.concat(fileArray);\n      })\n    }\n    console.log(files);\n    return files;\n  }\n\n  /**\n   * Sends a request to backend to save Portfolio. It then sends a request to fetch the same portfolio from backend, now populated with\n   * relevant _ids and other required data and saves it to redux state and localStorage. If this is not possible, the user\n   * will be directed to /dashboard so that another attempt can be made to fetch the portfolio from backend.\n   * \n   * @returns void\n   * @memberof Portfolio\n   */\n  async handleSavePortfolio() {\n    console.log(\"saving begins\");\n    console.log(this.state.pages);\n    await axios({\n      method: \"PUT\",\n      url: process.env.REACT_APP_BACKEND + \"/portfolio/upsert\",\n      withCredentials: true,\n      data: {\n        user: {\n          id: this.props.id,\n          name: this.props.name,\n          avatar: this.props.avatar_url,\n          gravatar_id: this.props.gravatar_id\n        },\n        portfolio: {\n          _id: this.state.portfolio_id,\n          name: this.state.name,\n          pages: this.state.pages\n        }\n      }\n    }).then(async res => {\n      console.log(res.data.message);\n      //Need to set the id first to fetch it after this.\n      this.setState({\n        portfolio_id: res.data._id\n      })\n\n      //If saving/updating is successful, need to fetch from db to get the ObjectIds created by mongoose for the portfolio, pages and entries.\n      //WARNING: Could be a source of poor performance. Might be a better way to do this.\n      await axios({\n        method: \"GET\",\n        url: process.env.REACT_APP_BACKEND + \"/portfolio/\" + this.state.portfolio_id,\n        withCredentials: true\n      }).then(async res => {\n        console.log(\"_id updated\");\n        console.log(res.data.portfolio);\n        this.props.saveCurrentWorkToLocal(res.data.portfolio);\n        //There is no need to set the _id for portfolio since we already did it as a prerequisite for this step.\n        //Name is also set.\n        this.setState({\n          pages: res.data.portfolio.pages\n        });\n        console.log(this.state.pages);\n\n        //After _id is fetched, we then update the preview.\n        await this.handleUploadPreview();\n      }).catch(err => {\n        handleErrors(err, this.props.history);\n\n        //If code comes to here, it means _id is not fetched after save is successful. We bring the user\n        //back to dashboard to force him to reopen and fetch the portfolio again.\n        this.props.history.push(\"/dashboard\");\n      })\n\n    }).catch(err => {\n      handleErrors(err, this.props.history);\n    })\n  }\n\n\n\n  /**\n   * A function to generate all files needed to be pushed to github.\n   * \n   * @returns {(Map|Array)} An array of maps each containing the relative paths to each file and their contents.\n   * @memberof Portfolio\n   */\n  handleProduction() {\n\n    const fileArray = this.handleCreateFile(this.state.pages, '');\n    //fileArray.map((value) => alert(`file: ${value.file};\\n${Base64.decode(value.contents)}`));\n    let renameArray = [];\n    fileArray.map((obj) => {\n      renameArray.push({\n        fileName: obj.file,\n        fileContent: obj.contents\n      })\n    });\n    //console.log(renameArray);\n\n    return renameArray;\n  }\n\n  /**\n   * A function to delete entries from a portfolio\n   * \n   * @param {number} index the index of the entry to be deleted\n   * @returns void\n   * @memberof Portfolio\n   */\n  handleDeleteEntry(index) {\n    const newPages = { ...this.state.pages };\n    let ptr = newPages;\n    const currentPage = this.traverseDirectory(newPages, this.state.currentPath);\n    currentPage.entries =\n      this.state.currentPage.entries.filter(\n        (item, filterIndex) => (filterIndex !== index)\n      );\n    this.setState({\n      pages: newPages,\n      currentPage: currentPage\n    });\n\n    //triggers Autosave\n    this.props.toggleUnsavedWork(true);\n  }\n\n  handleUpdatePages(newDirTree) {\n    this.state.pages = newDirTree;\n    this.state.currentPage = newDirTree;\n    this.state.currentPath = [];\n\n    //Triggers autosave\n    this.props.toggleUnsavedWork(true);\n  }\n\n  handleDirectory(currentPage, currentPath) {\n    if (currentPage !== undefined) {\n      this.state.currentPage = currentPage;\n      this.state.currentPath = currentPath;\n    }\n    this.forceUpdate();\n  }\n\n  /**\n   * renders html element with id \"preview\" to a canvas and ignores html elements marked with data-html2canvas-ignore=\"true\"\n   * that are present within the preview element. The canvas is then converted into a png and a request is made to backend\n   * to save the png file under current portfolio with label \"preview\"\n   * \n   * @return void\n   * @memberof Portfolio\n   */\n  async handleUploadPreview() {\n    await html2canvas(document.querySelector(\"#preview\"), { backgroundColor: null, useCORS: true })\n      .then(canvas => {\n\n        canvas.toBlob(async blob => {\n          const bodyFormData = new FormData();\n          bodyFormData.append('file', new File([blob], `${this.state.name} preview`, { type: \"image/png\" }));\n          bodyFormData.append('label', \"preview\");\n\n          await axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/checkExistingImage/\" + this.state.portfolio_id,\n            withCredentials: true,\n            params: {\n              label: \"preview\"\n            }\n          }).then(async res => {\n            if (res.data.isExist) {\n              console.log(\"updating image\")\n              await axios({\n                method: \"PUT\",\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/updateImage/\" + this.state.portfolio_id,\n                withCredentials: true,\n                data: bodyFormData,\n                headers: { \"Content-Type\": \"multipart/form-data\" }\n              }).then(res => {\n                console.log(res.data.message);\n              }).catch(err => {\n                handleErrors(err, this.props.history);\n              })\n            } else {\n              console.log(\"uploading image\");\n              await axios({\n                method: \"POST\",\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/uploadImage/\" + this.state.portfolio_id,\n                withCredentials: true,\n                data: bodyFormData,\n                headers: { \"Content-Type\": \"multipart/form-data\" }\n              }).then(res => {\n                console.log(res.data.message);\n                console.log(res.data.refs);\n              }).catch(err => {\n                handleErrors(err, this.props.history);\n              });\n            }\n          }).catch(err => {\n            handleErrors(err, this.props.history);\n          })\n        }\n        )\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Prompt\n          when={this.props.isUnsaved}\n          message={JSON.stringify({\n            message: \"Are you sure you want to leave? You have unsaved work.\",\n            portfolio: {\n              _id: this.state.portfolio_id,\n              name: this.state.name,\n              pages: this.state.pages\n            },\n            user: {\n              id: this.props.id,\n              name: this.props.name,\n              avatar: this.props.avatar_url,\n              gravatar_id: this.props.gravatar_id\n            }\n          })}\n        />\n\n        <div id=\"preview\">\n          {this.state.currentPage.entries.map((entry, index) => {\n            // Key MUST be unique -> component will be reinitialized if key is different.\n            return (<div className={classes.entryEditorDiv}>\n              <EntryEditor\n                fields={entry}\n                info={templates[entry.type][entry.style].info}\n                onClose={(data, changed) => {\n                  this.handleEditorClose(data, changed, index);\n                }}\n                key={`${this.state.currentPath === []\n                  ? 'root'\n                  : this.state.currentPath[this.state.currentPath.length - 1]\n                  }-${index}-${entry.type}-${entry.style}`}\n              />\n              <Fab\n                data-html2canvas-ignore=\"true\"\n                className={classes.delFAB}\n                onClick={() => this.handleDeleteEntry(index)}>\n                <FaTrash />\n              </Fab>\n              {this.renderEntry(entry)}\n            </div>);\n          })}\n        </div>\n        <div className={classes.staticDiv}>\n          <Fab\n            className={classes.controlFAB}\n            onClick={() => console.log(this.handleSavePortfolio())}>\n            <FaSave />\n          </Fab>\n          <TemplateSelector\n            onClose={this.handleSelector}\n          />\n          <DirectoryManager\n            onClose={this.handleDirectory}\n            getState={() => {\n              return {\n                dirTree: this.state.pages\n              }\n            }}\n            dirTree={this.state.pages}\n            onUpdate={this.handleUpdatePages}\n          />\n          <Publish createPushables={this.handleProduction} />\n        </div>\n      </div>);\n  }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof Portfolio\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn,\n  name: state.login.name,\n  id: state.login.id,\n  avatar_url: state.login.avatar_url,\n  gravatar_id: state.login.gravatar_id,\n  currentPortfolio: state.portfolio.currentPortfolio,\n  isUnsaved: state.portfolio.isUnsaved\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof Portfolio\n */\nconst mapDispatchToProps = {\n  repopulate_state,\n  saveCurrentWork,\n  saveCurrentWorkToLocal,\n  toggleUnsavedWork\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Portfolio)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst UserConfirmation = (message, callback) => {\r\n\r\n\r\n\r\n    const textObj = JSON.parse(message);\r\n\r\n    const container = document.createElement(\"div\");\r\n    container.setAttribute(\"custom-confirmation-navigation\", \"\");\r\n    document.body.appendChild(container);\r\n\r\n    /**\r\n     * If callbackState is false, user decides to not leave the page.\r\n     * If callbackState is true, user decides to leave the page. There is a need to\r\n     * ask the user if he wishes to save or discard work.\r\n     *\r\n     * @param {*} callbackState Boolean with which the callback function takes.\r\n     * @param {*} isSave Boolean indicating whether to save current work or not.\r\n     */\r\n    const closeModal = async (callbackState, isSave) => {\r\n        ReactDOM.unmountComponentAtNode(container);\r\n        document.body.removeChild(container);\r\n        //if callbackState is true, then user wants to leave portfolio. Save for him.\r\n        if (isSave) {\r\n            await axios({\r\n                method: \"PUT\",\r\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/upsert\",\r\n                withCredentials: true,\r\n                data: {\r\n                    user: textObj.user,\r\n                    portfolio: textObj.portfolio\r\n                }\r\n            }).then(res => {\r\n                console.log(res.data.message);\r\n                callback(true);\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    console.log(err.response.data);\r\n                } else {\r\n                    console.log(err.message);\r\n                }\r\n                console.log(\"failure to save, returning to portfolio to retry\");\r\n                callback(false)\r\n            })\r\n        } else {\r\n            callback(callbackState);\r\n        }\r\n        \r\n     };\r\n\r\n    \r\n    ReactDOM.render(\r\n        <Dialog\r\n            open={true}\r\n            aria-labelledby=\"prompt-dialog\"\r\n            aria-describedby=\"prompt-dialog\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle\r\n                id=\"promp-title\"\r\n            >\r\n                Alert\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText\r\n                    id=\"prompt-text\"\r\n                >\r\n                    {textObj.message}\r\n                </DialogContentText>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => closeModal(false, false)}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => closeModal(true, false)}\r\n                    >\r\n                        Discard unsaved work\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => closeModal(true, true)}\r\n                    >\r\n                        Save work\r\n                    </Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>,\r\n        container\r\n    )\r\n    \r\n}\r\n\r\nexport default UserConfirmation;\r\n","/**\n * LoginReducer exports reducers which is a function that determines changes to an application's state.\n * \n * @module LoginReducer\n * @author Chen En\n * @category Reducer\n */\n\nimport { \n    LOG_IN_USER,\n    LOG_OUT_USER,\n    REPOPULATE_STATE\n} from '../actions/LoginAction';\n\n/** \n * string representing guest user.\n * \n * @type {string}\n * @member GUEST\n */\nconst GUEST = \"Guest\"\n\n/** \n * state that the login reducer is initialized with.\n * \n * @typedef initialState\n * @property {boolean} loggedIn - logged in status of user.\n * @property {string} name - Github name of user.\n * @property {string} id - Unique Github id of user.\n * @property {string} avatar_url - url representing image of user's Github avatar\n * @property {string} gravatar_id - url representing user's globally recognized avatar\n * @property {Object} error - error response provided by requests.\n * @member initialState\n */\nconst initialState = {\n    loggedIn: false,\n    name: GUEST,\n    id: '',\n    avatar_url: '',\n    gravatar_id: '',\n    error: null\n}\n\n/**\n * string representing absent user.\n * \n * @type {string}\n * @member MISSING\n */\nexport const MISSING = ''\n\n//TODO handle actions for GUEST\n\n/**\n * A reducer function that maintains and changes the initialState \n * by processing actions dispatched to it.\n * \n * @param {Object} [state=initialState] - initialState is fixed.\n * @param {Object} action - Action object.\n * @return void \n * @member login\n * @function\n */\nexport default function login(state = initialState, action) {\n    switch(action.type) {\n        case LOG_IN_USER:\n            return {\n                ...state,\n                name: action.payload.name,\n                id: action.payload.id,\n                avatar_url: action.payload.avatar_url,\n                gravatar_id: action.payload.gravatar_id,\n                loggedIn: true\n            }\n        case LOG_OUT_USER:\n            return {\n                ...state,\n                name: GUEST,\n                id: MISSING,\n                avatar_url: MISSING,\n                gravatar_id: MISSING,\n                loggedIn: false\n            }\n        case REPOPULATE_STATE:\n            return {\n                ...state,\n                loggedIn: action.payload.loggedIn,\n                name: action.payload.name,\n                id: action.payload.id,\n                avatar_url: action.payload.avatar_url,\n                gravatar_id: action.payload.gravatar_id\n            }\n        default:\n            return state\n    }\n}","/**\n * PortfolioReducer exports reducers which is a function that determines changes to an application's state.\n * \n * @module PortfolioReducer\n * @author Chen En\n * @category Reducer\n */\n\nimport {\n    FETCH_PORTFOLIOS_BEGIN,\n    FETCH_PORTFOLIOS_SUCCESS,\n    FETCH_PORTFOLIOS_FAILURE,\n    SAVE_CURRENT_WORK,\n    CLEAR_CURRENT_WORK,\n    TOGGLE_UNSAVED_WORK\n} from '../actions/PortfolioAction'\n\n/** \n * @typedef initialState\n * @property {Array.<Object>} portfolios - Array containing objects containing details about user portfolios.\n * @property {boolean} loading - boolean indicating loading status\n * @property {Object} error - error object from a failed request\n * @property {Object} currentPortfolio - object containing details about user's current portfolio work.\n * @member initialState\n */\nconst initialState = {\n    portfolios: [],\n    loading: false,\n    error: null,\n    currentPortfolio: null,\n    isUnsaved: false\n}\n\n/**\n * A reducer function that maintains and changes the initialState \n * by processing actions dispatched to it.\n * \n * @param {Object} [state=initialState] - initialState is fixed.\n * @param {Object} action - Action object.\n * @return void \n * @member portfolio\n * @function\n */\nexport default function portfolio(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PORTFOLIOS_BEGIN:\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_PORTFOLIOS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                portfolios: action.payload.portfolios\n            }\n        case FETCH_PORTFOLIOS_FAILURE:\n            //if failure, means user is unauthorized. clear portfolios and current_work\n            return {\n                ...state,\n                loading: false,\n                portfolios: [],\n                currentPortfolio: null,\n                error: action.payload.err\n            }\n        case SAVE_CURRENT_WORK:\n            return {\n                ...state,\n                currentPortfolio: action.payload.curr\n            }\n        case CLEAR_CURRENT_WORK:\n            return {\n                ...state,\n                currentPortfolio: null\n            }\n        case TOGGLE_UNSAVED_WORK:\n            return {\n                ...state,\n                isUnsaved: action.payload.bool\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport login from \"./LoginReducer\"\nimport portfolio from \"./PortfolioReducer\"\n\n\n/**\n * @file Combines reducers into one using combineReducers function.\n * \n * @module RootReducer\n * @author Chen En\n * @category Reducer\n */\n\nexport default combineReducers({\n  login,\n  portfolio\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport LoginResult from './components/LoginResult';\nimport Logout from './components/Logout';\nimport Dashboard from './components/Dashboard';\nimport Portfolio from './components/Portfolio';\nimport Publish from './components/Publish';\nimport UserConfirmation from './components/UserConfirmation';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './styles/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n\n/**\n * @file index.js is the root file for this Portfol.io app\n * \n * @author Chen En\n * @author Chuan Hao\n */\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme = {theme}>\n      <BrowserRouter\n        getUserConfirmation={(message, callback) => UserConfirmation(message, callback)}\n      >\n        <Provider store = {store}>\n          <Switch>\n            <Route exact path = '/' component = {Home}></Route>\n            <>\n              <Navbar/>\n                <Route exact path = '/login/callback' component = {LoginResult}></Route>\n                <Route exact path = '/dashboard' component = {Dashboard}></Route>\n                <Route exact path = '/edit' component = {Portfolio}></Route>\n                <Route exact path = '/publish' component = {Publish}></Route>\n                <Route exact path = '/logout' component = {Logout}></Route>\n            </>\n          </Switch>\n        </Provider>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nexport default store;"],"sourceRoot":""}