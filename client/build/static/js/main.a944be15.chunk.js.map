{"version":3,"sources":["actions/LoginAction.js","actions/PortfolioAction.js","components/Navbar.jsx","styles/fonts/LiquidCrystal-Normal.woff2","styles/fonts/LiquidCrystal-Bold.woff2","styles/fonts/LiquidCrystal-Light.woff2","styles/fonts/LiquidCrystal-BoldItalic.woff2","styles/fonts/LiquidCrystal-ExBold.woff2","styles/fonts/LiquidCrystal-ExBoldItalic.woff2","styles/fonts/LiquidCrystal-LightItalic.woff2","styles/fonts/LiquidCrystal-NormalItalic.woff2","styles/fonts.js","styles/styles.js","components/Home.jsx","components/LoginResult.jsx","components/Dashboard.jsx","styles/icons.js","components/EntryEditor.jsx","res/preview/introduction/IntroMinimalist.JPG","templates/introduction/IntroTemplateMinimalist.jsx","res/preview/timeline/TimelineMinimalist.JPG","templates/timeline/TimelineTemplateMinimalist.jsx","templates/about/AboutTemplateMinimalist.jsx","templates/introduction/IntroTemplateRedline.jsx","templates/Templates.js","components/TemplateSelector.jsx","components/Publish.jsx","components/DirectoryManager.jsx","components/Portfolio.jsx","components/UserConfirmation.jsx","reducers/LoginReducer.js","reducers/PortfolioReducer.js","reducers/RootReducer.js","reportWebVitals.js","index.js"],"names":["LOG_IN_USER","LOG_OUT_USER","REPOPULATE_STATE","repopulate_state","res","type","payload","FETCH_PORTFOLIOS_BEGIN","FETCH_PORTFOLIOS_SUCCESS","FETCH_PORTFOLIOS_FAILURE","SAVE_CURRENT_WORK","CLEAR_CURRENT_WORK","TOGGLE_UNSAVED_WORK","saveCurrentWork","curr","saveCurrentWorkToLocal","dispatch","window","localStorage","setItem","process","JSON","stringify","clearCurrentWorkFromLocal","removeItem","fetchPortfolios","id","axios","method","url","withCredentials","params","then","data","portfolios","undefined","catch","err","fetchPortfoliosFailure","Navbar","handleLogout","bind","handleUserMenu","state","menu_open","user_drawer_open","handleReturnDashboard","handleReturnHome","a","this","props","loggedIn","parse","getItem","localStorageItem","console","log","log_out_user","history","push","message","setState","name","avatar_url","error","gravatar_id","classes","className","root","CssBaseline","AppBar","position","appBar","appBarShift","toolbar","Button","homeButton","onClick","Typography","component","variant","color","fontWeight","noWrap","title","Box","style","startIcon","Avatar","src","hide","Drawer","anchor","onBackdropClick","paper","drawerPaper","drawerPaperClose","open","drawerDiv","Hidden","xsDown","expandedAvatar","Divider","List","flexDown","fullWidth","logoutButton","dashboardButton","appBarSpacer","Component","mapDispatchToProps","connect","login","withStyles","theme","display","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","spacing","width","enteringScreen","homeButtonHidden","flexGrow","textAlign","height","whiteSpace","overflowX","breakpoints","up","content","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","marginTop","marginLeft","maxWidthButton","borderRadius","maxHeight","palette","main","backgroundColor","dark","withRouter","fonts","liquidCrystalNormal","fontFamily","fontStyle","fontDisplay","LiquidCrystalNormal","liquidCrystalNormalItalic","LiquidCrystalNormalItalic","liquidCrystalBold","LiquidCrystalBold","liquidCrystalLight","LiquidCrystalLight","liquidCrystalLightItalic","LiquidCrystalLightItalic","liquidCrystalBoldItalic","LiquidCrystalBoldItalic","liquidCrystalExBold","LiquidCrystalExBold","liquidCrystalExBoldItalic","LiquidCrystalExBoldItalic","createMuiTheme","primary","light","secondary","contrastText","text","typography","join","overrides","MuiCssBaseline","Object","values","featureImage","featureTitle","featureText","Home","handleFeatureClick","handleFeatureNext","handleFeaturePrev","featureIndex","newIndex","welcomeDiv","centeredDiv","portfolioIcon","alt","multiline","to","href","featuresDiv","floating","featureButtonLeft","featureImgDiv","fullSize","featureSection","featureTextDiv","featureButtonRight","faqDiv","ListItem","backgroundImage","backgroundRepeat","backgroundSize","welcomeText","top","right","left","LoginResult","search","location","URLSearchParams","ghCode","get","responseType","code","forLocalStorage","log_in_user","Dashboard","nameDialogState","portfolioName","duplicateKeyError","duplicateKeyHelperText","anchorEl","currentPortfolio_Id","deleteDialogState","changeNameDialogState","changedName","images","defaultPreviewSrc","handleAddPortfolio","handleOpenPortfolio","handleOnChange","handleNameDialogClose","handleNameDialogOpen","handleDeletePortfolio","handleOpenEditMenu","handleCloseEditMenu","handleDeleteDialogState","handleChangeNameDialogState","handleChangePortfolioName","handleGetImage","handleDeleteImage","testGithubPageStatus","map","portfolio","_id","e","event","target","value","bool","filter","length","pages","currentTarget","response","keys","key","temp","originalPortfolio","find","element","changedPortfolio","portfolio_id","imageRefs","imageRef","label","URL","createObjectURL","tempPortfolioImages","repo","status","Grid","direction","justify","loading","idx","Card","cardRoot","cardDetails","CardContent","CardActions","cardControls","portfolioButton","aria-controls","aria-haspopup","CardMedia","cardMedia","Menu","keepMounted","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","defaultValue","onChange","InputLabelProps","InputProps","helperText","DialogActions","aria-describedby","size","ai","icons","aiIcons","bs","bsIcons","bi","biIcons","di","diIcons","fi","fiIcons","fc","fcIcons","fa","faIcons","gi","giIcons","go","goIcons","gr","grIcons","hi","hiIcons","im","imIcons","io","ioIcons","io5","io5Icons","md","mdIcons","ri","riIcons","si","siIcons","ti","tiIcons","vsc","vscIcons","wi","wiIcons","cg","cgIcons","EntryEditor","copied_fields","fields","currentSection","showEditor","showIcon","iconCategory","handleCreateEntry","handleChange","handleImageUpload","handleEditSectionText","handleSectionView","handleCloseEditor","handleShowEditor","handleFontMenu","handleIconSelect","createImageControl","category","originalCat","sectionIndex","freader","FileReader","readAsDataURL","files","onloadend","result","format","newSections","sections","spliced","item","filterIndex","copy","info","defaultEntry","texts","modifier","nextSection","save","field","font","newValue","section","accept","imgInput","htmlFor","imgPreview","entryFormat","split","SocialIcon","IconButton","Modal","modal","Tabs","scrollButtons","entries","icon","Tab","gridDiv","iconName","ReactIcon","data-html2canvas-ignore","Fab","editFAB","rowDiv","styleDiv","styleInput","fontName","handleUpdateFont","colours","Input","colDiv","imgGrid","textGrid","enabled","sectionDiv","addSectionSpacer","handleDeleteSection","rowsMax","ctrlDiv","opacity","overflowY","bottom","gridTemplateColumns","div","gridGap","svgIcon","IntroTemplateMinimalist","bg","textBox","titleFont","dp","templateName","preview","script","index","defaultField","std","TimelineTemplateMinimalist","timelineImage","timelineImg","sectionTextDiv","timelineDate","timelineTitle","AboutTemplateMinimalist","header","bodyFont","about","IntroTemplateRedline","paddingBlock","border","marginInline","socialIcon","socialLink","socialButton","templates","introduction","timeline","TemplateSelector","showSelector","handleCloseSelector","controlFAB","cardDiv","entry","card","ButtonBase","focusRipple","buttonBase","handleSelect","image","fab","minHeight","marginBottom","Publish","finalizeDialogState","overrideDialogState","repositoryName","repositoryContent","publishLoading","statusState","publishError","publishErrorMessage","pageUrl","pageCheckIntervalTask","handleFinalizeDialogOpen","handleFinalizeDialogClose","handleOverrideDialogOpen","handleOverrideDialogClose","handleFinalizeEdits","handleOverrideAllowed","handlePushToGithub","handleCheckPageStatus","handleStatusClose","handleCopyClipboard","pushables","createPushables","setInterval","route","clearInterval","reason","navigator","clipboard","writeText","aria-label","actionFAB","CircularProgress","Snackbar","TransitionComponent","Slide","SnackbarContent","action","Fragment","DirectoryManager","currentPage","dirTree","currentPath","showInput","showDirectory","dirName","inputMode","expanded","handleSelectPage","renderTree","handleDeletePage","handleRenameDirectory","node","path","preventDefault","folder","directoryArray","TreeItem","nodeId","treeItem","selected","treeItemSelected","treeItemContent","group","treeItemGroup","onLabelClick","directories","pageArray","getPage","newName","newDirTree","parent","newPage","directory","onUpdate","oldName","pop","alert","pageName","getState","handleCloseDirectory","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","treeView","textField","handleCreatePage","treeItemExpanded","paddingLeft","borderLeft","Portfolio","editMode","isTimerExist","handleEditorClose","handleCreateFile","handleProduction","handleSelector","handleUpdatePages","handleDirectory","handleSavePortfolio","handleUploadPreview","userLocalStorageItem","portfolioLocalStorageItem","currentPortfolio","entryFields","pathArray","ptr","selection","entryType","entryStyle","fieldsCopy","newEntry","newPages","traverseDirectory","toggleUnsavedWork","changed","forceUpdate","page","prepend","dupeEntry","startsWith","fileType","substring","indexOf","baseContent","imgDir","file","contents","s_idx","dupeSection","sheets","ServerStyleSheets","rawHTML","ReactDOMServer","renderToString","collect","ThemeProvider","renderEntry","html","Base64","encode","css","toString","js","fileArray","concat","user","avatar","decode","renameArray","obj","fileName","fileContent","html2canvas","document","querySelector","useCORS","canvas","toBlob","blob","bodyFormData","FormData","append","File","isExist","headers","refs","when","isUnsaved","delFAB","handleDeleteEntry","staticDiv","entryDiv","UserConfirmation","callback","textObj","createElement","setAttribute","body","appendChild","closeModal","callbackState","isSave","ReactDOM","unmountComponentAtNode","removeChild","render","GUEST","initialState","MISSING","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","applyMiddleware","thunk","StrictMode","getUserConfirmation","exact","getElementById"],"mappings":"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","file":"static/js/main.a944be15.chunk.js","sourcesContent":["/**\n * LoginAction exports actions and their respective action creators.\n * \n * @module LoginAction\n * @author Chen En\n * @category Action\n */\n\n/**\n * string that identifies a LOG_IN_USER action.\n * \n * @type {string}\n * @member LOG_IN_USER\n */\nexport const LOG_IN_USER = \"LOG_IN_USER\"\n\n/**\n * string that identifies a LOG_OUT_USER action.\n * \n * @type {string}\n * @member LOG_OUT_USER\n */\nexport const LOG_OUT_USER = \"LOG_OUT_USER\"\n\n/**\n * string that identifies a REPOPULATE_STATE action.\n * \n * @type {string}\n * @member REPOPULATE_STATE\n */\nexport const REPOPULATE_STATE = \"REPOPULATE_STATE\"\n\n/**\n * LOG_IN_USER action creator. This action saves user details contained in res to Redux Store and\n * sets boolean loggedIn in Redux Store to true.\n * \n * @param {Object} res - response object containing Github user details.\n * @returns {{type: string, payload: Object}} - LOG_IN_USER action object.\n * @member log_in_user\n * @function\n */\nexport const log_in_user = res => ({\n    type: LOG_IN_USER,\n    payload: { ...res }\n})\n\n/**\n * LOG_OUT_USER action creator. This action removes user details contained in Redux Store and\n * sets boolean loggedIn in Redux Store to false.\n * \n * @returns {{type: string}} - LOG_OUT_USER action object.\n * @member log_out_user\n * @function\n */\nexport const log_out_user = () => ({\n    type: LOG_OUT_USER\n})\n\n/**\n * REPOPULATE_STATE action creator. This action saves user details and user logged in status\n * contained in res to Redux Store.\n * \n * @param {Object} res - response object containing Github user details\n * @returns {{type: string, payload: Object}} - REPOPULATE_STATE action object.\n * @member repopulate_state\n * @function\n */\nexport const repopulate_state = res => ({\n    type: REPOPULATE_STATE,\n    payload: { ...res }\n})","/**\n * PortfolioAction exports actions and their respective action creators.\n * \n * @module PortfolioAction\n * @author Chen En\n * @category Action\n */\n\nimport axios from 'axios'\n\n/**\n * string that identifies a FETCH_PORTFOLIOS_BEGIN action\n * \n * @type {string}\n * @member FETCH_PORTFOLIOS_BEGIN\n */\nexport const FETCH_PORTFOLIOS_BEGIN = \"FETCH_PORTFOLIOS_BEGIN\"\n\n/**\n * string that identifies a FETCH_PORTFOLIOS_SUCCESS action\n * \n * @type {string}\n * @member FETCH_PORTFOLIOS_SUCCESS\n */\nexport const FETCH_PORTFOLIOS_SUCCESS = \"FETCH_PORTFOLIOS_SUCCESS\"\n\n/**\n * string that identifies a FETCH_PORTFOLIOS_FAILURE action\n * \n * @type {string}\n * @member FETCH_PORTFOLIOS_FAILURE\n */\nexport const FETCH_PORTFOLIOS_FAILURE = \"FETCH_PORTFOLIOS_FAILURE\"\n\n/**\n * string that identifies a SAVE_CURRENT_WORK action\n * \n * @type {string}\n * @member SAVE_CURRENT_WORK\n */\nexport const SAVE_CURRENT_WORK = \"SAVE_CURRENT_WORK\"\n\n/**\n * string that identifies a CLEAR_CURRENT_WORK action\n * \n * @type {string}\n * @member CLEAR_CURRENT_WORK\n */\nexport const CLEAR_CURRENT_WORK = \"CLEAR_CURRENT_WORK\"\n\n/**\n * string that identifies a TOGGLE_UNSAVED_WORK action\n * \n * @type {string}\n * @member TOGGLE_UNSAVED_WORK\n */\nexport const TOGGLE_UNSAVED_WORK = \"TOGGLE_UNSAVED_WORK\"\n\n/**\n * SAVE_CURRENT_WORK action creator. This action saves user's current portfolio work\n * to localStorage.\n * \n * @param {Object} curr - object containing user's current portfolio work.\n * @returns {{type: string, payload: Object}} - SAVE_CURRENT_WORK action object.\n * @member saveCurrentWork\n * @function\n */\nexport const saveCurrentWork = curr => ({\n    type: SAVE_CURRENT_WORK,\n    payload: { curr }\n})\n\n/**\n * CLEAR_CURRENT_WORK action creator. This action clears user's current portfolio work\n * from localStorage.\n * \n * @returns {{type: string}} - CLEAR_CURRENT_WORK action object.\n * @member clearCurrentWork\n * @function\n */\nexport const clearCurrentWork = () => ({\n    type: CLEAR_CURRENT_WORK\n})\n\n/**\n * TOGGLE_UNSAVED_WORK action creator. This action sets the isUnsaved boolean in redux store.\n * \n * @param {boolean} bool - Boolean indicating if unsaved work exists.\n * @returns {{type: string}} - TOGGLE_UNSAVED_WORK action object.\n * @member toggleUnsavedWork\n * @function\n */\nexport const toggleUnsavedWork = (bool) => ({\n    type: TOGGLE_UNSAVED_WORK,\n    payload: { bool }\n})\n\n/**\n * Action creator that returns a function, which is only possible with redux-thunk.\n * \n * The function receives the store's dispatch method, which is then used to dispatch regular\n * synchronous actions inside the function's body once the asynchronous operations have been completed.\n * \n * The function saves user's work to localStorage, then dispatches a SAVE_CURRENT_WORK action object.\n *\n * @param {Object} curr - object containing user's current portfolio work.\n * @return {Function} - a function that receives the store's dispatch method.\n * @member saveCurrentWorkToLocal\n * @function\n * @requires NPM:redux-thunk\n */\nexport function saveCurrentWorkToLocal(curr) {\n    return dispatch => {\n        window.localStorage.setItem(process.env.REACT_APP_AUTOSAVE_LOCALSTORAGE, JSON.stringify(curr))\n        dispatch(saveCurrentWork(curr))\n        //console.log(\"portfolio work saved temporarily\")\n    }\n}\n\n/**\n * Action creator that returns a function, which is only possible with redux-thunk.\n * \n * The function receives the store's dispatch method, which is then used to dispatch regular\n * synchronous actions inside the function's body once the asynchronous operations have been completed.\n * \n * The function removes user's work from localStorage, then dispatches a CLEAR_CURRENT_WORK action object.\n *\n * @return {Function} - a function that receives the store's dispatch method.\n * @member clearCurrentWorkToLocal\n * @function\n * @requires NPM:redux-thunk\n */\nexport function clearCurrentWorkFromLocal() {\n    return dispatch => {\n        window.localStorage.removeItem(process.env.REACT_APP_AUTOSAVE_LOCALSTORAGE)\n        dispatch(clearCurrentWork())\n        //console.log(\"portfolio work cleared\")\n    }\n}\n\n/**\n * FETCH_PORTFOLIOS_BEGIN action creator. This action sets boolean loading in Redux Store to true.\n * \n * @returns {{type: string}} - FETCH_PORTFOLIOS_BEGIN action object.\n * @member fetchPortfoliosBegin\n * @function\n */\nexport const fetchPortfoliosBegin = () => ({\n    type: FETCH_PORTFOLIOS_BEGIN\n})\n\n/**\n * FETCH_PORTFOLIOS_SUCCESS action creator. This action sets boolean loading in Redux Store to false.\n * Then saves the user's portfolios fetched from mongoDB to Redux Store.\n * \n * @param {Object} portfolios - response object containing user's portfolios.\n * @returns {{type: string, payload: Object}} - FETCH_PORTFOLIOS_SUCCESS action object.\n * @member fetchPortfoliosSuccess\n * @function\n */\nexport const fetchPortfoliosSuccess = portfolios => ({\n    type: FETCH_PORTFOLIOS_SUCCESS,\n    payload: { portfolios }\n})\n\n/**\n * FETCH_PORTFOLIOS_FAILURE action creator. This actions sets boolean loading in Redux Store to false.\n * Then sets err in Redux Store to error object obtaining from request failure.\n * \n * @param {Object} err - error object containing details about request failure.\n * @returns {{type: string, payload: Object}} = FETCH_PORTFOLIOS_FAILURE action object.\n * @member fetchPortfoliosFailure\n * @function\n */\nexport const fetchPortfoliosFailure = err => ({\n    type: FETCH_PORTFOLIOS_FAILURE,\n    payload: { err }\n})\n\n//Redux thunk allows dispatch actions that return a function. This function must take in user id\n/**\n * Action creator that returns a function, which is only possible with redux-thunk.\n * \n * The function receives the store's dispatch method, which is then used to dispatch regular\n * synchronous actions inside the function's body once the asynchronous operations have been completed.\n * \n * The function dispatches a FETCH_PORTFOLIOS_BEGIN action, then starts a GET request to obtain\n * a user's portfolio by its id. If the request succeeds, the function then dispatches a\n * FETCH_PORTFOLIOS_SUCCESS action. Otherwise, it dispatches a FETCH_PORTFOLIOS_FAILURE action.\n *\n * @param {string} id - id of user whose portfolios are to be fetched from mongoDB.\n * @return {Function} - a function that receives the store's dispatch method.\n * @member fetchPortfolios\n * @function\n * @requires NPM:redux-thunk\n */\nexport function fetchPortfolios(id) {\n    return dispatch => {\n        dispatch(fetchPortfoliosBegin());\n        return axios({\n            method: 'GET',\n            url: process.env.REACT_APP_BACKEND + \"/portfolio\",\n            withCredentials: true,\n            params: {\n                id: id\n            }\n        }).then(res => res.data)\n        .then(data => {\n            //TODO PROBABLY HAVE TO CONVERT DATA INTO AN ARRAY DEPENDING ON THE RESULT\n            if (data.portfolios !== undefined) {\n                dispatch(fetchPortfoliosSuccess(data.portfolios))\n            } \n        }).catch(err => dispatch(fetchPortfoliosFailure(err)))\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { log_out_user, repopulate_state } from '../actions/LoginAction';\nimport { clearCurrentWorkFromLocal } from '../actions/PortfolioAction';\nimport axios from 'axios';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Avatar, Box, Button, Divider, Drawer, Hidden } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\n\n/**\n * @file Home component serves as a welcome page to users and provides functionalities that allow\n * user's to login via Github Oauth.\n * \n * @author Chuan Hao\n * \n * @see Navbar\n */\n\n// TODO: clean up unused styles\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Navbar\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n    root: {\n      display: 'flex'\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginRight: theme.spacing(30),\n      width: `calc(100% - ${theme.spacing(30)})`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    homeButton: {\n      marginRight: 'auto',\n    },\n    homeButtonHidden: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerDiv: {\n        display: 'block',\n        justifyContent: 'center',\n        textAlign: 'center',\n        height: '100vh',\n    },\n    drawerPaper: {\n      whiteSpace: 'nowrap',\n      width: theme.spacing(30),\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(0),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(0),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n    hide: {\n        display: 'none'\n    },\n    expandedAvatar: {\n        marginTop: theme.spacing(5),\n        height: theme.spacing(20),\n        width: theme.spacing(20),\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    maxWidthButton: {\n        width: '100%',\n        borderRadius: '0px'\n    },\n    maxHeight: {\n        height: '100%',\n    },\n    flexDown: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    logoutButton: {\n      color: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: theme.palette.error.dark\n      }\n    },\n    dashboardButton: {\n      color: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: theme.palette.error.dark\n      }\n    }\n});\n\n\n/**\n * Navbar component for page navigation.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @component\n */\nclass Navbar extends Component {\n    /**\n     * @constructor\n     * fixes default fields in state\n     */\n    constructor() {\n        super();\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleUserMenu = this.handleUserMenu.bind(this);\n        this.state = {\n            menu_open: false,\n            user_drawer_open: false\n        }\n\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleReturnDashboard = this.handleReturnDashboard.bind(this);\n        this.handleUserMenu = this.handleUserMenu.bind(this);\n        this.handleReturnHome = this.handleReturnHome.bind(this);\n    }\n\n    /**\n     * Attempts to fetch user info to display in the component.\n     * \n     * @return void\n     * @memberof Navbar\n     */\n    async componentDidMount() {\n      if (!this.props.loggedIn) {\n        const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n        this.props.repopulate_state(localStorageItem)\n      }\n    }\n    \n    /**\n     * Logout function to clear cookies and invalidate the github authorization.\n     * \n     * @return void\n     * @memberof Navbar\n     */\n    async handleLogout() {\n        console.log(\"logging out\")\n        this.props.log_out_user()\n        this.props.clearCurrentWorkFromLocal();\n        localStorage.removeItem(process.env.REACT_APP_USER_LOCALSTORAGE)\n        console.log(\"successfully cleared localStorage\")\n        await axios({\n            method: 'GET',\n            url: process.env.REACT_APP_BACKEND + '/logout',\n            withCredentials: true\n        }).then(res => {\n            this.props.history.push(\"/\");\n        }).catch(err => {\n            console.log(err.message)\n        })\n    }\n\n    /**\n     * Function to return user to the Dashboard\n     * \n     * @return void\n     * @memberof Navbar\n     */\n    handleReturnDashboard() {\n      this.props.history.push(\"/dashboard\");\n      this.handleUserMenu();\n    }\n\n    /**\n     * Function to return user to the homepage.\n     * \n     * @return void\n     * @memberof Navbar\n     */\n    handleReturnHome() {\n      this.props.history.push(\"/\")\n      this.handleUserMenu();\n    }\n\n\n    /**\n     * Logout function to clear cookies and invalidate the github authorization.\n     * \n     * @return void\n     * @memberof Navbar\n     */\n    handleUserMenu() {\n        this.setState({user_drawer_open: !this.state.user_drawer_open});\n    }\n\n    render() {\n        const { loggedIn, name, id, avatar_url, gravatar_id, error } = this.props\n        \n        if (error) {\n            return <div>Error! {error.message}</div>\n        }\n        \n        const { classes } = this.props;\n\n        // CssBaseline gets the default body style and applies it (background colour etc.)\n        return (\n            <div className = {classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" \n                className={this.state.user_drawer_open \n                    ? `${classes.appBar} ${classes.appBarShift}` \n                    : classes.appBar}>\n                    <ToolBar className={classes.toolbar}>\n                        <Button className={classes.homeButton} onClick={this.handleReturnHome}>\n                          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" fontWeight=\"bold\" noWrap className={classes.title}>\n                              <Box fontWeight=\"bold\">Portfol.<span style={{color: \"#FF0000\"}}>io</span></Box>\n                          </Typography>\n                        </Button>\n                        <Button startIcon={<Avatar src={avatar_url}/>} \n                        onClick={this.handleUserMenu} \n                        className={loggedIn && !this.state.user_drawer_open ? \"\" : classes.hide }>\n                            {name}\n                        </Button>\n                    </ToolBar>\n                </AppBar>\n                <Drawer \n                    variant=\"temporary\"\n                    anchor=\"right\"  \n                    onBackdropClick={this.handleUserMenu}\n                    classes={{\n                        paper: this.state.user_drawer_open \n                        ? classes.drawerPaper \n                        : `${classes.drawerPaper} ${classes.drawerPaperClose}`\n                    }}\n                    open={this.state.user_drawer_open}\n                >\n                    <div className={classes.drawerDiv}>\n                        <Hidden xsDown>\n                            <Avatar src={avatar_url} className={classes.expandedAvatar}/>\n                        </Hidden>\n                        <Typography variant=\"h4\" className={classes.title}>\n                            {name}\n                        </Typography>\n                        <Divider/>\n                          <List className={classes.flexDown}>\n                            <Button onClick={this.handleLogout} fullWidth={true} className={classes.logoutButton}>\n                              LOGOUT\n                            </Button>\n                            <Button onClick={this.handleReturnDashboard} fullWidth={true} className={classes.dashboardButton}>\n                              DASHBOARD\n                            </Button>\n                        </List>\n                    </div>\n                </Drawer>\n                <div className={classes.appBarSpacer}/>\n            </div>\n        )\n    }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof EntryEditor\n */\nconst mapStateToProps = state => ({\n    loggedIn: state.login.loggedIn,\n    name: state.login.name,\n    id: state.login.id,\n    avatar_url: state.login.avatar_url,\n    gravatar_id: state.login.gravatar_id,\n    error: state.login.error\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof EntryEditor\n */\nconst mapDispatchToProps = {\n  log_out_user,\n  repopulate_state,\n  clearCurrentWorkFromLocal\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Navbar)))\n","export default __webpack_public_path__ + \"static/media/LiquidCrystal-Normal.f388bf69.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-Bold.c84b4328.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-Light.50eef454.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-BoldItalic.a30e37ed.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-ExBold.9d97e8f2.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-ExBoldItalic.de63aaa0.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-LightItalic.e3e9bde9.woff2\";","export default __webpack_public_path__ + \"static/media/LiquidCrystal-NormalItalic.615622e6.woff2\";","import LiquidCrystalNormal from './fonts/LiquidCrystal-Normal.woff2';\nimport LiquidCrystalBold from './fonts/LiquidCrystal-Bold.woff2';\nimport LiquidCrystalLight from './fonts/LiquidCrystal-Light.woff2';\nimport LiquidCrystalBoldItalic from './fonts/LiquidCrystal-BoldItalic.woff2';\nimport LiquidCrystalExBold from './fonts/LiquidCrystal-ExBold.woff2';\nimport LiquidCrystalExBoldItalic from './fonts/LiquidCrystal-ExBoldItalic.woff2';\nimport LiquidCrystalLightItalic from './fonts/LiquidCrystal-LightItalic.woff2';\nimport LiquidCrystalNormalItalic from './fonts/LiquidCrystal-NormalItalic.woff2';\n\n// styles.js currently imports everything, including the font name array. Might have unintended side effects\nexport const fonts = [\n  'Arial',\n  'Verdana',\n  'Helvetica',\n  'Tahoma',\n  'Trebuchet MS',\n  'Times New Roman',\n  'Georgia',\n  'Garamond',\n  'Courier New',\n  'Brush Script MT',\n  'LiquidCrystal'\n];\n/*\n * Other formats: 'woff2', 'truetype, 'opentype', 'embedded-opentype', and 'svg'\n * however material UI only supports ttf, woff2\n*/\nexport const liquidCrystalNormal = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 400,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-Normal'),\n  url(${LiquidCrystalNormal}) format('woff2')\n  `\n}\n\nexport const liquidCrystalNormalItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 400,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-NormalItalic'),\n  url(${LiquidCrystalNormalItalic}) format('woff2')\n  `\n}\n\nexport const liquidCrystalBold = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 500,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-Bold'),\n  url(${LiquidCrystalBold}) format('woff2')\n  `\n}\n\nexport const liquidCrystalLight = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 300,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-Light'),\n  url(${LiquidCrystalLight}) format('woff2')\n  `\n}\n\nexport const liquidCrystalLightItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 300,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-LightItalic'),\n  url(${LiquidCrystalLightItalic}) format('woff2')\n  `\n}\n\nexport const liquidCrystalBoldItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 500,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-BoldItalic'),\n  url(${LiquidCrystalBoldItalic}) format('woff2')\n  `\n}\n\nexport const liquidCrystalExBold = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 600,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-ExBold'),\n  url(${LiquidCrystalExBold}) format('woff2')\n  `\n}\n\nexport const liquidCrystalExBoldItalic = {\n  fontFamily: 'LiquidCrystal',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 600,\n  src: `\n  local('LiquidCrystal'),\n  local('LiquidCrystal-ExBoldItalic'),\n  url(${LiquidCrystalExBoldItalic}) format('woff2')\n  `\n}\n\n\n\n\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport * as fonts from './fonts';\n\n//visit here to see what to override \n//https://material-ui.com/customization/default-theme/\nexport const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        light: '#EEEEEE',\n        main: '#444444',\n        dark: '#222222',\n      },\n      secondary: {\n        light: '#ff4081',\n        main: '#f50057',\n        dark: '#c51162',\n        contrastText: '#fff'\n      },\n      error: {\n        light: '#e57373',\n        main: '#f44336',\n        dark: '#d32f2f',\n        contrastText: '#fff'\n      },\n      text: {\n        primary: 'rgba(255, 255, 255, 0.87)',\n        secondary: 'rgba(0, 0, 0, 0.87)'\n      }\n    },\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto'\n      ].join(',')\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          '@font-face': Object.values(fonts)\n        }\n      }\n    }\n  })\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction'\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, List, ListItem } from '@material-ui/core';\nimport { theme } from '../styles/styles';\n\n\n/**\n * @file Home component serves as a welcome page to users and provides functionalities that allow\n * user's to login via Github Oauth.\n * \n * @author Chuan Hao\n * \n * @see Home\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Home\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n    centeredDiv: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n    },\n    welcomeDiv: {\n        width: '100%',\n        height: '100vh',\n        backgroundImage: `url(\"${\"https://miro.medium.com/max/1100/1*OlgqUIhvl5-9dZISlZ2-yQ.jpeg\"}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    welcomeText: {\n        flexGrow: 1,\n\n    },\n    multiline: {\n        whiteSpace: 'pre-line',\n    },\n    portfolioIcon: {\n        width: '40vh',\n        height: '40vh',\n        borderRadius: '20vh',\n    },\n    featuresDiv: {\n        position: 'relative',\n        width: '100%',\n        height: '60vh',\n        flexDirection: 'row',\n    },\n    featureTextDiv: {\n        position: 'absolute',\n        top: 0,\n        right : 0,\n        width: '55vw',\n        height: '100%',\n        padding: '10%',\n    },\n    featureImgDiv: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '45vw',\n        height: '100%'\n    },\n    fullSize: {\n        width: '100%',\n        height: '100%',\n    },\n    floating: {\n        zIndex: 1,\n    },\n    featureButtonLeft: {\n        height: '100%',\n        position: 'absolute',\n        left: 0,\n    },\n    featureButtonRight: {\n        height: '100%',\n        position: 'absolute',\n        right: 0,\n    }\n});\n\n/** \n * Integer representing size of feature elements.\n * \n * @type {number} \n * @memberof Home\n */\nconst featureMaxIndex = 2;\n\n/** \n * Array of strings containing links/paths to images to be used in the features section.\n * \n * @type {Array.<string>} \n * @memberof Home\n */\nconst featureImage = [\n    'https://media.edutopia.org/styles/responsive_2000px_original/s3/masters/d7_images/cover_media/robinson-169hero-portfolio-shutterstock.jpg', \n    'https://assets-global.website-files.com/6009ec8cda7f305645c9d91b/603823eca4b46344229b30f8_portfolio_course.png', \n    'https://cdn-japantimes.com/wp-content/uploads/2020/06/np_file_16250.jpeg'\n];\n\n/** \n * Array of strings representing feature titles.\n * \n * @type {Array.<string>} \n * @memberof Home\n */\nconst featureTitle = [\n    'Your Design. Your Website.',\n    'Visualize your personality',\n    'Stay Ahead'\n];\n\n/** \n * Array of strings representing feature texts.\n * \n * @type {Array.<string>} \n * @memberof Home\n */\nconst featureText=[\n    'No watermarks, no restrictions — you own your website',\n    'Choose your style',\n    'Stay Relevant'\n];\n\n/** \n * Array of FAQ's represented as strings.\n * \n * @type {Array.<string>} \n * @memberof Home\n */\nconst faqQuestions=['FAQ1?', 'FAQ2?', 'FAQ3?'];\n\n/** \n * Array of FAQ answers corresponding to the questions represented as strings.\n * \n * @type {Array.<string>} \n * @memberof Home\n */\nconst faqAnswers=['yes\\nof\\ncourse', 'no', 'yes' ];\n\n/**\n * Home component of Portfolio.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @component\n */\nclass Home extends Component {\n\n    /**\n     * @constructor\n     */\n    constructor() {\n        super();\n        this.handleFeatureClick = this.handleFeatureClick.bind(this);\n        this.handleFeatureNext = this.handleFeatureNext.bind(this);\n        this.handleFeaturePrev = this.handleFeaturePrev.bind(this);\n\n        /**\n         * @typedef {Object} state\n         * @property {number} featureIndex - index of feature elements to be rendered.\n         * @property {number} featureTitle - string representing feature title.\n         * @property {string} featureText - string representing feature text.\n         * @property {string} featureImage - string representing url of feature image to be rendered.\n         * @memberof Home\n         */\n        this.state = {\n            featureIndex: 0,\n            featureText: featureText[0],\n            featureTitle: featureTitle[0],\n            featureImage: featureImage[0]\n        }\n    }\n\n    /**\n     * Attempts to fetch user details and logged in status from localStorage after component is rendered.\n     * \n     * @returns void\n     * @memberof Home\n     */\n    async componentDidMount() {\n        if (!this.props.loggedIn) {\n            const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n            this.props.repopulate_state(localStorageItem)\n        }\n    }\n\n    /**\n     * Changes feature title, text and image in state to be rendered on button click.\n     * \n     * @param {number} newIndex -Index of array elements to be rendered.\n     * @returns void\n     * @memberof Home\n     */\n    handleFeatureClick(newIndex) {\n        this.setState({\n            featureIndex: newIndex,\n            featureTitle: featureTitle[newIndex],\n            featureText: featureText[newIndex],\n            featureImage: featureImage[newIndex]\n        })\n    }\n\n    // TODO: merge handlers\n    /**\n     * Increments featureIndex by 1 or wraps around to 0 if featureIndex is equals to featureMaxIndex before increment.\n     * \n     * @returns void\n     * @memberof Home\n     */\n    handleFeatureNext() {\n        const newIndex = this.state.featureIndex === featureMaxIndex ? 0 : this.state.featureIndex + 1;\n        this.handleFeatureClick(newIndex);\n    }\n\n    /**\n     * Decrements featureIndex by 1 or wraps around to featureMaxIndex if featureIndex is equals to 0 before decrement.\n     * \n     * @returns void\n     * @memberof Home\n     */\n    handleFeaturePrev() {\n        const newIndex = this.state.featureIndex === 0 ? featureMaxIndex : this.state.featureIndex - 1;\n        this.handleFeatureClick(newIndex);\n    }\n\n    render() {\n        const { loggedIn, classes } = this.props;\n        return (\n            <div className = {classes.root}>\n                <CssBaseline/>\n                <div className={`${classes.welcomeDiv} ${classes.centeredDiv}`}>\n                    <img src={'https://blog.corp-site.envato.com/cdn-cgi/image/width=1200,quality=95,format=auto/uploads/2020/06/SOC101_Portfolio_Guide.png'} \n                    className={classes.portfolioIcon} alt={'Portfol.io icon'}></img>\n                    <Typography component=\"h1\" variant=\"h2\" color=\"inherit\" noWrap className={classes.title}>\n                        Welcome to Portfol.io\n                    </Typography>\n                    {/* must use \\n to make multiline */}\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" className={classes.multiline}>\n                        {\"Where dreams\\nturn\\ninto reality\"}\n                    </Typography>\n                    {loggedIn \n                        ?\n                        <Link to = '/dashboard'>You're logged in already! Lets go to dashboard</Link>\n                        :\n                        <Button \n                            href={`https://github.com/login/oauth/authorize?scope=repo&client_id=` + process.env.REACT_APP_CLIENT_ID} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >\n                            Login with Github\n                        </Button>\n                    }\n                    \n                </div>\n                <div className={`${classes.featuresDiv} ${classes.centeredDiv}`}>\n                    <Button onClick={this.handleFeaturePrev} className={`${classes.floating} ${classes.featureButtonLeft}`}>\n                        <FaChevronLeft/>\n                    </Button>\n                    <div className={classes.featureImgDiv}>\n                        <img src={this.state.featureImage} className={classes.fullSize} alt={`feature ${this.state.featureSection}`}></img>\n                    </div>\n                    <div className={`${classes.featureTextDiv} ${classes.centeredDiv}`}>\n                        <Typography component=\"h2\" variant=\"h2\" color=\"inherit\" noWrap className={classes.title}>\n                            {this.state.featureTitle}\n                        </Typography>\n                        <Typography component=\"h6\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            {this.state.featureText}\n                        </Typography>\n                    </div>\n                    <Button onClick={this.handleFeatureNext} className={`${classes.floating} ${classes.featureButtonRight}`}>\n                        <FaChevronRight/>\n                    </Button>\n                </div>\n                <div className={`${classes.faqDiv} ${classes.centeredDiv}`}>\n                    <List>\n                        <ListItem>\n                            {/*  */}\n                        </ListItem>\n                    </List>\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof Home\n */\nconst mapStateToProps = state => ({\n    loggedIn: state.login.loggedIn,\n    name: state.login.name,\n    id: state.login.id,\n    avatar_url: state.login.avatar_url,\n    gravatar_id: state.login.gravatar_id,\n    error: state.login.error\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof Home\n */\nconst mapDispatchToProps = {\n    repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { log_in_user, repopulate_state } from '../actions/LoginAction';\nimport { fetchPortfolios } from '../actions/PortfolioAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BeatLoader } from 'react-spinners';\n/**\n * @file LoginResult component serves as the endpoint of Github authorization request and also\n * provides visual loading display when Github authorization is in progress.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @see LoginResult\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof LoginResult\n * @param {Object} theme \n */\n const styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'start',\n        alignItems: 'center'\n    },\n    appBarSpacer: theme.mixins.toolbar\n});\n\n/**\n * Component that displays loading animation while Github authentication occurs.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @component\n */\nclass LoginResult extends Component {\n    \n    /**\n     * If user is logged in already, the user will be redirected to Dashboard. \n     * \n     * Otherwise, an attempt will be made to fetch user details and logged in status from localStorage after component is rendered.\n     * \n     * If user's logged in status is Undefined, an attempt will be made to authenticate the user. Otherwise, he will\n     * also be redirected to Dashboard.\n     *\n     * @return void\n     * @memberof LoginResult\n     */\n    async componentDidMount() {\n\n        //If user is not loggedIn already\n        if (!this.props.loggedIn) {\n            //Check if loggedIn user might have accidentally refreshed into this url\n            const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n            //If localStorage returns null, user is not loggedIn, proceed to login\n            if (localStorageItem == null) {\n                let search = window.location.search;\n                let params = new URLSearchParams(search);\n                let ghCode = params.get('code');\n\n                if (ghCode !== \"\") {\n                    axios({\n                        method: \"POST\",\n                        url: `${process.env.REACT_APP_BACKEND}/login/authenticate`,\n                        withCredentials: true,\n                        responseType: 'json',\n                        data: {\n                            code: ghCode\n                        }\n                    }).then(res => res.data)\n                    .then(data => {\n                        /** For setting to localStorage, chose not to just dump entire redux state here because\n                         * we may want to only save certain data to localStorage\n                         */\n                        const forLocalStorage = {\n                            loggedIn: true,\n                            name: data.name,\n                            id: data.id,\n                            avatar_url: data.avatar_url,\n                            gravatar_id: data.gravatar_id\n                        }\n                        window.localStorage.setItem(process.env.REACT_APP_USER_LOCALSTORAGE, JSON.stringify(forLocalStorage))\n                        /**TODO: Implement IDEA => need to create a route that fetches user's portfolios' names and images only. We store this\n                         * in localStorage just like we did user peripherals.\n                         * In the dashboard, only when we click on the portfolio to be worked on. Then we fetch the actual portfolios themselves,\n                         * In the template editor, when the user is working on the portfolio, we will save his current work to localStorage in intervals\n                         * \n                         * When user leaves the template editor, we save his current work to the mongodb database,\n                         * then wipe the localStorage of the current portfolio's work.\n                         */\n                        this.props.fetchPortfolios(data.id)\n                        this.props.log_in_user(data)\n                    }).catch(err => {\n                        console.log(err.message);\n                    })\n                } else {\n                    console.log(\"gh code missing\");\n                }\n            } else { //If localStorage does return an item, then user is already logged in\n                this.props.repopulate_state(localStorageItem)\n            }\n        }\n        \n    }\n\n    render() {\n        const { loggedIn, classes } = this.props\n        if (loggedIn) {\n            return (\n                <Redirect to = '/dashboard'></Redirect>\n            )\n        } else {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.appBarSpacer}/>\n                    <BeatLoader></BeatLoader>\n                </div>\n            )\n        }\n        \n    }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof LoginResult\n */\nconst mapStateToProps = state => ({\n    loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof LoginResult\n */\nconst mapDispatchToProps = {\n    log_in_user,\n    repopulate_state,\n    fetchPortfolios\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginResult))","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { fetchPortfolios, saveCurrentWorkToLocal, clearCurrentWorkFromLocal } from '../actions/PortfolioAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withRouter } from 'react-router-dom';\nimport { BeatLoader } from 'react-spinners';\nimport { FaRegEdit } from 'react-icons/fa';\nimport FormData from 'form-data';\n\n/**\n * @file Dashboard component displays previews of the user's portfolios and offers \n * functionalities that allow creation of new user portfolios.\n * \n * @author Chen En\n * @author Chuan Hao\n * \n * @see Dashboard\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Dashboard\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'start',\n        alignItems: 'center'\n    },\n    portfolioButton: {\n        variant: 'contained',\n        size: 'small',\n        color: 'primary'\n    },\n    cardRoot: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    cardDetails: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    cardControls: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    cardMedia: {\n        width: 151,\n        height: 151,\n    },\n    appBarSpacer: theme.mixins.toolbar\n});\n\n/**\n * The dashboard logged in users will use to navigate the page\n * \n * @component\n */\nclass Dashboard extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nameDialogState: false,\n            portfolioName: \"MyPortfolio\",\n            duplicateKeyError: false,\n            duplicateKeyHelperText: \"\",\n            anchorEl: null,\n            currentPortfolio_Id: \"\",\n            deleteDialogState: false,\n            changeNameDialogState: false,\n            changedName: \"\",\n            images: {},\n            defaultPreviewSrc: \"https://cdn.dribbble.com/users/200733/screenshots/15094543/media/fb4bf141f17b05df82f77926d94ccd6d.png\"\n        }\n\n        this.handleAddPortfolio = this.handleAddPortfolio.bind(this);\n        this.handleOpenPortfolio = this.handleOpenPortfolio.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.handleNameDialogClose = this.handleNameDialogClose.bind(this);\n        this.handleNameDialogOpen = this.handleNameDialogOpen.bind(this);\n        this.handleDeletePortfolio = this.handleDeletePortfolio.bind(this);\n        this.handleOpenEditMenu = this.handleOpenEditMenu.bind(this);\n        this.handleCloseEditMenu = this.handleCloseEditMenu.bind(this);\n        this.handleDeleteDialogState = this.handleDeleteDialogState.bind(this);\n        this.handleChangeNameDialogState = this.handleChangeNameDialogState.bind(this);\n        this.handleChangePortfolioName = this.handleChangePortfolioName.bind(this);\n        this.handleGetImage = this.handleGetImage.bind(this);\n        this.handleDeleteImage = this.handleDeleteImage.bind(this);\n        this.testGithubPageStatus = this.testGithubPageStatus.bind(this);\n    }\n\n    /**\n     * Attempts to fetch user details and logged in status from localStorage after component is rendered.\n     * \n     * repopulateState takes a while to run, so it is necessary to await it, then fetchPortfolios again.\n     * \n     * @return void\n     * @memberof Dashboard\n     */\n    async componentDidMount() {\n        if (!this.props.loggedIn) {\n            const localStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE));\n            await this.props.repopulate_state(localStorageItem);\n        }\n        await this.props.fetchPortfolios(this.props.id);\n        \n        this.props.portfolios.map(portfolio => this.handleGetImage(portfolio._id));\n    }\n\n    /**\n     * Testing purposes only\n     * \n     * @param {*} e unused\n     * @ignore\n     */\n    checkCookie(e) {\n        console.log('testing cookie');\n        axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BACKEND + '/portfolio/status',\n            withCredentials: true\n        }).then(res => {\n            console.log(\"authorized\")\n            console.log(res.data)\n        });\n    }\n\n    handleOnChange(event) {\n        this.setState({\n            duplicateKeyError: false,\n            duplicateKeyHelperText: \"\"\n        })\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleNameDialogOpen() {\n        this.setState({\n            nameDialogState: true\n        })\n    }\n\n    handleNameDialogClose() {\n        this.setState({\n            nameDialogState: false\n        })\n    }\n\n    /**\n     * This function handles changes to deleteDialogState\n     *\n     * @param {boolean} bool\n     * @returns void\n     * @memberof Portfolio\n     */\n    handleDeleteDialogState(bool) {\n        if (bool) {\n            this.handleCloseEditMenu();\n        } else {\n            //after closing dialog, need to reset error, error text and the relevant text field\n            this.setState({\n                portfolioName: \"\",\n                duplicateKeyError: false,\n                duplicateKeyHelperText: \"\"\n            })\n        }\n        this.setState({\n            deleteDialogState: bool\n        })\n    }\n\n    /**\n     * Changes route to /edit to render a fresh Portfolio creation screen.\n     * \n     * @return void\n     * @memberof Dashboard\n     */\n    handleAddPortfolio() {\n        if (this.state.portfolioName === \"\") {\n            this.setState({\n                duplicateKeyError: true,\n                duplicateKeyHelperText: \"Portfolio name cannot be empty\"\n            })\n        } else {\n            if (this.props.portfolios.filter(portfolio => portfolio.name === this.state.portfolioName).length === 0) {\n                //This clears current work from local, so we need to arrest the screen whenever user attempts to leave a portfolio\n                //page and remind him to save before leaving.\n                this.props.clearCurrentWorkFromLocal();\n\n                const portfolio = {\n                    _id: undefined,\n                    name: this.state.portfolioName,\n                    pages: undefined\n                }\n\n                this.props.saveCurrentWorkToLocal(portfolio);\n                this.props.history.push(\"/edit\");\n            } else {\n                this.setState({\n                    duplicateKeyError: true,\n                    duplicateKeyHelperText: \"Portfolio name already exists\"\n                })\n            }\n        }\n        \n    }\n\n    /**\n     * Fetches the requested portfolio from mongoDB, then saves it to redux state.\n     * Then changes route to /edit to render the Portfolio.\n     * \n     * @return void\n     * @memberof Dashboard\n     */\n    async handleOpenPortfolio(event) {\n\n        const id = event.currentTarget.id;\n\n        await axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/\" + id,\n            withCredentials: true\n        }).then(async res => {\n            console.log(`portfolio ${res.data.portfolio.name} fetched`);\n            //Need to wait for portfolio to be saved to localStorage before changing route\n            //Since the website is public anyways, portfolio data is meant to be public and thus not considered sensitive.\n            //LocalStorage is suitable to store portfolio data.\n            await this.props.saveCurrentWorkToLocal(res.data.portfolio);\n\n            this.props.history.push(\"/edit\");\n        }).catch(err => {\n            if (err.response) {\n                console.log(err.response.data);\n            } else {\n                console.log(err.message);\n            }\n        });\n    }\n\n        /**\n     * A function to delete the current portfolio from mongodb\n     *\n     * @returns void\n     * @memberof Portfolio\n     */\n    async handleDeletePortfolio() {\n        await axios({\n            method: \"DELETE\",\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/delete/\" + this.state.currentPortfolio_Id,\n            withCredentials: true\n        }).then(async res => {\n            console.log(res.data.message);\n            await this.props.fetchPortfolios(this.props.id);\n\n            //deletes all images related to said portfolio\n            for (let key of Object.keys(this.state.images[this.state.currentPortfolio_Id])) {\n                await this.handleDeleteImage(key);\n            }\n\n            const temp = this.state.images;\n            delete temp[this.state.currentPortfolio_Id];\n            this.setState({\n                images: temp\n            })\n\n        }).catch(err => {\n            if (err.response) {\n            console.log(err.response.data);\n            } else {\n            console.log(err.message);\n            }\n        })\n\n        this.handleDeleteDialogState(false);\n    }\n\n    handleOpenEditMenu(event) {\n        this.setState({\n            anchorEl: event.currentTarget,\n            currentPortfolio_Id: event.currentTarget.id\n        })\n    }\n\n    handleCloseEditMenu() {\n        this.setState({\n            anchorEl: null\n        })\n    }\n\n    handleChangeNameDialogState(bool) {\n        if (bool) {\n            this.handleCloseEditMenu();\n        } else {\n            //after closing dialog, need to reset error, error text and the relevant text field\n            this.setState({\n                changedName: \"\",\n                duplicateKeyError: false,\n                duplicateKeyHelperText: \"\"\n            })\n        }\n\n        this.setState({\n            changeNameDialogState: bool\n        });\n    }\n\n    //currentPortfolio_Id will be set to the _id of the selected portfolio when menu is opened, so once in the dialog,\n    //currentPortfolio_Id will be the correct one.\n    async handleChangePortfolioName() {\n        if (this.state.changedName === \"\") {\n            this.setState({\n                duplicateKeyError: true,\n                duplicateKeyHelperText: \"Portfolio name cannot be empty\"\n            })\n        } else {\n            if (this.props.portfolios.filter(portfolio => portfolio.name === this.state.changedName).length === 0) {\n                const originalPortfolio = this.props.portfolios.find(element => element._id === this.state.currentPortfolio_Id);\n                const changedPortfolio = {...originalPortfolio};\n                changedPortfolio.name = this.state.changedName;\n                await axios({\n                    method: \"PUT\",\n                    url: process.env.REACT_APP_BACKEND + \"/portfolio/updatePortfolio\",\n                    withCredentials: true,\n                    data: {\n                        portfolio: changedPortfolio\n                    }\n                }).then(res => {\n                    console.log(res.data.message);\n                }).catch(err => {\n                    if (err.response) {\n                        console.log(err.response.data);\n                    } else {\n                        console.log(err.message);\n                    }\n                })\n\n                await this.props.fetchPortfolios(this.props.id);\n                this.handleChangeNameDialogState(false);\n\n            } else {\n                this.setState({\n                    duplicateKeyError: true,\n                    duplicateKeyHelperText: \"Portfolio name already exists\"\n                })\n            }\n        }\n        \n    }\n\n    //If wish to test, please change the hardcoded _id with one from one of your portfolio documents.\n    async handleGetImage(portfolio_id) {\n        await axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/getImageRefs/\" + portfolio_id,\n            withCredentials: true\n        }).then(async res => {\n            console.log(res.data.message);\n            const imageRefs = res.data.images;\n            const images = this.state.images;\n            for (let imageRef of imageRefs) {\n                await axios({\n                    method: \"GET\",\n                    url: process.env.REACT_APP_BACKEND + \"/portfolio/getImage/\" + portfolio_id,\n                    withCredentials: true,\n                    responseType: 'blob',\n                    params: {\n                        label: imageRef.label\n                    }\n                }).then(res => {\n                    console.log(`image ${imageRef.label} fetched`);\n                    const temp = {};\n                    temp[imageRef.label] = URL.createObjectURL(res.data);\n                    images[portfolio_id] = temp;\n                }).catch(err => {\n                    if (err.response) {\n                        console.log(err.response.data);\n                    } else {\n                        console.log(err.message);\n                    }\n                })\n            }\n\n            this.setState({\n                images: images\n            });\n        }).catch(err => {\n            if (err.response) {\n                console.log(err.response.data);\n            } else {\n                console.log(err.message);\n            }\n        });\n    }\n\n    async handleDeleteImage(label) {\n        await axios({\n            method: \"DELETE\",\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/deleteImage/\" + this.state.currentPortfolio_Id,\n            withCredentials: true,\n            data: {\n                label: label\n            }\n        }).then(res => {\n            console.log(res.data.message);\n            const temp = this.state.images\n            const tempPortfolioImages = temp[this.state.currentPortfolio_Id];\n            if (tempPortfolioImages !== undefined) {\n                delete tempPortfolioImages[label];\n                this.setState({\n                    images: temp\n                });\n            }\n        }).catch(err => {\n            if (err.response) {\n                console.log(err.response.data);\n            } else {\n                console.log(err.message);\n            }\n        });\n    }\n\n    async testGithubPageStatus(repo) {\n        await axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/pageStatus\",\n            withCredentials: true,\n            params: {\n                repo: repo\n            }\n        }).then(res => {\n            console.log(res.data.status);\n            console.log(res.data.url);\n        }).catch(err => {\n            if (err.response) {\n                console.log(err.response.data);\n            } else {\n                console.log(err.message);\n            }\n        })\n    }\n\n\n    render() {\n        const { name, portfolios, classes } = this.props\n        return (\n            <div className={classes.root}>\n                <div className={classes.appBarSpacer}/>\n                <Typography variant=\"h2\" component=\"h3\">Here is your dashboard {name}!</Typography>\n                <Grid container direction='row' justify='center' alignItems='center'>\n                    {\n                        this.props.loading \n                        ?\n                            <BeatLoader/>\n                        :\n                        this.props.error\n                            ?\n                                this.props.error.response.status === 404\n                                ?\n                                    <Typography variant=\"h6\">Create your first Portfolio!</Typography>\n                                :\n                                    <Typography variant=\"h6\">{this.props.error.message}</Typography>\n                            :\n                                portfolios.length === 0\n                                    ?\n                                        <Typography variant=\"h6\">Oops. It appears that you have no saved Portfolios</Typography>\n                                    :\n                                        portfolios.map((element, idx) => {\n                                            return (\n                                                <Card \n                                                    className={classes.cardRoot}\n                                                    key={idx} \n                                                >\n                                                    <div className={classes.cardDetails}>\n                                                        <CardContent>\n                                                            <Typography component=\"h5\" variant=\"h5\">{element.name}</Typography>\n                                                        </CardContent>\n                                                        <CardActions className={classes.cardControls}>\n                                                            <Button\n                                                                id={element._id}\n                                                                className={classes.portfolioButton}\n                                                                aria-controls=\"edit-menu\"\n                                                                aria-haspopup=\"true\"\n                                                                onClick={this.handleOpenEditMenu}\n                                                            >\n                                                                <FaRegEdit/>\n                                                            </Button>\n                                                            <span style={{width: \"15vh\"}}/>\n                                                            <Button \n                                                                id={element._id}  \n                                                                className={classes.portfolioButton}\n                                                                onClick={this.handleOpenPortfolio}\n                                                            >\n                                                                Open\n                                                            </Button>\n                                                        </CardActions>\n                                                    </div>\n                                                    \n                                                    <CardMedia\n                                                        component=\"img\"\n                                                        className={classes.cardMedia}\n                                                        height='150'\n                                                        width= '150'\n                                                        src= {this.state.images[element._id] === undefined\n                                                            ?\n                                                                this.state.defaultPreviewSrc\n                                                            :\n                                                                this.state.images[element._id][\"preview\"] === undefined\n                                                                ?\n                                                                    this.state.defaultPreviewSrc\n                                                                :\n                                                                    this.state.images[element._id][\"preview\"]\n                                                        }\n                                                    />\n                                                </Card>\n                                                \n                                            );\n                                        })\n                    }\n                </Grid>\n                {/* <Button onClick={this.checkCookie} className={classes.portfolioButton}>Check Cookie</Button> */}\n                <Button onClick={this.handleNameDialogOpen} className={classes.portfolioButton}>Add a Portfolio</Button>\n                <Button onClick={() => this.testGithubPageStatus(\"testShit\")} className={classes.portfolioButton}>Test Page Status</Button>\n                \n                <Menu\n                    id=\"edit-menu\"\n                    anchorEl={this.state.anchorEl}\n                    style={{display: 'inline-block'}}\n                    keepMounted\n                    open={Boolean(this.state.anchorEl)}\n                    onClose={this.handleCloseEditMenu}\n                    getContentAnchorEl={null}\n                    anchorOrigin={{vertical: 'center', horizontal: 'left'}}\n                    transformOrigin={{vertical: 'center', horizontal: 'left'}}\n                >\n                    <MenuItem style={{display: 'inline'}} onClick={() => this.handleDeleteDialogState(true)}>Delete</MenuItem>\n                    <MenuItem style={{display: 'inline'}} onClick={() => this.handleChangeNameDialogState(true)}>Change Name</MenuItem>\n                </Menu>\n                <Dialog\n                    open={this.state.nameDialogState}\n                    onClose={this.handleNameDialogClose}\n                    aria-labelledby=\"portfolio name dialog\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"portfolio-name-dialog-title\">\n                        Portfolio Name\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Set your Portfolio name here.\n                        </DialogContentText>\n                        <TextField\n                            name=\"portfolioName\"\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Portfolio Name\"\n                            type=\"string\"\n                            defaultValue={this.state.portfolioName}\n                            fullWidth\n                            onChange={this.handleOnChange}\n                            InputLabelProps={{\n                                style: {color: \"whitesmoke\"},\n                            }}\n                            InputProps={{\n                                color: 'secondary'\n                            }}\n                            error={this.state.duplicateKeyError}\n                            helperText={this.state.duplicateKeyHelperText}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={this.handleNameDialogClose}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            onClick={this.handleAddPortfolio}\n                        >\n                            Set Name\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.deleteDialogState}\n                    onClose={() => this.handleDeleteDialogState(false)}\n                    aria-labelledby=\"delete-confirmation-dialog\"\n                    aria-describedby=\"delete-confirmation-dialog\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"delete-confirmation-title\">Delete Portfolio Confirmation</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"delete-confirmation-description\" style={{ color: \"white\" }}>\n                                Are you sure you want to delete this Portfolio? This action is irreversible and your portfolio will be deleted permanently.\n                            </DialogContentText>\n                        </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.handleDeleteDialogState(false)}>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeletePortfolio}>\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeNameDialogState}\n                    onClose={() => this.handleChangeNameDialogState(false)}\n                    aria-labelledby=\"change-name-dialog\"\n                    aria-describedby=\"change-name-dialog\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"change-name-dialog-title\">Change Portfolio Name</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Type your new portfolio name here.\n                            </DialogContentText>\n                            <TextField\n                                name=\"changedName\"\n                                autoFocus\n                                margin=\"dense\"\n                                label=\"New Portfolio Name\"\n                                type=\"string\"\n                                defaultValue={this.state.changedName}\n                                fullWidth\n                                onChange={this.handleOnChange}\n                                InputLabelProps={{\n                                    style: {color: \"whitesmoke\"},\n                                }}\n                                InputProps={{\n                                    color: 'secondary'\n                                }}\n                                error={this.state.duplicateKeyError}\n                                helperText={this.state.duplicateKeyHelperText}\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => this.handleChangeNameDialogState(false)}>\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleChangePortfolioName}>\n                                Change\n                            </Button>\n                        </DialogActions>\n                </Dialog>\n            </div>\n\n        )\n    }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof Dashboard\n */\nconst mapStateToProps = state => ({\n    loggedIn: state.login.loggedIn,\n    name: state.login.name,\n    id: state.login.id,\n    portfolios: state.portfolio.portfolios,\n    loading: state.portfolio.loading,\n    error: state.portfolio.error\n});\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof Dashboard\n */\nconst mapDispatchToProps = {\n    repopulate_state,\n    fetchPortfolios,\n    saveCurrentWorkToLocal,\n    clearCurrentWorkFromLocal\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Dashboard)));\n","import * as aiIcons from 'react-icons/ai'\nimport * as bsIcons from 'react-icons/bs'\nimport * as biIcons from 'react-icons/bi'\nimport * as diIcons from 'react-icons/di'\nimport * as fiIcons from 'react-icons/fi'\nimport * as fcIcons from 'react-icons/fc'\nimport * as faIcons from 'react-icons/fa'\nimport * as giIcons from 'react-icons/gi'\nimport * as goIcons from 'react-icons/go'\nimport * as grIcons from 'react-icons/gr'\nimport * as hiIcons from 'react-icons/hi'\nimport * as imIcons from 'react-icons/im'\nimport * as ioIcons from 'react-icons/io'\nimport * as io5Icons from 'react-icons/io5'\nimport * as mdIcons from 'react-icons/md'\nimport * as riIcons from 'react-icons/ri'\nimport * as siIcons from 'react-icons/si'\nimport * as tiIcons from 'react-icons/ti'\nimport * as vscIcons from 'react-icons/vsc'\nimport * as wiIcons from 'react-icons/wi'\nimport * as cgIcons from 'react-icons/cg'\n\nexport const ai = {label:'Ant Design',icons:aiIcons}\nexport const bs = {label:'Bootstrap',icons:bsIcons}\nexport const bi = {label:'BoxIcons',icons:biIcons}\nexport const di = {label:'Devicons',icons:diIcons}\nexport const fi = {label:'Feather',icons:fiIcons}\nexport const fc = {label:'Flat Color',icons:fcIcons}\nexport const fa = {label:'Font Awesome',icons:faIcons}\nexport const gi = {label:'Game Icons',icons:giIcons}\nexport const go = {label:'Github Octicons',icons:goIcons}\nexport const gr = {label:'Grommet',icons:grIcons}\nexport const hi = {label:'Heroicons',icons:hiIcons}\nexport const im = {label:'IcoMoon',icons:imIcons}\nexport const io = {label:'Ionicons 4',icons:ioIcons}\nexport const io5 = {label:'Ionicons 5',icons:io5Icons}\nexport const md = {label:'Materal Design',icons:mdIcons}\nexport const ri = {label:'Remix',icons:riIcons}\nexport const si = {label:'Simple',icons:siIcons}\nexport const ti = {label:'Typicons',icons:tiIcons}\nexport const vsc = {label:'VS Code',icons:vscIcons}\nexport const wi = {label:'Weather',icons:wiIcons}\nexport const cg = {label:'css.gg',icons:cgIcons}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, TextField, Typography, Modal, Input, Fab, MenuList, MenuItem, Menu, Tab, Tabs } from '@material-ui/core';\nimport { FaPlus, FaTrashAlt, FaChevronLeft, FaChevronRight, FaSave, FaTimes, FaEdit } from \"react-icons/fa\";\nimport { fonts } from '../styles/fonts';\nimport * as icons from '../styles/icons';\n\n/**\n * @file EntryEditor component to provide a user interface for users to style their entries\n * \n * @author Chuan Hao\n * \n * @see EntryEditor\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof EntryEditor\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '5%',\n    textAlign: 'center',\n    backgroundColor: '#444444',\n    opacity: '90%'\n  },\n  modal: {\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '1%',\n  },\n  floating: {\n    margin: 0,\n    top: 'auto',\n    left: 'auto',\n    bottom: '8%',\n    right: '5%',\n    position: 'fixed',\n    textAlign: 'center'\n  },\n  textGrid: {\n    margin: '1vw',\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 200px)'\n  },\n  imgGrid: {\n    margin: '1vw',\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 150px)'\n  },\n  imgPreview: {\n    width: '5vw',\n    height: '5vw'\n  },\n  sectionDiv: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 'auto'\n  },\n  div: {\n    padding: '10px'\n  },\n  rowDiv: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'auto',\n  },\n  colDiv: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  styleDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflow: 'auto'\n  },\n  addSectionSpacer: {\n    height: theme.spacing(5)\n  },\n  ctrlDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 'auto',\n    marginLeft: 'auto'\n  },\n  editFAB: {\n    position: 'absolute',\n    marginTop: '2vw',\n    marginLeft: '2vw'\n  },\n  gridDiv: {\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 250px)',\n    gridGap: '10px',\n    justifyContent: 'center',\n    height: '80%',\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n  svgIcon: {\n    width: 100,\n    height: 100\n  }\n})\n\n/**\n * The dashboard logged in users will use to navigate the page.\n * \n * @component\n * @example\n * const fields = {\n *   width: \"50%\", \n *   height: \"50%\", \n *   fonts: {titleFont: \"title font\"},\n *   colours: {primary: \"#FF0000\", secondary: \"#FFFF00\"},\n *   images: {dp: \"\",bg: \"\"},\n *   texts: {name: \"\",status: \"\"},\n *   sections: []\n * }\n * const info = {\n *   fonts: {titleFont: {label: \"title font\"}},\n *   colours: {primary: {label: \"primary\"},secondary: {label: \"secondary\"}},\n *   images: {dp: {label: \"Your portrait photo\", allowColour: false}, bg: {label: \"Entry background\", allowColour: true}},\n *   texts: {name: {label: \"Your full name\"}, status: {label: \"your current position\"}},\n *   sections: {label: \"Add a work experience\", \n *     entryFormat: { \n *       images: {picture:{label: \"Add a photo\"}}, \n *       texts: {title: {label: \"Add a title\"}, body: {label: \"Describe your experience\"}}\n *     },\n *     defaultEntry: {images: {picture:{value: \"\"}},texts: {title: {value: \"\"},body: {value: \"\"}}},\n *     enabled: true\n *   }\n * }\n * return (<EntryEditor fields={fields} info={info} onChange=true/>)\n */\nclass EntryEditor extends Component {\n  // TODO: check if componenetDidMount can overwrite constructor\n\n  /**\n   * Populates state with fields passed in as attribute fields.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    const copied_fields = JSON.parse(JSON.stringify(this.props.fields));\n    this.state = {\n      data: copied_fields,\n      currentSection: 0,\n      showEditor: false,\n      anchorEl: null,\n      showIcon: false,\n      iconCategory: 'ai'\n    }\n    this.handleCreateEntry = this.handleCreateEntry.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleImageUpload = this.handleImageUpload.bind(this);\n    this.handleEditSectionText = this.handleEditSectionText.bind(this);\n    this.handleSectionView = this.handleSectionView.bind(this);\n    this.handleCloseEditor = this.handleCloseEditor.bind(this);\n    this.handleShowEditor = this.handleShowEditor.bind(this);\n    this.handleFontMenu = this.handleFontMenu.bind(this);\n    this.handleIconSelect = this.handleIconSelect.bind(this);\n    this.createImageControl = this.createImageControl.bind(this);\n  }\n\n  /**\n   * Displays the editor and resets state fields since react does not call constructor again\n   * \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleShowEditor() {\n    const copied_fields = JSON.parse(JSON.stringify(this.props.fields));\n    this.setState({\n      data: copied_fields,\n      currentSection: 0,\n      showEditor: true\n    })\n  }\n\n  // TODO: elements read from state instead of props\n  // TODO: unbounded mongo models\n  /**\n   * Attempts to fetch entry details where possible so settings are saved.\n   * \n   * @return void\n   * @memberof EntryEditor\n   */\n  componentDidMount() {\n    // is this necessary if template is a widget\n    if (!this.props.loggedIn) {\n      const localStorageItem = JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      this.props.repopulate_state(localStorageItem)\n    }\n  }\n\n  /**\n   * Event handler for text fields. \n   * Text fields should be named after their keys in the state.\n   * \n   * @param {*} event \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleChange(event, category) {\n    console.log(event)\n    if (category === \"\") {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [event.target.name]: event.target.value\n        }\n      });\n    } else {\n      const originalCat = { ...this.state.data[category] };\n      originalCat[event.target.name] = event.target.value;\n      this.setState({\n        data: {\n          ...this.state.data,\n          [category]: originalCat\n        }\n      });\n    }\n  }\n\n  // TODO: implement file upload logic. possibly save disk reference/localStorage for efficiency\n  /**\n   * Event handler for text fields. \n   * Text fields should be named after their keys in the state.\n   * \n   * @param {*} event \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleImageUpload(event, sectionIndex) {\n    // TODO: Open a upload dialog\n    const freader = new FileReader();\n    freader.readAsDataURL(event.target.files[0]);\n    freader.onloadend = (e) => {\n      if (sectionIndex === undefined) {\n        this.setState({\n          data: {\n            ...this.state.data,\n            images: {\n              ...this.state.data.images,\n              [event.target.name]: {\n                src: e.target.result,\n                format: this.state.data.images[event.target.name].format\n              }\n            }\n          }\n        })\n      } else {\n        const newSections = [...this.state.data.sections];\n        // TODO: create deep copy, mutating .src currently mutates original array elements\n        newSections[this.state.currentSection].images[event.target.name].src = e.target.result;\n        this.setState({\n          data: {\n            ...this.state.data,\n            sections: newSections\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Event handler for deletion of sub sections.\n   * \n   * @param {*} event \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleDeleteSection(event) {\n    const spliced = this.state.data.sections.filter((item, filterIndex) => filterIndex !== this.state.currentSection);\n    this.setState({\n      data: {\n        ...this.state.data,\n        sections: spliced\n      }\n    })\n  }\n\n  /**\n   * Event handler for entry addition. \n   * Entry will be given default fields specified in the info attribute.\n   * \n   * @return void\n   * @memberof EntryEditor\n   */\n  handleCreateEntry() {\n    // JSON used for deep copy\n    const copy = JSON.parse(JSON.stringify(this.props.info.sections.defaultEntry));\n    this.setState({\n      data: {\n        ...this.state.data,\n        sections: [...this.state.data.sections, copy]\n      }\n    });\n  }\n\n  /**\n   * Event handler for editing sub sections.\n   * \n   * @param {*} event\n   * @param {Number} index - the index of the section to be edited\n   * @return void\n   * @memberof EntryEditor\n   */\n  handleEditSectionText(event) {\n    const newSections = [...this.state.data.sections];\n    newSections[this.state.currentSection].texts[event.target.name] = event.target.value;\n    this.setState({\n      data: {\n        ...this.state.data,\n        sections: newSections\n      }\n    });\n  }\n\n  /**\n   * Event handler to cycle through sub sections\n   * @param {*} event \n   */\n  handleSectionView(modifier) {\n    let nextSection = this.state.currentSection + modifier;\n    if (nextSection < 0) {\n      nextSection = this.state.data.sections.length;\n    } else if (nextSection > this.state.data.sections.length) {\n      nextSection = 0;\n    }\n    this.setState({\n      currentSection: nextSection\n    })\n  }\n\n  handleCloseEditor(save) {\n    if (save) {\n      this.props.onClose(this.state.data, true);\n    } else {\n      this.props.onClose(null, false);\n    }\n    this.setState({\n      showEditor: false\n    })\n  }\n\n  handleFontMenu(event) {\n    this.setState({\n      anchorEl: event.currentTarget\n    })\n  }\n\n  handleUpdateFont(field, font) {\n    this.setState({\n      data: {\n        ...this.state.data,\n        fonts: {\n          ...this.state.data.fonts,\n          [field]: font\n        }\n      },\n      anchorEl: null\n    })\n  }\n\n  handleIconSelect(key, newValue, section) {\n    console.log(key);\n    console.log(newValue);\n    if (!section) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          images: {\n            ...this.state.data.images,\n            [key]: {\n              src: newValue,\n              format: 'icon'\n            }\n          }\n        },\n        showIcon: false\n      })\n    } else {\n      const newSections = [...this.state.data.sections];\n      // TODO: create deep copy, mutating .src currently mutates original array elements\n      console.log(key);\n      console.log(newValue)\n      newSections[this.state.currentSection].images[key].src = newValue;\n      newSections[this.state.currentSection].images[key].format = 'icon';\n      this.setState({\n        data: {\n          ...this.state.data,\n          sections: newSections\n        },\n        showIcon: false\n      });\n    }\n  }\n\n  createImageControl(key, item, classes) {\n    switch (item.format) {\n      case 'image':\n        return (\n          <div>\n            <input\n              accept=\"image/*\"\n              className={classes.imgInput}\n              style={{ display: \"none\" }}\n              id={key}\n              name={key}\n              type=\"file\"\n              onChange={(event) => this.handleImageUpload(event, this.state.currentSection)}\n            // value={item}\n            />\n            <label htmlFor={key}>\n              <Button component=\"span\">\n                <img src={item.src} className={classes.imgPreview} />\n              </Button>\n              <Typography>\n                {this.props.info.sections.entryFormat.images[key].label}\n              </Typography>\n            </label>\n          </div>);\n      case 'icon':\n        const category = item.src.split('/');\n        const SocialIcon = icons[category[0]].icons[category[1]];\n        return (\n          <div>\n            <IconButton onClick={() => this.setState({ showIcon: true, iconCategory: category[0] })}>\n              <SocialIcon />\n              <Typography>\n                {this.props.info.sections.entryFormat.images[key].label}\n              </Typography>\n            </IconButton>\n            <Modal\n              className={classes.modal}\n              open={this.state.showIcon}\n              // TODO: add onClose save logic\n              onClose={() => this.setState({ showIcon: false })}\n              aria-labelledby=\"Icon picker\"\n              aria-describedby=\"Select an icon\"\n              style={{\n                width: '80%',\n                height: '80%',\n                margin: 'auto',\n                backgroundColor: 'red'\n              }}>\n              <div\n                style={{\n                  height: '100%'\n                }}\n              >\n                <Tabs\n                  value={this.state.iconCategory}\n                  variant=\"scrollable\"\n                  scrollButtons=\"auto\"\n                  onChange={(event, value) => {\n                    console.log(value)\n                    this.setState({ iconCategory: value });\n                  }}\n                >\n                  {Object.entries(icons).map(([key, icon]) => {\n                    return (<Tab label={icon.label} value={key} style={{ width: '80%', height: '80%' }} />)\n                  })}\n                </Tabs>\n                <div className={classes.gridDiv}>\n                  {Object.entries(icons[this.state.iconCategory].icons).map(([iconName, value]) => {\n                    const ReactIcon = value;\n                    return (\n                      <IconButton onClick={() => this.handleIconSelect(key, `${this.state.iconCategory}/${iconName}`, true)}>\n                        <ReactIcon />\n                        <Typography>\n                          {iconName}\n                        </Typography>\n                      </IconButton>);\n                  })}\n                </div>\n              </div>\n            </Modal>\n          </div>);\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    // TODO: change name/id to field-name-id to avoid collision i.e. colours-primary-0\n    return (\n      <div\n        data-html2canvas-ignore=\"true\"\n      >\n        <Fab\n          className={classes.editFAB}\n          onClick={this.handleShowEditor}>\n          <FaEdit />\n        </Fab>\n        <Modal className={classes.modal}\n          // open always set to true, open/close logic handled by portfolio\n          open={this.state.showEditor}\n          // TODO: add onClose save logic\n          onClose={() => this.handleCloseEditor(true)}\n          aria-labelledby=\"Entry editor\"\n          aria-describedby=\"Edit your entry fields here\"\n        >\n          <div className={classes.root}>\n            <Typography component=\"h3\" variant=\"h3\">Entry editor</Typography>\n            <div className={classes.rowDiv}>\n              <div className={classes.styleDiv}>\n                <TextField\n                  id=\"width\"\n                  label=\"width\"\n                  name=\"width\"\n                  value={this.state.data.width}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={(event) => this.handleChange(event, \"\")}\n                  className={classes.styleInput}\n                />\n                <TextField\n                  id=\"height\"\n                  label=\"height\"\n                  name=\"height\"\n                  value={this.state.data.height}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={(event) => this.handleChange(event, \"\")}\n                  className={classes.styleInput}\n                />\n                {Object.entries(this.state.data.fonts).map(([key, item]) => {\n                  return (\n                    <div>\n                      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleFontMenu}>\n                        <Typography variant=\"inherit\" style={{ fontFamily: item }}>\n                          {this.props.info.fonts[key].label}\n                        </Typography>\n                      </Button>\n                      <Menu\n                        name={key}\n                        id={key}\n                        anchorEl={this.state.anchorEl}\n                        keepMounted\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={() => this.setState({ anchorEl: null })}\n                      >\n                        {fonts.map((fontName) => (\n                          <MenuItem onClick={(event) => this.handleUpdateFont(key, fontName)}>\n                            <Typography variant=\"inherit\" style={{ fontFamily: fontName }}>\n                              {fontName}\n                            </Typography>\n                          </MenuItem>\n                        ))}\n                      </Menu>\n                    </div>\n                  )\n                })}\n                {Object.entries(this.state.data.colours).map(([key, item]) => {\n                  return (\n                    <div>\n                      <Input\n                        type=\"color\"\n                        name={key}\n                        id={key}\n                        value={item}\n                        onChange={(event) => this.handleChange(event, \"colours\")}\n                        style={{ width: \"100%\" }}\n                      />\n                      <TextField\n                        name={key}\n                        id={key}\n                        value={item}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={(event) => this.handleChange(event, \"colours\")}\n                      />\n                      <Typography component=\"h6\" variant=\"h6\">\n                        {this.props.info.colours[key].label}\n                      </Typography>\n                    </div>\n                  )\n                })}\n              </div>\n              <div className={classes.colDiv}>\n                <div className={classes.rowDiv}>\n                  <div className={classes.imgGrid}>\n                    {Object.entries(this.state.data.images).map(([key, item]) => {\n                      switch (item.format) {\n                        case 'image':\n                          return (\n                            <div>\n                              <input\n                                accept=\"image/*\"\n                                className={classes.imgInput}\n                                style={{ display: \"none\" }}\n                                id={key}\n                                name={key}\n                                type=\"file\"\n                                onChange={this.handleImageUpload}\n                              // value={item}\n                              />\n                              <label htmlFor={key}>\n                                <Button component=\"span\">\n                                  <img src={item.src} className={classes.imgPreview} />\n                                </Button>\n                                <Typography>\n                                  {this.props.info.images[key].label}\n                                </Typography>\n                              </label>\n                            </div>);\n                        case 'icon':\n                          const category = item.src.split('/');\n                          return (\n                            <div>\n                              <IconButton>\n                                {icons[category[0]].icons[category[1]]}\n                                <Typography>\n                                  {this.props.info.images[key].label}\n                                </Typography>\n                              </IconButton>\n                              <Modal>\n                                <Tabs\n                                  value={this.state.type}\n                                  // onChange={this.handleChange}\n                                  variant=\"scrollable\"\n                                  scrollButtons=\"auto\"\n                                >\n                                  {Object.entries(icons).map(([key, icon]) => {\n                                    return (<Tab label={icon.label} value={icon.label} />)\n                                  })}\n                                </Tabs>\n                                <div className={classes.gridDiv}>\n                                  {Object.entries(icons[this.state.iconCategory].icons).map(([iconName, value]) => {\n                                    console.log(this.state.iconCategory)\n                                    return (\n                                      <IconButton onClick={() => this.handleIconSelect(key, `${this.state.iconCategory}/${iconName}`, false)}>\n                                        <value />\n                                        <Typography>\n                                          {key}\n                                        </Typography>\n                                      </IconButton>);\n                                  })}\n                                </div>\n                              </Modal>\n                            </div>);\n                        default:\n                          return null;\n                      }\n                    })}\n                  </div>\n                  <div className={classes.textGrid}>\n                    {Object.entries(this.state.data.texts).map(([key, item]) => {\n                      return (\n                        <div>\n                          {/* Preview icon that changes according to selected colour */}\n                          {/* <Button id=\"colourPreview\"/> */}\n                          <TextField\n                            name={key}\n                            id={key}\n                            label={this.props.info.texts[key].label}\n                            value={item}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={(event) => this.handleChange(event, \"texts\")}\n                          />\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n                {this.props.info.sections.enabled &&\n                  <div className={classes.sectionDiv}>\n                    <IconButton id=\"left\" onClick={() => this.handleSectionView(-1)}>\n                      <FaChevronLeft />\n                    </IconButton>\n                    {\n                      this.state.currentSection === this.state.data.sections.length\n                        ? <div className={classes.colDiv}>\n                          <Typography component=\"h4\" variant=\"h4\" className={classes.colDiv}>Add new section</Typography>\n                          <div className={classes.addSectionSpacer} />\n                          <IconButton onClick={this.handleCreateEntry}><FaPlus /></IconButton>\n                        </div>\n                        : <div className={classes.colDiv}>\n                          <div className={classes.rowDiv}>\n                            <Typography component=\"h4\" variant=\"h4\" className={classes.colDiv}>Section {this.state.currentSection + 1}</Typography>\n                            <IconButton onClick={(event) => this.handleDeleteSection(event)}><FaTrashAlt /></IconButton>\n                          </div>\n                          <div className={classes.rowDiv}>\n                            <div className={classes.imgGrid}>\n                              {Object.entries(this.state.data.sections[this.state.currentSection].images).map(([key, item]) => {\n                                switch (item.format) {\n                                  case 'image':\n                                    return (\n                                      <div>\n                                        <input\n                                          accept=\"image/*\"\n                                          className={classes.imgInput}\n                                          style={{ display: \"none\" }}\n                                          id={key}\n                                          name={key}\n                                          type=\"file\"\n                                          onChange={(event) => this.handleImageUpload(event, this.state.currentSection)}\n                                        // value={item}\n                                        />\n                                        <label htmlFor={key}>\n                                          <Button component=\"span\">\n                                            <img src={item.src} className={classes.imgPreview} />\n                                          </Button>\n                                          <Typography>\n                                            {this.props.info.sections.entryFormat.images[key].label}\n                                          </Typography>\n                                        </label>\n                                      </div>);\n                                  case 'icon':\n                                    const category = item.src.split('/');\n                                    const SocialIcon = icons[category[0]].icons[category[1]];\n                                    return (\n                                      <div>\n                                        <IconButton onClick={() => this.setState({ showIcon: true, iconCategory: category[0] })}>\n                                          <SocialIcon />\n                                          <Typography>\n                                            {this.props.info.sections.entryFormat.images[key].label}\n                                          </Typography>\n                                        </IconButton>\n                                        <Modal\n                                          className={classes.modal}\n                                          open={this.state.showIcon}\n                                          // TODO: add onClose save logic\n                                          onClose={() => this.setState({ showIcon: false })}\n                                          aria-labelledby=\"Icon picker\"\n                                          aria-describedby=\"Select an icon\"\n                                          style={{\n                                            width: '80%',\n                                            height: '80%',\n                                            margin: 'auto',\n                                            backgroundColor: 'red'\n                                          }}>\n                                          <div\n                                            style={{\n                                              height: '100%'\n                                            }}\n                                          >\n                                            <Tabs\n                                              value={this.state.iconCategory}\n                                              variant=\"scrollable\"\n                                              scrollButtons=\"auto\"\n                                              onChange={(event, value) => {\n                                                console.log(value)\n                                                this.setState({ iconCategory: value });\n                                              }}\n                                            >\n                                              {Object.entries(icons).map(([key, icon]) => {\n                                                return (<Tab label={icon.label} value={key} style={{ width: '80%', height: '80%' }} />)\n                                              })}\n                                            </Tabs>\n                                            <div className={classes.gridDiv}>\n                                              {Object.entries(icons[this.state.iconCategory].icons).map(([iconName, value]) => {\n                                                const ReactIcon = value;\n                                                return (\n                                                  <IconButton onClick={() => this.handleIconSelect(key, `${this.state.iconCategory}/${iconName}`, true)}>\n                                                    <ReactIcon />\n                                                    <Typography>\n                                                      {iconName}\n                                                    </Typography>\n                                                  </IconButton>);\n                                              })}\n                                            </div>\n                                          </div>\n                                        </Modal>\n                                      </div>);\n                                  default:\n                                    return null;\n                                }\n                              })}\n                            </div>\n                            <div className={classes.textGrid}>\n                              {Object.entries(this.state.data.sections[this.state.currentSection].texts).map(([key, item]) => {\n                                // TODO: make maxRow field in info?\n                                return (\n                                  <div>\n                                    <TextField\n                                      name={key}\n                                      id={key}\n                                      label={this.props.info.sections.entryFormat.texts[key].label}\n                                      value={item}\n                                      margin=\"normal\"\n                                      variant=\"outlined\"\n                                      onChange={(event) => this.handleEditSectionText(event)}\n                                      multiline\n                                      rowsMax={3}\n                                    />\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        </div>\n                    }\n                    <IconButton id=\"right\" onClick={() => this.handleSectionView(1)}>\n                      <FaChevronRight />\n                    </IconButton>\n                  </div>}\n              </div>\n            </div>\n            <div className={classes.ctrlDiv}>\n              <Fab variant=\"extended\" onClick={() => this.handleCloseEditor(true)}><FaSave />Save</Fab>\n              <Fab variant=\"extended\" onClick={() => this.handleCloseEditor(false)}><FaTimes />Cancel</Fab>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof EntryEditor\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof EntryEditor\n */\nconst mapDispatchToProps = {\n  repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EntryEditor))","export default __webpack_public_path__ + \"static/media/IntroMinimalist.ec6700a1.JPG\";","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport preview from '../../res/preview/introduction/IntroMinimalist.JPG'\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  std: { display: 'block' },\n  textBox: {\n    backgroundColor: '#FFFFFF',\n    opacity: '75%',\n    padding: '15%',\n    width: 'max-content'\n  }\n});\n\nclass IntroTemplateMinimalist extends Component {\n  constructor() {\n    super();\n  }\n\n  static templateName = \"Minimalist\";\n\n  static preview = preview;\n\n  static info = {\n    fonts: { titleFont: { label: \"title font\" } },\n    colours: { primary: { label: \"primary\" }, secondary: { label: \"secondary\" } },\n    images: { dp: { label: \"Your portrait photo\", format: ['image'] }, bg: { label: \"Entry background\", format: ['image'] } },\n    texts: { name: { label: \"Your full name\" }, status: { label: \"your current position\" } },\n    sections: {}\n  };\n\n  static script = (index) => \"\";\n\n  static defaultField = {\n    width: \"100%\",\n    height: \"80vh\",\n    fonts: { titleFont: \"Roboto\" },\n    colours: { primary: \"#d19a19\", secondary: \"#000000\" },\n    images: { dp: { src: \"https://bit.ly/3fRv2Y2\", format: 'image' }, bg: { src: \"https://bit.ly/2RWO4Ei\", format: 'iamge' } },\n    texts: { name: \"Port Folio\", status: \"UI/UX developer\" },\n    sections: []\n  };\n\n  render() {\n    const { classes, fields } = this.props;\n    return (\n      <div className={classes.root} style={{\n        backgroundRepeat: false,\n        backgroundImage: `url(\"${fields.images.bg.src}\")`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: fields.width,\n        height: fields.height,\n        minHeight: \"1000px\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      }}>\n        <CssBaseline />\n        <div style={{ marginLeft: \"auto\", marginRight: \"10%\" }}>\n          <Box className={classes.textBox}>\n            <Typography component=\"h2\" variant=\"h2\" style={{ color: fields.colours.secondary, fontFamily: \"Arial, Helvetica, sans-serif\" }}>\n              Hello! my name is\n            </Typography>\n            <Typography component=\"h1\" variant=\"h1\" style={{ color: fields.colours.primary, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif` }}>\n              {fields.texts.name}\n            </Typography>\n            <Typography component=\"h2\" variant=\"h2\" style={{ color: fields.colours.secondary, fontFamily: \"Arial, Helvetica, sans-serif\" }}>\n              {fields.texts.status}\n            </Typography>\n          </Box>\n        </div>\n        <img src={fields.images.dp.src} alt=\"my portrait\" style={{ height: \"100%\", width: \"auto\", marginRight: \"auto\" }} />\n      </div>);\n  }\n}\n\nexport default withStyles(styles)(IntroTemplateMinimalist);\n","export default __webpack_public_path__ + \"static/media/TimelineMinimalist.58a9e55e.JPG\";","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport preview from '../../res/preview/timeline/TimelineMinimalist.JPG'\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  std: { display: 'block' },\n  timelineImg: {\n    borderRadius: '50%',\n    height: '5vw',\n    width: '5vw'\n  },\n  title: {\n    margin: '5%'\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'left',\n    textAlign: 'left',\n    width: '50%',\n    margin: '1%'\n  },\n  sectionTextDiv: {\n    marginLeft: '3%',\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\n\nclass TimelineTemplateMinimalist extends Component {\n  constructor() {\n    super();\n  }\n\n  static templateName = \"Minimalist\";\n\n  static script = (index) => \"\";\n\n  static preview = preview;\n\n  static info = {\n    fonts: { titleFont: { label: \"title font\" } },\n    colours: { primary: { label: \"primary\" }, secondary: { label: \"secondary\" } },\n    images: { bg: { label: \"Entry background\", format: ['image'] } },\n    texts: { title: { label: \"Timeline title\" } },\n    sections: {\n      enabled: true,\n      defaultEntry: {\n        images: { timelineImage: { src: \"https://bit.ly/3c3wsNL\", format: 'image' } },\n        texts: { timelineTitle: \"New section\", timelineDate: \"2077\" }\n      },\n      entryFormat: {\n        images: { timelineImage: { label: \"Event Image\", format: ['image'] } },\n        texts: { timelineTitle: { label: \"Event name\" }, timelineDate: { label: \"Event date\" } }\n      }\n    }\n  };\n\n  static defaultField = {\n    width: \"100%\",\n    height: \"fit-content\",\n    fonts: { titleFont: \"roboto\" },\n    colours: { primary: \"#d19a19\", secondary: \"#000000\" },\n    images: { bg: { src: \"https://bit.ly/3i3I9I2\", format: 'image' } },\n    texts: { title: \"My past experiences\" },\n    sections: [{\n      images: { timelineImage: { src: \"https://bit.ly/3hXPM2R\", format: 'image' } },\n      texts: { timelineTitle: \"Portfolio Deployed on Github!\", timelineDate: \"2021\" }\n    },\n    {\n      images: { timelineImage: { src: \"https://bit.ly/3c3wsNL\", format: 'image' } },\n      texts: { timelineTitle: \"Portfolio added to resume\", timelineDate: \"2021\" }\n    }]\n  };\n\n  render() {\n    const { classes, fields } = this.props;\n    return (\n      <div className={classes.root} style={{\n        backgroundRepeat: false,\n        backgroundImage: `url(\"${fields.images.bg.src}\")`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: fields.width,\n        height: fields.height,\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\"\n      }}>\n        <CssBaseline />\n        <Typography\n          component=\"h2\"\n          variant=\"h2\"\n          style={{\n            color: fields.colours.primary,\n            fontFamily: `${fields.fonts.titleFont}, Helvetica, sans-serif`\n          }}\n          className={classes.title}\n        >\n          {fields.texts.title}\n        </Typography>\n        {fields.sections.map((section, index) => {\n          return (\n            <div className={classes.section}>\n              <img src={section.images.timelineImage} className={classes.timelineImg} />\n              <div className={classes.sectionTextDiv}>\n                <Typography\n                  style={{ color: fields.colours.secondary }}\n                  component=\"h5\"\n                  variant=\"h5\"\n                >\n                  {section.texts.timelineDate}\n                </Typography>\n                <Typography\n                  style={{ color: fields.colours.secondary }}\n                  component=\"h5\"\n                  variant=\"h5\"\n                >\n                  {section.texts.timelineTitle}\n                </Typography>\n              </div>\n            </div>\n          );\n        })}\n      </div>);\n  }\n}\n\nexport default withStyles(styles)(TimelineTemplateMinimalist);\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"start\",\n        padding: \"1rem\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: 'auto'\n    }\n})\n\nclass AboutTemplateMinimalist extends Component {\n    static templateName = \"Minimalist\";\n\n    static info = {\n        fonts: {titleFont: {label: \"title font\"}, bodyFont: {label: \"body font\"}},\n        colours: {primary: {label: \"primary\"}, secondary: {label: \"secondary\"}, header: {label: \"header\"}},\n        images: {},\n        texts: {about: {label: \"Self Introduction\"}},\n        sections: {}\n    };\n\n    static preview = \"https://bit.ly/3fwsFKX\";\n\n    static script = (index) => \"\";\n\n    static defaultField = {\n        width: \"60%\", \n        height: \"80vh\", \n        fonts: {titleFont: \"title font\", bodyFont: \"body font\"},\n        colours: {primary: \"#ffffff\", secondary: \"#d5d5d5\", header: \"#e30000\"},\n        images: {},\n        texts: {about: \"Send Help\"},\n        sections: []\n    };\n\n\n\n    render() {\n        const {classes, fields} = this.props\n        return (\n            <div \n                className={classes.root}\n            >\n                <Card\n                    style={{ textAlign: \"center\" }}\n                >\n                        <CardContent>\n                        <Typography \n                            variant=\"h1\"\n                            component=\"h2\" \n                            style={{color: fields.colours.primary, backgroundColor: fields.colours.header, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif`}}\n                        >\n                            About Me\n                        </Typography>\n                        <Typography\n                            variant=\"h3\"\n                            component=\"h4\"\n                            style={{color: fields.colours.secondary, backgroundColor: \"white\", fontFamily: `${fields.fonts.bodyFont}, Arial, Helvetica, sans-serif`}}\n                        >\n                            {fields.texts.about}\n                        </Typography>\n                        </CardContent>\n\n                </Card>\n            </div>\n        )\n    }\n}\n\n\nexport default withStyles(styles)(AboutTemplateMinimalist);\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport { FaGithub } from 'react-icons/fa';\nimport * as icons from '../../styles/icons';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    padding: '15vh'\n  },\n  std: { display: 'block' },\n  title: {\n    margin: '5%'\n  },\n  socialButton: {\n    height: '7vh',\n    width: '7vh',\n    borderRadius: '50%',\n    opacity: '60%',\n    marginInline: '0.5vh',\n    '&:hover': {\n      opacity: '80%',\n      width: '9vh',\n      height: '9vh'\n    }\n  },\n  socialIcon: {\n    height: '5vh',\n    width: '5vh',\n    borderRadius: '50%'\n  }\n});\n\nclass IntroTemplateRedline extends Component {\n  constructor() {\n    super();\n  }\n\n  static templateName = \"Redline\";\n\n  static script = (index) => \"\";\n\n  // static preview = \"https://bit.ly/3fwsFKX\";\n\n  static info = {\n    fonts: { titleFont: { label: 'title font' } },\n    colours: { primary: { label: 'primary' }, secondary: { label: 'secondary' } },\n    images: { bg: { label: 'Entry background', format: ['image'] } },\n    texts: { name: { label: 'Your name' }, status: { label: 'Your current status' } },\n    sections: {\n      enabled: true,\n      defaultEntry: {\n        images: { socialIcon: { src: 'fa/FaGithub', format: 'icon' } },\n        texts: { socialLink: 'https://github.com' }\n      },\n      entryFormat: {\n        images: { socialIcon: { label: 'Icon', format: ['image', 'icon'] } },\n        texts: { socialLink: { label: 'Link' } }\n      }\n    }\n  };\n\n  static defaultField = {\n    width: '100%',\n    height: 'fit-content',\n    fonts: { titleFont: 'Roboto' },\n    colours: { primary: '#dd0000', secondary: '#FFFFFF' },\n    images: { bg: { src: 'https://bit.ly/3gSDGpJ', format: 'image' } },\n    texts: { name: 'Lorem Ipsum', status: 'Developer' },\n    sections: [{\n      images: { socialIcon: { src: 'fa/FaGithub', format: 'icon' } },\n      texts: { socialLink: 'https://github.com' }\n    }]\n  };\n\n  render() {\n    const { classes, fields } = this.props;\n    return (\n      <div className={classes.root} style={{\n        backgroundRepeat: false,\n        backgroundImage: `url(\"${fields.images.bg.src}\")`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: 'fixed',\n        width: fields.width,\n        height: fields.height,\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\"\n      }}>\n        <CssBaseline />\n        <div\n          style={{\n            padding: '5vh',\n            paddingBlock: '10vh',\n            backgroundColor: '#FFFFFF10',\n            width: '100%',\n            height: '100%',\n            border: `solid 1px ${fields.colours.primary}`\n          }}>\n          <Typography component=\"h1\" variant=\"h1\" style={{ color: fields.colours.primary, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif` }}>\n            {fields.texts.name}\n          </Typography>\n          <Typography component=\"h2\" variant=\"h2\" style={{ color: fields.colours.secondary, fontFamily: `${fields.fonts.titleFont}, Arial, Helvetica, sans-serif` }}>\n            {fields.texts.status}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginInline: 'auto',\n              width: 'max-content',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: '8vh',\n              marginTop: '5vh'\n            }}>\n            {fields.sections.map((section, index) => {\n              let SocialIcon;\n              if (section.images.socialIcon.format === 'icon') {\n                const category = section.images.socialIcon.src.split('/');\n                SocialIcon = icons[category[0]].icons[category[1]];\n              } else {\n                SocialIcon = <img src={section.images.socialIcon.src} />;\n              }\n              return (\n                <div className={classes.section}>\n                  <IconButton\n                    onClick={() => window.open(section.texts.socialLink)}\n                    className={classes.socialButton}\n                  >\n                    {<SocialIcon />}\n                  </IconButton>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>);\n  }\n}\n\nexport default withStyles(styles)(IntroTemplateRedline);\n","import React, { Component } from 'react';\nimport IntroTemplateMinimalist from './introduction/IntroTemplateMinimalist';\nimport TimelineTemplateMinimalist from './timeline/TimelineTemplateMinimalist';\nimport AboutTemplateMinimalist from './about/AboutTemplateMinimalist';\nimport IntroTemplateRedline from './introduction/IntroTemplateRedline';\n//  TODO: rename to templates?\n/**\n * @file EntryEditor component to provide a user interface for users to style their entries\n * \n * @author Chuan Hao\n * \n * @see templates\n */\nexport const templates = {\n  introduction: [\n    {\n      name: IntroTemplateMinimalist.templateName, \n      preview: IntroTemplateMinimalist.preview,\n      component: (fields, id) => (<IntroTemplateMinimalist fields={fields} id={id}/>),\n      script: IntroTemplateMinimalist.script,\n      info: IntroTemplateMinimalist.info,\n      defaultField: IntroTemplateMinimalist.defaultField\n    },\n    {\n      name: IntroTemplateRedline.templateName, \n      preview: IntroTemplateRedline.preview,\n      component: (fields, id) => (<IntroTemplateRedline fields={fields} id={id}/>),\n      script: IntroTemplateRedline.script,\n      info: IntroTemplateRedline.info,\n      defaultField: IntroTemplateRedline.defaultField\n    },\n  ],\n  about: [\n    {\n      name: AboutTemplateMinimalist.templateName,\n      preview: AboutTemplateMinimalist.preview,\n      component: (fields, id) => (<AboutTemplateMinimalist fields={fields} id={id}/>),\n      script: AboutTemplateMinimalist.script,\n      info: AboutTemplateMinimalist.info,\n      defaultField: AboutTemplateMinimalist.defaultField\n    }\n  ],\n  timeline: [\n    {\n      name: TimelineTemplateMinimalist.templateName,\n      preview: TimelineTemplateMinimalist.preview,\n      component: (fields, id) => (<TimelineTemplateMinimalist fields={fields} id={id}/>),\n      script: TimelineTemplateMinimalist.script,\n      info: TimelineTemplateMinimalist.info,\n      defaultField: TimelineTemplateMinimalist.defaultField\n    }\n  ]\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Modal, Tab, Tabs, ButtonBase, Card, CardMedia, CardContent, Fab } from '@material-ui/core';\nimport { templates } from '../templates/Templates';\nimport { FaTimes, FaPlus } from 'react-icons/fa';\n\n\n/**\n * @file User Interface to allow users to pick a template for their portfolios\n * \n * @author Chuan Hao\n * \n * @see TemplateSelector\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * @param theme \n * @returns classes passed as props to the component, with values provided by parameter theme\n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2%',\n    textAlign: 'center',\n    backgroundColor: '#444444',\n    opacity: '90%',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  },\n  modal: {\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '5vh',\n    height: '100%'\n  },\n  buttonBase: {\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column'\n  },\n  card: {\n    width: 345,\n    minHeight: 150,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    maxHeight: 200,\n    overflow: 'hidden'\n  },\n  fab: {\n    marginTop: 'auto',\n    marginLeft: 'auto'\n  },\n  cardDiv: {\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: 'repeat(auto-fill, 345px)',\n    gridGap: '55px',\n    justifyContent: 'center',\n    overflowY: 'auto'\n  },\n  controlFAB: {\n    position: 'static',\n    marginRight: '0.5vw',\n    marginBottom: '0.5vw'\n  }\n})\n\n/**\n * User interface to allow users to select templates for each entry.\n * \n * @component\n */\nclass TemplateSelector extends Component {\n  /**\n   * Populates state with fields passed in as attribute fields.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelector: false,\n      type: \"introduction\",\n      style: 0\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCloseSelector = this.handleCloseSelector.bind(this);\n  }\n\n  /**\n   * Attempts to fetch entry details where possible so settings are saved.\n   * \n   * @property {Function} componentDidMount\n   * @return void\n   * @memberof TemplateSelector\n   */\n  componentDidMount() {\n    // is this necessary if template is a widget\n    if (!this.props.loggedIn) {\n      const localStorageItem = JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      this.props.repopulate_state(localStorageItem)\n    }\n  }\n\n  /**\n   * Event handler to update states to reflect the selected category.\n   * \n   * @param {*} event \n   * @param {string} newValue The category of entries selected.\n   */\n  handleChange(event, newValue) {\n    this.setState({\n      type: newValue\n    });\n  }\n\n  /**\n   * Event handler to create the selected entry.\n   * \n   * @param {number} id The index of the selected style.\n   */\n  handleSelect(id) {\n    this.handleCloseSelector({\n      type: this.state.type,\n      style: id\n    })\n  }\n\n  handleCloseSelector(values) {\n    if (values !== undefined) {\n      this.props.onClose(values)\n    }\n    this.setState({\n      showSelector: false\n    })\n  }\n\n  // MODAL TAKES IN A SINGLE JSX ELEMENT\n  render() {\n    const { classes } = this.props;\n    // TODO: change name/id to field-name-id to avoid collision i.e. colours-primary-0\n    return (\n      <div>\n        <Fab\n          className={classes.controlFAB}\n          onClick={() => this.setState({ showSelector: true })}>\n          <FaPlus />\n        </Fab>\n        <Modal className={classes.modal}\n          // open always set to true, open/close logic handled by portfolio\n          open={this.state.showSelector}\n          // TODO: add onClose save logic\n          onClose={() => this.handleCloseSelector()}\n          aria-labelledby=\"Template Selector\"\n          aria-describedby=\"Select a template.\"\n        >\n          <div className={classes.root}>\n            <Tabs\n              value={this.state.type}\n              onChange={this.handleChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              {Object.keys(templates).map((type) => {\n                return (<Tab label={type} value={type} />)\n              })}\n            </Tabs>\n            <div className={classes.cardDiv}>\n              {\n                templates[this.state.type].map((entry, index) => {\n                  return (<Card className={classes.card}>\n                    <ButtonBase\n                      focusRipple\n                      key={index}\n                      className={classes.buttonBase}\n                      // focusVisibleClassName={}\n                      onClick={() => this.handleSelect(index)}\n                      name={index}\n                    >\n                      <CardMedia\n                        component=\"img\"\n                        alt={entry.name}\n                        image={entry.preview}\n                        title={entry.name}\n                        className={classes.cardMedia}\n                      />\n                      <CardContent>\n                        <Typography>{entry.name}</Typography>\n                      </CardContent>\n                    </ButtonBase>\n                  </Card>)\n                })\n              }\n            </div>\n            <Fab variant=\"extended\" onClick={() => this.handleCloseSelector()} className={classes.fab}>\n              <FaTimes />\n                CANCEL\n              </Fab>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof TemplateSelector\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof TemplateSelector\n */\nconst mapDispatchToProps = {\n  repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TemplateSelector))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { repopulate_state } from '../actions/LoginAction';\r\nimport axios from 'axios';\r\n\r\n//MUI component imports\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { FaUpload, FaTimes, FaRegCopy } from 'react-icons/fa';\r\n\r\n\r\n\r\n/**\r\n * @file Publish component representing user interface for publishing portfolios to ghpages.\r\n * \r\n * @author Chen En\r\n * \r\n * @see Publish\r\n */\r\n\r\n/**\r\n * Style generator to dynamically adjust styles based on theme provided\r\n * \r\n * @memberof Publish\r\n * @param {Object} theme \r\n */\r\nconst styles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'start',\r\n        alignItems: 'center'\r\n    },\r\n    actionFAB: {\r\n        position: 'static',\r\n        marginRight: '0.5vw',\r\n        marginBottom: '0.5vw',\r\n        textAlign: 'center'\r\n    }\r\n})\r\n\r\n/**\r\n * The publish component renders functionalities to allow user to publish their\r\n * portfolio to ghpages.\r\n * \r\n * The component contains state variables repositoryHTML, repositoryCSS, repositoryJS.\r\n * \r\n * @component\r\n */\r\nclass Publish extends Component {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            finalizeDialogState: false,\r\n            overrideDialogState: false,\r\n            repositoryName: \"\",\r\n            repositoryContent: [],\r\n            anchorEl: null,\r\n            publishLoading: false,\r\n            statusState: false,\r\n            publishError: false,\r\n            publishErrorMessage: \"\",\r\n            pageUrl: \"\",\r\n            pageCheckIntervalTask: null\r\n        }\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleFinalizeDialogOpen = this.handleFinalizeDialogOpen.bind(this);\r\n        this.handleFinalizeDialogClose = this.handleFinalizeDialogClose.bind(this);\r\n        this.handleOverrideDialogOpen = this.handleOverrideDialogOpen.bind(this);\r\n        this.handleOverrideDialogClose = this.handleOverrideDialogClose.bind(this);\r\n        this.handleFinalizeEdits = this.handleFinalizeEdits.bind(this);\r\n        this.handleOverrideAllowed = this.handleOverrideAllowed.bind(this);\r\n        this.handlePushToGithub = this.handlePushToGithub.bind(this);\r\n        this.handleCheckPageStatus = this.handleCheckPageStatus.bind(this);\r\n        this.handleStatusClose = this.handleStatusClose.bind(this);\r\n        this.handleCopyClipboard = this.handleCopyClipboard.bind(this);\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles onChange events. Changes a state variable under the name of the event target to value provided by user.\r\n     *\r\n     * @param {Object} event\r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleOnChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the opening of finalize dialog by setting state boolean finalizeDialogState to true.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleFinalizeDialogOpen() {\r\n\r\n        const pushables = this.props.createPushables();\r\n        console.log(pushables)\r\n\r\n        this.setState({\r\n            repositoryContent: pushables\r\n        })\r\n\r\n        this.setState({\r\n            anchorEl: null,\r\n            finalizeDialogState: true\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles the closing of finalize dialog by setting state boolean finalizeDialogState to false.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleFinalizeDialogClose() {\r\n        this.setState({\r\n            finalizeDialogState: false\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles the opening of override dialog by setting state boolean overrideDialogState to true.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleOverrideDialogOpen() {\r\n        this.setState({\r\n            overrideDialogState: true\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles the closing of override dialog by setting state boolean overrideDialogState to false.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    handleOverrideDialogClose() {\r\n        this.setState({\r\n            overrideDialogState: false\r\n        })\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * This handles the event whereby override button in override dialog is clicked. It calls and\r\n     * wait for handlePushToGithub() to complete before closing the override dialog.\r\n     *\r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    async handleOverrideAllowed() {\r\n        console.log(`Override permission given to push to ${this.state.repositoryName} and toggle pages for it`)\r\n        //no need to await this\r\n        this.handlePushToGithub();\r\n        this.setState({\r\n            overrideDialogState: false\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Sends a PUT request to backend API which will take over and handle the pushing to specified Github\r\n     * repository and its deployment to ghpages if not already done so. \r\n     * \r\n     * The PUT request requires route (The path relative to Github repository root to push to), repo (The\r\n     * name of Github repository to push to) and content (An array of objects representing files to be pushed).\r\n     * \r\n     * For testing purposes, route is fixed to \"\" for now so that pushing will be done to the root of specified \r\n     * Github repository.\r\n     * \r\n     * Note: For files within sub directories, the path can be prepended to the filename like so \"folder/index.html\"\r\n     * \r\n     * Note: This clears out the repositoryContent after the PUT request is completed.\r\n     * \r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    async handlePushToGithub() {\r\n        console.log(`files are being pushed to ${this.state.repositoryName}`)\r\n        //reset loading, error and error message\r\n        this.setState({\r\n            publishLoading: true,\r\n            publishError: false,\r\n            publishErrorMessage: \"\",\r\n            statusState: false,\r\n            pageCheckIntervalTask: setInterval(this.handleCheckPageStatus, 15000)\r\n        });\r\n\r\n        await axios({\r\n            method: \"PUT\",\r\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/publishGithub\",\r\n            withCredentials: true,\r\n            data: {\r\n                route: \"\",\r\n                content: this.state.repositoryContent,\r\n                repo: this.state.repositoryName\r\n            }\r\n        }).then(res => {\r\n            console.log(res.data.message);\r\n        }).catch(err => {\r\n            if (err.response) {\r\n                console.log(err.response.data);\r\n            } else {\r\n                console.log(err.message);\r\n            }\r\n            \r\n            this.setState({\r\n                publishLoading: false,\r\n                publishError: true,\r\n                publishErrorMessage: \"Failed to push files to Github\",\r\n                statusState: true\r\n            })\r\n            if (this.state.pageCheckIntervalTask) {\r\n                window.clearInterval(this.state.pageCheckIntervalTask);\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            repositoryContent: []\r\n        })\r\n    }\r\n\r\n    /**\r\n     * This handles the event whereby the finalize button in finalize dialog is clicked. A GET request is sent to\r\n     * backend API to check for existing Github repository of specified name under the user's Github account and sends a POST\r\n     * request to create a new Github repository if there are none.\r\n     * \r\n     * If a new repository is created, this then calls and waits for handlePushToGithub() to complete before closing\r\n     * the finalize dialog.\r\n     * \r\n     * If a Github repository exists, this then opens an override dialog to warn and ask user for permission to overwrite the\r\n     * exisiting Github repository's content.\r\n     *\r\n     * @return void\r\n     * @memberof Publish\r\n     */\r\n    async handleFinalizeEdits() {\r\n        console.log(\"chosen repository name is \" + this.state.repositoryName)\r\n        await axios({\r\n            method: \"GET\",\r\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/checkExistingRepos\",\r\n            withCredentials: true,\r\n            params: {\r\n                repo: this.state.repositoryName\r\n            }\r\n        }).then(async res => {\r\n            console.log(res.data.message)\r\n            //waits for repository to be created\r\n            await axios({\r\n                method: \"POST\",\r\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/createRepo\",\r\n                withCredentials: true,\r\n                data: {\r\n                    repo: this.state.repositoryName\r\n                }\r\n            }).then(response => {\r\n                console.log(response.data.message)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    console.log(err.response.data);\r\n                } else {\r\n                    console.log(err.message);\r\n                }\r\n            })\r\n\r\n            //no need to wait for push to go through\r\n            this.handlePushToGithub();\r\n        }).catch(err => {\r\n            if (err.response) {\r\n                console.log(err.response.data);\r\n            } else {\r\n                console.log(err.message);\r\n            }\r\n\r\n            this.setState({\r\n                overrideDialogState: true\r\n            })\r\n        })\r\n\r\n        //Intentional: closes finalizeDialog but doesn't remove repository name.\r\n        //TODO: Repository name should not be set in dialog, but in some easily visible spot.\r\n        this.setState({\r\n            finalizeDialogState: false\r\n        })\r\n    }\r\n\r\n    async handleCheckPageStatus() {\r\n        if (this.state.repositoryName !== \"\") {\r\n            await axios({\r\n                method: \"GET\",\r\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/pageStatus\",\r\n                withCredentials: true,\r\n                params: {\r\n                    repo: this.state.repositoryName\r\n                }\r\n            }).then(res => {\r\n                console.log(res.data.status);\r\n                if (res.data.status === \"built\" || res.data.status === \"errored\") {\r\n                    if (this.state.pageCheckIntervalTask) {\r\n                        window.clearInterval(this.state.pageCheckIntervalTask);\r\n                    }\r\n                    if (res.data.status === \"built\") {\r\n                        this.setState({\r\n                            publishLoading: false,\r\n                            pageUrl: res.data.url,\r\n                            statusState: true\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            publishLoading: false,\r\n                            publishError: true,\r\n                            publishErrorMessage: \"Github page deployment failed\",\r\n                            statusState: true\r\n                        })\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    console.log(err.response.data);\r\n                } else {\r\n                    console.log(err.message);\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handleStatusClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({\r\n            publishLoading: false,\r\n            publishError: false,\r\n            publishErrorMessage: \"\",\r\n            statusState: false\r\n        })\r\n    }\r\n\r\n    handleCopyClipboard() {\r\n        navigator.clipboard.writeText(this.state.pageUrl)\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Fab\r\n                    size='large'\r\n                    aria-label='publish panel'\r\n                    aria-controls='simple-menu'\r\n                    aria-haspopup='true'\r\n                    className={classes.actionFAB}\r\n                    onClick={this.handleFinalizeDialogOpen}\r\n                >\r\n                    {this.state.publishLoading ? <CircularProgress size=\"2rem\"/> : <FaUpload />}\r\n                </Fab>\r\n\r\n                <Snackbar\r\n                    key=\"Github Page Status\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    open={this.state.statusState}\r\n                    onClose={this.handleStatusClose}\r\n                    TransitionComponent={props => <Slide {...props} direction=\"up\" />}\r\n                >\r\n                    <SnackbarContent\r\n                        style={{backgroundColor: '#303030', color: 'white'}}\r\n                        message={this.state.publishError ? this.state.publishErrorMessage : this.state.pageUrl}\r\n                        action={\r\n                            <React.Fragment>\r\n                                {!this.state.publishError\r\n                                    ?\r\n                                        <Button onClick={this.handleCopyClipboard}>\r\n                                            <FaRegCopy/>\r\n                                        </Button>\r\n                                    :\r\n                                        <div/>\r\n                                }\r\n                                <Button\r\n                                    onClick={this.handleStatusClose}\r\n                                >\r\n                                    <FaTimes/>\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n\r\n                    \r\n                </Snackbar>\r\n\r\n                <Dialog\r\n                    open={this.state.finalizeDialogState}\r\n                    onClose={this.handleFinalizeDialogClose}\r\n                    aria-labelledby=\"repo name input\"\r\n                >\r\n                    <DialogTitle id=\"repo name input\">\r\n                        Repository Name\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ color: \"white\" }}>\r\n                            Choose a Github repository name to save portfolio edits\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            name=\"repositoryName\"\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Repository Name\"\r\n                            type=\"string\"\r\n                            defaultValue={this.state.repositoryName}\r\n                            fullWidth\r\n                            onChange={this.handleOnChange}\r\n                            InputLabelProps={{\r\n                                style: { color: \"whitesmoke\" },\r\n                            }}\r\n                            InputProps={{\r\n                                color: 'secondary'\r\n                            }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleFinalizeDialogClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleFinalizeEdits}>\r\n                            Finalize\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.overrideDialogState}\r\n                    onClose={this.handleOverrideDialogClose}\r\n                    aria-labelledby=\"override permission input\"\r\n                >\r\n                    <DialogTitle id=\"override permission input\">\r\n                        Warning!\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Repository already exists. This will override data in your existing repository and could lead to possible data loss! Do you still wish to continue?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleOverrideDialogClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleOverrideAllowed}>\r\n                            Allow Override\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Function that maps variables from Redux Store to Home component's props.\r\n *\r\n * @param {Object} state - Redux Store\r\n * @memberof EntryEditor\r\n */\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.login.loggedIn,\r\n\r\n})\r\n\r\n/** \r\n * Provides action creators to Home component's props.\r\n * \r\n * @type {Object.<Function>} \r\n * @memberof EntryEditor\r\n */\r\nconst mapDispatchToProps = {\r\n    repopulate_state\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Publish))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport { Typography, Modal, Icon, Tab, Tabs, ButtonBase, Card, CardMedia, CardContent, Fab, TextField } from '@material-ui/core';\nimport { TreeItem } from '@material-ui/lab';\nimport { templates } from '../templates/Templates';\nimport { FaPlus, FaSave, FaTimes, FaLink } from 'react-icons/fa';\n\n\n/**\n * @file User Interface to allow users to switch between views.\n * \n * @author Chuan Hao\n * \n * @see DirectoryManager\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * @param theme \n * @returns classes passed as props to the component, with values provided by parameter theme\n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2%',\n    textAlign: 'center',\n    backgroundColor: '#444444',\n    opacity: '90%',\n    height: '100%',\n  },\n  modal: {\n    overflow: 'scroll',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '5%',\n    height: '100%'\n  },\n  controlFAB: {\n    position: 'static',\n    marginRight: '0.5vw',\n    marginBottom: '0.5vw'\n  },\n  treeItem: {\n    '&$treeItemSelected > $treeItemContent': {\n      backgroundColor: '#F00'\n    }\n  },\n  treeItemSelected: {\n  },\n  treeItemExpanded: {\n    // borderLeft: '1px dashed #FFF',\n  },\n  treeItemGroup: {\n    marginLeft: 7,\n    paddingLeft: 18,\n    borderLeft: '1px dashed #FFF'\n  },\n  treeItemContent: {},\n  treeView: {\n    textAlign: 'left'\n  },\n  textField: {},\n  hide: {\n    display: 'none'\n  }\n})\n\nconst RENAME = 0;\nconst CREATE = 1;\n\n/**\n * User interface to allow users to select templates for each entry.\n * \n * @component\n */\nclass DirectoryManager extends Component {\n  /**\n   * Populates state with fields passed in as attribute fields.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: this.props.dirTree,\n      currentPath: [],\n      showInput: false,\n      dirTree: this.props.dirTree,\n      showDirectory: false,\n      dirName: \"\",\n      inputMode: RENAME,\n      expanded: []\n    }\n    this.handleSelectPage = this.handleSelectPage.bind(this);\n    this.renderTree = this.renderTree.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDeletePage = this.handleDeletePage.bind(this);\n    this.handleRenameDirectory = this.handleRenameDirectory.bind(this);\n  }\n\n  /**\n   * Attempts to fetch entry details where possible so settings are saved.\n   * \n   * @property {Function} componentDidMount\n   * @return void\n   * @memberof DirectoryManager\n   */\n  componentDidMount() {\n    // is this necessary if template is a widget\n    if (!this.props.loggedIn) {\n      const localStorageItem = JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE))\n      this.props.repopulate_state(localStorageItem)\n    }\n  }\n\n  /**\n   * Event handler to update states to reflect the selected page.\n   * \n   * @param {*} event \n   * @param {object} node The id of the page selected. \n   * MUI api indicates node is supposed to be a string but object seems to work.\n   */\n  handleSelectPage(event, node, path) {\n    // preventDefault prevents onNodeToggle from being called.\n    event.preventDefault();\n    this.setState({\n      currentPage: node,\n      currentPath: path\n    });\n  }\n\n  /**\n   * A function to recursively render the directory tree\n   * @param {Map} dirTree the directory tree map to be used\n   * @param {*} folder the name of the current folder\n   * @returns JSX component containing the TreeItem to be rendered\n   */\n  renderTree(dirTree, folder, classes, directoryArray) {\n\n    return (\n      <TreeItem\n        value={folder}\n        nodeId={folder}\n        label={folder}\n        classes={{\n          root: classes.treeItem,\n          selected: classes.treeItemSelected,\n          // expanded: classes.treeItemExpanded,\n          content: classes.treeItemContent,\n          group: classes.treeItemGroup\n        }}\n        onLabelClick={(event) => this.handleSelectPage(event, dirTree, directoryArray)}\n      >\n        {Object.entries(dirTree.directories).map(([key, item]) => {\n          return this.renderTree(item, key, classes, [...directoryArray, key]);\n        })}\n      </TreeItem>\n    );\n  }\n\n  // TODO: can combine with other directory tree traversals to imporve code reuse\n  /**\n   * Auxillary function to get a directory from a path array\n   * \n   * @param {[string]} pageArray the array of directories to be traversed\n   * @param {{map}} dirTree the current directory\n   * @param {number} index the index of the current durectory in pageArray\n   * @returns {object} The parent directory if successful, undefined otherwise.\n   */\n  getPage(pageArray, dirTree, index) {\n    // TODO: test if === causes any bugs -- >= might cause unexpected behaviour down the line\n    if (index >= pageArray.length) {\n      // prevent overwriting\n      if (dirTree === undefined) return undefined;\n      return dirTree;\n    }\n    else {\n      return this.getPage(pageArray, dirTree.directories[pageArray[index]], index + 1);\n    }\n  }\n\n  /**\n   * Event handler to create a new page\n   * \n   * @param {string} newName the name of the new page\n   */\n  handleCreatePage(newName) {\n    const newDirTree = JSON.parse(JSON.stringify(this.state.dirTree));\n    const parent = this.getPage(this.state.currentPath, newDirTree, 0);\n    console.log(this.state.currentPath)\n    console.log(parent);\n    console.log(newDirTree);\n    const newPage = {\n      directory: newName,\n      entries: [],\n      directories: {},\n      id: undefined\n    };\n    parent.directories[newName] = newPage;\n\n    this.props.onUpdate(newDirTree);\n    console.log(this.state)\n    this.setState({\n      dirTree: newDirTree,\n      currentPage: parent,\n      showInput: false\n    })\n  }\n\n  /**\n   * Event handler to update portfolio preview on directory change\n   * @param {boolean} save whether the user wishes to change the view to the selected directory\n   */\n  handleCloseDirectory(save) {\n    this.props.onClose(this.state.currentPage, this.state.currentPath);\n    this.setState({\n      showDirectory: false\n    })\n  }\n\n  /**\n   * Generic event handler for updating state via componenent name\n   * @param {*} event \n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  /**\n   * Event handler for renaming a directory\n   */\n  handleRenameDirectory() {\n    const pageArray = [...this.state.currentPath];\n    const oldName = pageArray.pop();\n    const newDirTree = JSON.parse(JSON.stringify(this.state.dirTree));\n    const parent = this.getPage(pageArray, newDirTree, 0);\n\n    parent.directories[this.state.dirName] = parent.directories[oldName];\n    delete parent.directories[oldName]\n    // const from = [];\n    // const to = [];\n    // this.renameDirectory(parent.directories[this.state.dirName], this.state.dirName, from, to);\n\n    this.props.onUpdate(newDirTree);\n    this.setState({\n      dirTree: newDirTree,\n      currentPath: [...pageArray, this.state.dirName],\n      currentPage: parent.directories[this.state.dirName],\n      dirName: '',\n      showInput: false\n    })\n  }\n\n  handleDeletePage() {\n    const newDirTree = JSON.parse(JSON.stringify(this.state.dirTree));\n    const directoryArray = [...this.state.currentPath];\n\n    if (directoryArray === []) {\n      alert('Root directory cannot be deleted.')\n    }\n\n    const pageName = directoryArray.pop();\n    const parent = this.getPage(directoryArray, newDirTree, 0);\n\n    // TODO: send flattened delete array to check if mongo needs to delete anything\n    // const child = parent.directories[pageName];\n    // const flatten = (page) => {\n    //   Object.entries(page.directories).map(([key, item]) => flatten(item));\n    // }\n    // flatten(child);\n\n    // TODO: offer option to merge child subdirectories to parent\n    const copy = { ...parent.directories };\n    // TODO: change mutations in this file to use fp via filter and Object.entries\n    delete copy[pageName];\n    parent.directories = copy;\n    this.props.onUpdate(newDirTree);\n    console.log(directoryArray)\n    this.setState({\n      dirTree: newDirTree,\n      currentPage: parent,\n      currentPath: directoryArray\n    })\n  }\n\n  // TODO: add props dirTree={name:\"\", directory:\"\", id:number, directories:[]}\n  // root page should not be renamed, since directory.root is hardcoded.\n  render() {\n    const { classes } = this.props;\n    // should only have 1 root element for object.keys[0] to work\n    return (\n      <div>\n        <Fab\n          className={classes.controlFAB}\n          onClick={() => this.setState({\n            showDirectory: true,\n            currentPage: this.props.dirTree,\n            currentPath: [],\n            ...this.props.getState()\n          })}>\n          <FaLink />\n        </Fab>\n        <Modal className={classes.modal}\n          open={this.state.showDirectory}\n          onClose={() => this.handleCloseDirectory(true)}\n          aria-labelledby=\"Directory Manager\"\n          aria-describedby=\"Select a page.\"\n        >\n          <div className={classes.root}>\n            <Fab variant=\"extended\" onClick={() => { this.handleCloseDirectory(false) }}>\n              <FaTimes />\n            </Fab>\n            <TreeView\n              defaultCollapseIcon={<FaTimes />}\n              defaultExpandIcon={<FaSave />}\n              expanded={this.state.expanded}\n              // onNodeSelect={this.handleSelectPage}\n              onNodeToggle={(event, nodeIds) => this.setState({ expanded: nodeIds })}\n              className={classes.treeView}\n            >\n              {this.renderTree(this.state.dirTree, \"root\", classes, [])}\n            </TreeView>\n            <TextField\n              id=\"dirName\"\n              label=\"directory name\"\n              name=\"dirName\"\n              value={this.state.dirName}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={this.handleChange}\n              className={this.state.showInput ? classes.textField : classes.hide}\n            />\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.setState({ showInput: true, inputMode: CREATE })}\n              className={!this.state.showInput || this.state.inputMode !== CREATE ? classes.controlFAB : classes.hide}>\n              <FaPlus />\n              New page\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.setState({ showInput: true, inputMode: RENAME })}\n              className={!this.state.showInput || this.state.inputMode !== RENAME ? classes.controlFAB : classes.hide}>\n              <FaPlus />\n              Rename page\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.handleCreatePage(this.state.dirName)}\n              className={this.state.showInput && this.state.inputMode === CREATE ? classes.controlFAB : classes.hide}>\n              Create\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={(event) => this.handleRenameDirectory(this.state.dirName)}\n              className={this.state.showInput && this.state.inputMode === RENAME ? classes.controlFAB : classes.hide}>\n              Rename\n            </Fab>\n            <Fab\n              variant=\"extended\"\n              onClick={this.handleDeletePage}>\n              Delete page\n            </Fab>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof TemplateSelector\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof TemplateSelector\n */\nconst mapDispatchToProps = {\n  repopulate_state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DirectoryManager))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { repopulate_state } from '../actions/LoginAction';\nimport { saveCurrentWork, saveCurrentWorkToLocal, toggleUnsavedWork } from '../actions/PortfolioAction.js';\nimport { ThemeProvider, withStyles } from '@material-ui/core/styles'\nimport { Fab } from '@material-ui/core';\nimport { FaSave, FaTrash } from \"react-icons/fa\";\nimport { Base64 } from 'js-base64';\nimport ReactDOMServer from 'react-dom/server';\nimport { ServerStyleSheets } from '@material-ui/core/styles'\nimport EntryEditor from './EntryEditor';\nimport { templates } from '../templates/Templates';\nimport TemplateSelector from './TemplateSelector';\nimport Publish from './Publish';\nimport axios from 'axios';\nimport DirectoryManager from './DirectoryManager';\nimport { Prompt, withRouter } from 'react-router-dom';\nimport { theme } from '../styles/styles';\nimport html2canvas from 'html2canvas';\nimport FormData from 'form-data';\n\n/**\n * @file Portfolio component representing a user created portfolio\n * \n * @author Chuan Hao\n * \n * @see Portfolio\n */\n\n/**\n * Style generator to dynamically adjust styles based on theme provided\n * \n * @memberof Portfolio\n * @param {Object} theme \n */\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    alignItems: 'center',\n    paddingTop: '7%',\n  },\n  entryDiv: {\n    position: 'relative'\n  },\n  delFAB: {\n    position: 'absolute',\n    marginTop: '5vw',\n    marginLeft: '2vw'\n  },\n  controlFAB: {\n    position: 'static',\n    marginRight: '0.5vw',\n    marginBottom: '0.5vw'\n  },\n  staticDiv: {\n    position: 'fixed',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    bottom: \"5%\",\n    right: \"5%\",\n    top: \"auto\",\n    left: \"auto\"\n  }\n})\n\n/**\n * The portfolio component used for rendering previews and compiling for publishing.\n * \n * \n * @component\n */\nclass Portfolio extends Component {\n  /**\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: true,\n      portfolio_id: undefined,\n      name: \"\",\n      pages: {\n        directory: 'root',\n        entries: [],\n        directories: {},\n        id: 'root_mongo_id'\n      },\n      currentPage: undefined,\n      currentPath: [],\n      // dirTree: {\n      //   directory: 'root',\n      //   id: \"root_mongo_id\",\n      //   pages:\n      //     {}\n      // },\n      isTimerExist: false\n    }\n    this.state.currentPage = this.state.pages\n    this.handleEditorClose = this.handleEditorClose.bind(this);\n    this.handleCreateFile = this.handleCreateFile.bind(this);\n    this.handleProduction = this.handleProduction.bind(this);\n    this.handleSelector = this.handleSelector.bind(this);\n    this.handleUpdatePages = this.handleUpdatePages.bind(this);\n    this.handleDirectory = this.handleDirectory.bind(this);\n    this.handleSavePortfolio = this.handleSavePortfolio.bind(this);\n    this.handleUploadPreview = this.handleUploadPreview.bind(this);\n  }\n\n  /**\n   * Attempts to fetch user details and logged in status from localStorage after component is rendered.\n   * \n   * @return void\n   * @memberof Portfolio\n   */\n  async componentDidMount() {\n    if (!this.props.loggedIn) {\n      const userLocalStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_USER_LOCALSTORAGE));\n      const portfolioLocalStorageItem = await JSON.parse(window.localStorage.getItem(process.env.REACT_APP_AUTOSAVE_LOCALSTORAGE));\n      await this.props.repopulate_state(userLocalStorageItem);\n      await this.props.saveCurrentWork(portfolioLocalStorageItem);\n    }\n\n    //The rationale behind using this.state.name as the check is that name would be set before the user enters\n    if (this.props.loggedIn) {\n      if (this.props.currentPortfolio !== null) {\n        //Need to set the relevant _id, name, pages if portfolio exists.\n        //Redux state currentPortfolio is set such that if its not null, it will have name.\n        this.setState({\n          name: this.props.currentPortfolio.name\n        })\n\n        if (this.props.currentPortfolio._id !== undefined && this.props.currentPortfolio.pages !== undefined) {\n          this.setState({\n            portfolio_id: this.props.currentPortfolio._id,\n            pages: this.props.currentPortfolio.pages,\n            currentPage: this.props.currentPortfolio.pages\n          })\n        }\n      }\n    }\n  }\n\n  /**\n   * componentDidUpdate checks when isUnsaved is changed and triggers a timer to autosave so that we will not save\n   * while the user is actively editing his Portfolio.\n   * \n   * First sets isTimerExist in state to true\n   * \n   * After timer is up, saves current portfolio to localStorage and redux state. \n   * \n   * The timer is now set to 3s after any edit is done.\n   * \n   * @return void\n   * @memberof Portfolio\n   */\n  // componentDidUpdate() {\n  //   if (this.props.isUnsaved && !this.state.isTimerExist) {\n  //     setTimeout(async () => {\n  //       console.log(\"Autosaving\")\n\n  //       await this.handleSavePortfolio();\n\n  //       // this.props.saveCurrentWorkToLocal({\n  //       //   _id: this.state.portfolio_id,\n  //       //   name: this.state.name,\n  //       //   pages: this.state.pages\n  //       // });\n  //       this.props.toggleUnsavedWork(false);\n\n  //       //Sets isTimerExist to false after saving so new timers can be set.\n  //       this.setState({\n  //         isTimerExist: false\n  //       })\n  //     }, 3000);\n\n  //     //Sets isTimerExist to true so we don't queue multiple unnecessary save timers\n  //     this.setState({\n  //       isTimerExist: true\n  //     });\n  //   }\n  // }\n\n  /**\n   * Function to enter entries based on the entry's type and template style.\n   * \n   * @param {*} entryFields \n   * @param {number} index \n   * @returns void\n   * @memberof Portfolio\n   */\n  renderEntry(entryFields, index) {\n    return templates[entryFields.type][entryFields.style].component(entryFields, index);\n  }\n\n  traverseDirectory(pages, pathArray) {\n    let ptr = pages;\n    for (let index = 0; index < pathArray.length; index++) {\n      ptr = ptr.directories[pathArray[index]];\n    }\n    return ptr;\n  }\n\n  /**\n   * Event handler to open/close the template selector and update states if necessary\n   * \n   * @param {*} selection - the fields to update, or null if no changes are needed\n   */\n  handleSelector(selection) {\n    const entryType = selection.type;\n    const entryStyle = selection.style;\n    const fieldsCopy = JSON.parse(JSON.stringify(templates[entryType][entryStyle].defaultField));\n    const newEntry = {\n      type: entryType,\n      style: entryStyle,\n      ...fieldsCopy\n    };\n    const newPages = { ...this.state.pages };\n    const currentPage = this.traverseDirectory(newPages, this.state.currentPath);\n    currentPage.entries =\n      [...this.state.currentPage.entries, newEntry];\n    this.setState({\n      pages: newPages,\n      currentPage: currentPage\n    })\n\n    //triggers Autosave\n    this.props.toggleUnsavedWork(true);\n  }\n\n  /**\n   * Function to update the entry based on the styles provided by the user.\n   * \n   * @param {*} fields\n   * @param {boolean} changed - Whether the fields have been changed/ if the user intends to save the changes.\n   */\n  handleEditorClose(fields, changed, index) {\n    if (changed) {\n      const newPages = { ...this.state.pages };\n      const entries = [...this.state.currentPage.entries];\n      entries[index] = fields;\n      const currentPage = this.traverseDirectory(newPages, this.state.currentPath)\n      currentPage.entries = entries;\n      this.setState({\n        pages: newPages,\n        currentPage: currentPage\n      })\n\n      //triggers Autosave\n      this.props.toggleUnsavedWork(true);\n    } else {\n      this.forceUpdate();\n    }\n  }\n\n  // TODO: publish component check file empty before load?\n  /**\n   * A function to generate the necessary html/css/js files for a single page.\n   * \n   * @param {*} entries \n   * @param {string} directory - The directory/route to the page as defined by the user.\n   * @returns {(Map|Array)} An array of maps containing the relative paths to each file and their contents.\n   * \n   */\n  handleCreateFile(page, prepend) {\n    // Allow users to create empty pages so they can create their own pages\n    const entries = page.entries;\n    console.log(page);\n    if (entries === []) return [];\n\n    // removes 'root' placeholder\n    console.log(page.directory)\n    const directory = `${prepend}${page.directory === 'root' ? '' : page.directory + \"/\"}`;\n    const images = [];\n    console.log(entries);\n\n    const copy = JSON.parse(JSON.stringify(entries));\n    for (let idx = 0; idx < copy.length; idx++) {\n      let dupeEntry = copy[idx];\n      Object.entries(dupeEntry.images).map(([key, item]) => {\n        if (item.format === 'image' && item.src.startsWith('data:image/')) {\n          const split = item.src.split(',');\n          const fileType = split[0].substring(11, split[0].indexOf(';'));\n          const baseContent = split[1];\n          console.log(baseContent);\n          const imgDir = `assets/${key}${idx}.${fileType}`;\n          images.push({\n            file: `${directory}${imgDir}`,\n            contents: baseContent\n          });\n          copy[idx].images[key] = imgDir;\n        }\n        // copy.images[key] = `${directory}/${key}.jpg`\n      })\n      for (let s_idx = 0; s_idx < dupeEntry.sections.length; s_idx++) {\n        let dupeSection = dupeEntry.sections[s_idx];\n        Object.entries(dupeSection.images).map(([key, item]) => {\n          if (item.format === 'image' && item.src.startsWith('data:image/')) {\n            const split = item.src.split(',');\n            const fileType = split[0].substring(11, split[0].indexOf(';'));\n            const baseContent = split[1];\n            const size = baseContent.length * 3 / 4 - baseContent.split('=')\n            console.log(baseContent);\n            const imgDir = `assets/${key}${idx}_section${s_idx}.${fileType}`;\n            images.push({\n              file: `${directory}${imgDir}`,\n              contents: baseContent\n            });\n            copy[idx].sections[s_idx].images[key] = imgDir;\n          }\n          // copy.images[key] = `${directory}/${key}.jpg`\n        })\n      }\n    }\n\n    const sheets = new ServerStyleSheets();\n    // TODO: test renderToStaticMarkup\n    //NOTE: sheets.collect will look for mui styling in the provided component.\n    //We also need to wrap that component with the theme we are using so that the style can reference it properly\n    //Suspect that because certain styles are missing, their defaults may be injected into our app, resulting in default css styles.\n    const rawHTML = ReactDOMServer.renderToString(sheets.collect(\n      <ThemeProvider theme={theme}>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          {copy.map((entry, index) => this.renderEntry(entry))}\n        </div>\n      </ThemeProvider>\n    ));\n    // TODO: add title\n    // TODO: remove empty files\n    const html = Base64.encode(`\n            <!DOCTYPE html>\n            <html lang=\"en\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n                <link href=\"styles.css\" rel=\"stylesheet\">\n                <script defer src=\"script.js\"></script>\n                <title>Welcome</title>\n            </head>\n            <body>\n            ${rawHTML}\n            </body>`);\n    const css = Base64.encode(sheets.toString());\n    const js = Base64.encode(copy\n      .map((entry, index) => templates[entry.type][entry.style].script(index))\n      .filter(Boolean).join('\\n'));\n\n    let files = [\n      ...images,\n      {\n        file: `${directory}scripts.js`,\n        contents: js\n      },\n      {\n        file: `${directory}index.html`,\n        contents: html\n      },\n      {\n        file: `${directory}styles.css`,\n        contents: css\n      }\n    ]\n\n    // inefficient code, might be able to optimise\n    if (page.directories !== {}) {\n      Object.values(page.directories).map((value) => {\n        console.log(value);\n        const fileArray = this.handleCreateFile(value, directory);\n        files = files.concat(fileArray);\n      })\n    }\n    console.log(files);\n    return files;\n  }\n\n  /**\n   * Handles saving portfolio to mongoDB\n   * \n   * @returns void\n   * @memberof Portfolio\n   */\n  async handleSavePortfolio() {\n    console.log(\"saving begins\");\n    console.log(this.state.pages);\n    await axios({\n      method: \"PUT\",\n      url: process.env.REACT_APP_BACKEND + \"/portfolio/upsert\",\n      withCredentials: true,\n      data: {\n        user: {\n          id: this.props.id,\n          name: this.props.name,\n          avatar: this.props.avatar_url,\n          gravatar_id: this.props.gravatar_id\n        },\n        portfolio: {\n          _id: this.state.portfolio_id,\n          name: this.state.name,\n          pages: this.state.pages\n        }\n      }\n    }).then(async res => {\n      console.log(res.data.message);\n      //Need to set the id first to fetch it after this.\n      this.setState({\n        portfolio_id: res.data._id\n      })\n\n      //If saving/updating is successful, need to fetch from db to get the ObjectIds created by mongoose for the portfolio, pages and entries.\n      //WARNING: Could be a source of poor performance. Might be a better way to do this.\n      await axios({\n        method: \"GET\",\n        url: process.env.REACT_APP_BACKEND + \"/portfolio/\" + this.state.portfolio_id,\n        withCredentials: true\n      }).then(async res => {\n        console.log(\"_id updated\");\n        console.log(res.data.portfolio);\n        this.props.saveCurrentWorkToLocal(res.data.portfolio);\n        //There is no need to set the _id for portfolio since we already did it as a prerequisite for this step.\n        //Name is also set.\n        this.setState({\n          pages: res.data.portfolio.pages\n        });\n        console.log(this.state.pages);\n\n        //After _id is fetched, we then update the preview.\n        await this.handleUploadPreview();\n      }).catch(err => {\n        if (err.response) {\n          console.log(err.response.data);\n        } else {\n          console.log(err.message);\n        }\n\n        //If code comes to here, it means _id is not fetched after save is successful. We bring the user\n        //back to dashboard to force him to reopen and fetch the portfolio again.\n        this.props.history.push(\"/dashboard\");\n      })\n\n    }).catch(err => {\n      if (err.response) {\n        console.log(err.response.data);\n      } else {\n        console.log(err.message);\n      }\n    })\n  }\n\n\n\n  /**\n   * A function to generate all files needed to be pushed to github.\n   * @returns {(Map|Array)} An array of maps each containing the relative paths to each file and their contents.\n   */\n  handleProduction() {\n\n    const fileArray = this.handleCreateFile(this.state.pages, '');\n    fileArray.map((value) => alert(`file: ${value.file};\\n${Base64.decode(value.contents)}`));\n    let renameArray = [];\n    fileArray.map((obj) => {\n      renameArray.push({\n        fileName: obj.file,\n        fileContent: obj.contents\n      })\n    });\n    console.log(renameArray);\n\n    return renameArray;\n  }\n\n  /**\n   * A function to delete entries from a portfolio\n   * \n   * @param {number} index the index of the entry to be deleted\n   * @returns void\n   * @memberof Portfolio\n   */\n  handleDeleteEntry(index) {\n    const newPages = { ...this.state.pages };\n    let ptr = newPages;\n    const currentPage = this.traverseDirectory(newPages, this.state.currentPath);\n    currentPage.entries =\n      this.state.currentPage.entries.filter(\n        (item, filterIndex) => (filterIndex !== index)\n      );\n    this.setState({\n      pages: newPages,\n      currentPage: currentPage\n    });\n\n    //triggers Autosave\n    this.props.toggleUnsavedWork(true);\n  }\n\n  handleUpdatePages(newDirTree) {\n    this.state.pages = newDirTree;\n    this.state.currentPage = newDirTree;\n    this.state.currentPath = [];\n\n    //Triggers autosave\n    this.props.toggleUnsavedWork(true);\n  }\n\n  handleDirectory(currentPage, currentPath) {\n    if (currentPage !== undefined) {\n      this.state.currentPage = currentPage;\n      this.state.currentPath = currentPath;\n    }\n    this.forceUpdate();\n  }\n\n\n  async handleUploadPreview() {\n    await html2canvas(document.querySelector(\"#preview\"), { backgroundColor: null, useCORS: true })\n      .then(canvas => {\n\n        canvas.toBlob(async blob => {\n          const bodyFormData = new FormData();\n          bodyFormData.append('file', new File([blob], `${this.state.name} preview`, { type: \"image/png\" }));\n          bodyFormData.append('label', \"preview\");\n\n          await axios({\n            method: \"GET\",\n            url: process.env.REACT_APP_BACKEND + \"/portfolio/checkExistingImage/\" + this.state.portfolio_id,\n            withCredentials: true,\n            params: {\n              label: \"preview\"\n            }\n          }).then(async res => {\n            if (res.data.isExist) {\n              console.log(\"updating image\")\n              await axios({\n                method: \"PUT\",\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/updateImage/\" + this.state.portfolio_id,\n                withCredentials: true,\n                data: bodyFormData,\n                headers: { \"Content-Type\": \"multipart/form-data\" }\n              }).then(res => {\n                console.log(res.data.message);\n              }).catch(err => {\n                if (err.response) {\n                  console.log(err.response.data);\n                } else {\n                  console.log(err.message);\n                }\n              })\n            } else {\n              console.log(\"uploading image\");\n              await axios({\n                method: \"POST\",\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/uploadImage/\" + this.state.portfolio_id,\n                withCredentials: true,\n                data: bodyFormData,\n                headers: { \"Content-Type\": \"multipart/form-data\" }\n              }).then(res => {\n                console.log(res.data.message);\n                console.log(res.data.refs);\n              }).catch(async err => {\n                if (err.response) {\n                  console.log(err.response.data);\n                } else {\n                  console.log(err.message);\n                }\n              });\n            }\n          }).catch(err => {\n            if (err.response) {\n              console.log(err.response.data);\n            } else {\n              console.log(err.message);\n            }\n          })\n        }\n        )\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  // TODO: move editor components and logic into component files\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Prompt\n          when={this.props.isUnsaved}\n          message={JSON.stringify({\n            message: \"Are you sure you want to leave? You have unsaved work.\",\n            portfolio: {\n              _id: this.state.portfolio_id,\n              name: this.state.name,\n              pages: this.state.pages\n            },\n            user: {\n              id: this.props.id,\n              name: this.props.name,\n              avatar: this.props.avatar_url,\n              gravatar_id: this.props.gravatar_id\n            }\n          })}\n        />\n\n        <div id=\"preview\">\n          {this.state.currentPage.entries.map((entry, index) => {\n            // Key MUST be unique -> component will be reinitialized if key is different.\n            return (<div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <EntryEditor\n                fields={entry}\n                info={templates[entry.type][entry.style].info}\n                onClose={(data, changed) => {\n                  this.handleEditorClose(data, changed, index);\n                }}\n                key={`${this.state.currentPath === []\n                  ? 'root'\n                  : this.state.currentPath[this.state.currentPath.length - 1]\n                  }-${index}-${entry.type}-${entry.style}`}\n              />\n              <Fab\n                data-html2canvas-ignore=\"true\"\n                className={classes.delFAB}\n                onClick={() => this.handleDeleteEntry(index)}>\n                <FaTrash />\n              </Fab>\n              {this.renderEntry(entry)}\n            </div>);\n          })}\n        </div>\n        <div className={classes.staticDiv}>\n          <Fab\n            className={classes.controlFAB}\n            onClick={() => console.log(this.handleSavePortfolio())}>\n            <FaSave />\n          </Fab>\n          <TemplateSelector\n            onClose={this.handleSelector}\n          />\n          <DirectoryManager\n            onClose={this.handleDirectory}\n            getState={() => {\n              return {\n                dirTree: this.state.pages\n              }\n            }}\n            dirTree={this.state.pages}\n            onUpdate={this.handleUpdatePages}\n          />\n          <Publish createPushables={this.handleProduction}/>\n        </div>\n      </div>);\n  }\n}\n\n/**\n * Function that maps variables from Redux Store to Home component's props.\n *\n * @param {Object} state - Redux Store\n * @memberof Portfolio\n */\nconst mapStateToProps = state => ({\n  loggedIn: state.login.loggedIn,\n  name: state.login.name,\n  id: state.login.id,\n  avatar_url: state.login.avatar_url,\n  gravatar_id: state.login.gravatar_id,\n  currentPortfolio: state.portfolio.currentPortfolio,\n  isUnsaved: state.portfolio.isUnsaved\n})\n\n/** \n * Provides action creators to Home component's props.\n * \n * @type {Object.<Function>} \n * @memberof Portfolio\n */\nconst mapDispatchToProps = {\n  repopulate_state,\n  saveCurrentWork,\n  saveCurrentWorkToLocal,\n  toggleUnsavedWork\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Portfolio)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst UserConfirmation = (message, callback) => {\r\n\r\n\r\n\r\n    const textObj = JSON.parse(message);\r\n\r\n    const container = document.createElement(\"div\");\r\n    container.setAttribute(\"custom-confirmation-navigation\", \"\");\r\n    document.body.appendChild(container);\r\n\r\n    /**\r\n     * If callbackState is false, user decides to not leave the page.\r\n     * If callbackState is true, user decides to leave the page. There is a need to\r\n     * ask the user if he wishes to save or discard work.\r\n     *\r\n     * @param {*} callbackState Boolean with which the callback function takes.\r\n     * @param {*} isSave Boolean indicating whether to save current work or not.\r\n     */\r\n    const closeModal = async (callbackState, isSave) => {\r\n        ReactDOM.unmountComponentAtNode(container);\r\n        document.body.removeChild(container);\r\n        //if callbackState is true, then user wants to leave portfolio. Save for him.\r\n        if (isSave) {\r\n            await axios({\r\n                method: \"PUT\",\r\n                url: process.env.REACT_APP_BACKEND + \"/portfolio/upsert\",\r\n                withCredentials: true,\r\n                data: {\r\n                    user: textObj.user,\r\n                    portfolio: textObj.portfolio\r\n                }\r\n            }).then(res => {\r\n                console.log(res.data.message);\r\n                callback(true);\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    console.log(err.response.data);\r\n                } else {\r\n                    console.log(err.message);\r\n                }\r\n                console.log(\"failure to save, returning to portfolio to retry\");\r\n                callback(false)\r\n            })\r\n        } else {\r\n            callback(callbackState);\r\n        }\r\n        \r\n     };\r\n\r\n    \r\n    ReactDOM.render(\r\n        <Dialog\r\n            open={true}\r\n            aria-labelledby=\"prompt-dialog\"\r\n            aria-describedby=\"prompt-dialog\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle\r\n                id=\"promp-title\"\r\n            >\r\n                Alert\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText\r\n                    id=\"prompt-text\"\r\n                >\r\n                    {textObj.message}\r\n                </DialogContentText>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => closeModal(false, false)}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => closeModal(true, false)}\r\n                    >\r\n                        Discard unsaved work\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => closeModal(true, true)}\r\n                    >\r\n                        Save work\r\n                    </Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>,\r\n        container\r\n    )\r\n    \r\n}\r\n\r\nexport default UserConfirmation;\r\n","/**\n * LoginReducer exports reducers which is a function that determines changes to an application's state.\n * \n * @module LoginReducer\n * @author Chen En\n * @category Reducer\n */\n\nimport { \n    LOG_IN_USER,\n    LOG_OUT_USER,\n    REPOPULATE_STATE\n} from '../actions/LoginAction';\n\n/** \n * string representing guest user.\n * \n * @type {string}\n * @member GUEST\n */\nconst GUEST = \"Guest\"\n\n/** \n * state that the login reducer is initialized with.\n * \n * @typedef initialState\n * @property {boolean} loggedIn - logged in status of user.\n * @property {string} name - Github name of user.\n * @property {string} id - Unique Github id of user.\n * @property {string} avatar_url - url representing image of user's Github avatar\n * @property {string} gravatar_id - url representing user's globally recognized avatar\n * @property {Object} error - error response provided by requests.\n * @member initialState\n */\nconst initialState = {\n    loggedIn: false,\n    name: GUEST,\n    id: '',\n    avatar_url: '',\n    gravatar_id: '',\n    error: null\n}\n\n/**\n * string representing absent user.\n * \n * @type {string}\n * @member MISSING\n */\nexport const MISSING = ''\n\n//TODO handle actions for GUEST\n\n/**\n * A reducer function that maintains and changes the initialState \n * by processing actions dispatched to it.\n * \n * @param {Object} [state=initialState] - initialState is fixed.\n * @param {Object} action - Action object.\n * @return void \n * @member login\n * @function\n */\nexport default function login(state = initialState, action) {\n    switch(action.type) {\n        case LOG_IN_USER:\n            return {\n                ...state,\n                name: action.payload.name,\n                id: action.payload.id,\n                avatar_url: action.payload.avatar_url,\n                gravatar_id: action.payload.gravatar_id,\n                loggedIn: true\n            }\n        case LOG_OUT_USER:\n            return {\n                ...state,\n                name: GUEST,\n                id: MISSING,\n                avatar_url: MISSING,\n                gravatar_id: MISSING,\n                loggedIn: false\n            }\n        case REPOPULATE_STATE:\n            return {\n                ...state,\n                loggedIn: action.payload.loggedIn,\n                name: action.payload.name,\n                id: action.payload.id,\n                avatar_url: action.payload.avatar_url,\n                gravatar_id: action.payload.gravatar_id\n            }\n        default:\n            return state\n    }\n}","/**\n * PortfolioReducer exports reducers which is a function that determines changes to an application's state.\n * \n * @module PortfolioReducer\n * @author Chen En\n * @category Reducer\n */\n\nimport {\n    FETCH_PORTFOLIOS_BEGIN,\n    FETCH_PORTFOLIOS_SUCCESS,\n    FETCH_PORTFOLIOS_FAILURE,\n    SAVE_CURRENT_WORK,\n    CLEAR_CURRENT_WORK,\n    TOGGLE_UNSAVED_WORK\n} from '../actions/PortfolioAction'\n\n/** \n * @typedef initialState\n * @property {Array.<Object>} portfolios - Array containing objects containing details about user portfolios.\n * @property {boolean} loading - boolean indicating loading status\n * @property {Object} error - error object from a failed request\n * @property {Object} currentPortfolio - object containing details about user's current portfolio work.\n * @member initialState\n */\nconst initialState = {\n    portfolios: [],\n    loading: false,\n    error: null,\n    currentPortfolio: null,\n    isUnsaved: false\n}\n\n/**\n * A reducer function that maintains and changes the initialState \n * by processing actions dispatched to it.\n * \n * @param {Object} [state=initialState] - initialState is fixed.\n * @param {Object} action - Action object.\n * @return void \n * @member portfolio\n * @function\n */\nexport default function portfolio(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PORTFOLIOS_BEGIN:\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_PORTFOLIOS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                portfolios: action.payload.portfolios\n            }\n        case FETCH_PORTFOLIOS_FAILURE:\n            //if failure, means user is unauthorized. clear portfolios and current_work\n            return {\n                ...state,\n                loading: false,\n                portfolios: [],\n                currentPortfolio: null,\n                error: action.payload.err\n            }\n        case SAVE_CURRENT_WORK:\n            return {\n                ...state,\n                currentPortfolio: action.payload.curr\n            }\n        case CLEAR_CURRENT_WORK:\n            return {\n                ...state,\n                currentPortfolio: null\n            }\n        case TOGGLE_UNSAVED_WORK:\n            return {\n                ...state,\n                isUnsaved: action.payload.bool\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport login from \"./LoginReducer\"\nimport portfolio from \"./PortfolioReducer\"\n\n\n/**\n * @file Combines reducers into one using combineReducers function.\n * \n * @module RootReducer\n * @author Chen En\n * @category Reducer\n */\n\nexport default combineReducers({\n  login,\n  portfolio\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport LoginResult from './components/LoginResult';\nimport Dashboard from './components/Dashboard';\nimport Portfolio from './components/Portfolio';\nimport Publish from './components/Publish';\nimport UserConfirmation from './components/UserConfirmation';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './styles/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n\n/**\n * @file index.js is the root file for this Portfol.io app\n * \n * @author Chen En\n * @author Chuan Hao\n */\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme = {theme}>\n      <BrowserRouter\n        getUserConfirmation={(message, callback) => UserConfirmation(message, callback)}\n      >\n        <Provider store = {store}>\n          <Switch>\n            <Route exact path = '/' component = {Home}></Route>\n            <>\n              <Navbar/>\n                <Route exact path = '/login/callback' component = {LoginResult}></Route>\n                <Route exact path = '/dashboard' component = {Dashboard}></Route>\n                <Route exact path = '/edit' component = {Portfolio}></Route>\n                <Route exact path = '/publish' component = {Publish}></Route>\n            </>\n          </Switch>\n        </Provider>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}